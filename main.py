{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Season</th>\n",
       "      <th>DayNum</th>\n",
       "      <th>WTeamID</th>\n",
       "      <th>WScore</th>\n",
       "      <th>LTeamID</th>\n",
       "      <th>LScore</th>\n",
       "      <th>WLoc</th>\n",
       "      <th>NumOT</th>\n",
       "      <th>WFGM</th>\n",
       "      <th>WFGA</th>\n",
       "      <th>...</th>\n",
       "      <th>LFGA3</th>\n",
       "      <th>LFTM</th>\n",
       "      <th>LFTA</th>\n",
       "      <th>LOR</th>\n",
       "      <th>LDR</th>\n",
       "      <th>LAst</th>\n",
       "      <th>LTO</th>\n",
       "      <th>LStl</th>\n",
       "      <th>LBlk</th>\n",
       "      <th>LPF</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2003</td>\n",
       "      <td>10</td>\n",
       "      <td>1104</td>\n",
       "      <td>68</td>\n",
       "      <td>1328</td>\n",
       "      <td>62</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>27</td>\n",
       "      <td>58</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>10</td>\n",
       "      <td>22</td>\n",
       "      <td>8</td>\n",
       "      <td>18</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2003</td>\n",
       "      <td>10</td>\n",
       "      <td>1272</td>\n",
       "      <td>70</td>\n",
       "      <td>1393</td>\n",
       "      <td>63</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>62</td>\n",
       "      <td>...</td>\n",
       "      <td>24</td>\n",
       "      <td>9</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2003</td>\n",
       "      <td>11</td>\n",
       "      <td>1266</td>\n",
       "      <td>73</td>\n",
       "      <td>1437</td>\n",
       "      <td>61</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>24</td>\n",
       "      <td>58</td>\n",
       "      <td>...</td>\n",
       "      <td>26</td>\n",
       "      <td>14</td>\n",
       "      <td>23</td>\n",
       "      <td>31</td>\n",
       "      <td>22</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2003</td>\n",
       "      <td>11</td>\n",
       "      <td>1296</td>\n",
       "      <td>56</td>\n",
       "      <td>1457</td>\n",
       "      <td>50</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>38</td>\n",
       "      <td>...</td>\n",
       "      <td>22</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>17</td>\n",
       "      <td>20</td>\n",
       "      <td>9</td>\n",
       "      <td>19</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2003</td>\n",
       "      <td>11</td>\n",
       "      <td>1400</td>\n",
       "      <td>77</td>\n",
       "      <td>1208</td>\n",
       "      <td>71</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "      <td>61</td>\n",
       "      <td>...</td>\n",
       "      <td>16</td>\n",
       "      <td>17</td>\n",
       "      <td>27</td>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>12</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Season  DayNum  WTeamID  WScore  LTeamID  LScore WLoc  NumOT  WFGM  WFGA  \\\n",
       "0    2003      10     1104      68     1328      62    N      0    27    58   \n",
       "1    2003      10     1272      70     1393      63    N      0    26    62   \n",
       "2    2003      11     1266      73     1437      61    N      0    24    58   \n",
       "3    2003      11     1296      56     1457      50    N      0    18    38   \n",
       "4    2003      11     1400      77     1208      71    N      0    30    61   \n",
       "\n",
       "   ...  LFGA3  LFTM  LFTA  LOR  LDR  LAst  LTO  LStl  LBlk  LPF  \n",
       "0  ...     10    16    22   10   22     8   18     9     2   20  \n",
       "1  ...     24     9    20   20   25     7   12     8     6   16  \n",
       "2  ...     26    14    23   31   22     9   12     2     5   23  \n",
       "3  ...     22     8    15   17   20     9   19     4     3   23  \n",
       "4  ...     16    17    27   21   15    12   10     7     1   14  \n",
       "\n",
       "[5 rows x 34 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "file_path = 'C:\\\\Users\\\\XUN\\\\Desktop\\\\project_myself\\\\MRegularSeasonDetailedResults.csv'\n",
    "df = pd.read_csv(file_path)\n",
    "\n",
    "# 筛选出第133天及以前的数据\n",
    "df_filtered = df[df['DayNum'] <= 133]\n",
    "\n",
    "# 显示筛选后的前几行数据\n",
    "df_filtered.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2003,\n",
       " 2004,\n",
       " 2005,\n",
       " 2006,\n",
       " 2007,\n",
       " 2008,\n",
       " 2009,\n",
       " 2010,\n",
       " 2011,\n",
       " 2012,\n",
       " 2013,\n",
       " 2014,\n",
       " 2015,\n",
       " 2016,\n",
       " 2017,\n",
       " 2018,\n",
       " 2019,\n",
       " 2020,\n",
       " 2021,\n",
       " 2022,\n",
       " 2023,\n",
       " 2024]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Group the data by season\n",
    "grouped_by_season = df_filtered.groupby('Season')\n",
    "\n",
    "# This dictionary will store the grouped dataframes by season\n",
    "grouped_dataframes = {season: group for season, group in grouped_by_season}\n",
    "\n",
    "# Displaying the keys to confirm the grouping\n",
    "list(grouped_dataframes.keys())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "建立表格"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TeamID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1106</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   TeamID\n",
       "0    1102\n",
       "1    1103\n",
       "2    1104\n",
       "3    1105\n",
       "4    1106"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a new DataFrame for each year with unique team IDs\n",
    "team_dataframes = {}\n",
    "\n",
    "for season, group in grouped_dataframes.items():\n",
    "    # Extract unique team IDs (both winners and losers)\n",
    "    unique_teams = pd.concat([group['WTeamID'], group['LTeamID']]).unique()\n",
    "    unique_teams.sort()  # Sorting the team IDs for readability\n",
    "    # Create a new DataFrame with these team IDs\n",
    "    team_df = pd.DataFrame(unique_teams, columns=['TeamID'])\n",
    "    # Store this DataFrame in the dictionary\n",
    "    team_dataframes[season] = team_df\n",
    "\n",
    "# Display an example DataFrame for one season to check the structure\n",
    "team_dataframes[2006].head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "加入获胜率"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TeamID</th>\n",
       "      <th>WinRate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1102</td>\n",
       "      <td>0.785714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1103</td>\n",
       "      <td>0.464286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1104</td>\n",
       "      <td>0.586207</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1105</td>\n",
       "      <td>0.448276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1106</td>\n",
       "      <td>0.533333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   TeamID   WinRate\n",
       "0    1102  0.785714\n",
       "1    1103  0.464286\n",
       "2    1104  0.586207\n",
       "3    1105  0.448276\n",
       "4    1106  0.533333"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Iterate over each season's DataFrame to calculate win rates for each team\n",
    "for season, group in grouped_dataframes.items():\n",
    "    # Calculate win counts and loss counts for each team\n",
    "    win_counts = group['WTeamID'].value_counts()\n",
    "    loss_counts = group['LTeamID'].value_counts()\n",
    "    \n",
    "    # Initialize a list to store win rates\n",
    "    win_rates = []\n",
    "    \n",
    "    # Calculate win rate for each team in the season\n",
    "    for team_id in team_dataframes[season]['TeamID']:\n",
    "        wins = win_counts.get(team_id, 0)\n",
    "        losses = loss_counts.get(team_id, 0)\n",
    "        total_games = wins + losses\n",
    "        win_rate = wins / total_games if total_games > 0 else 0\n",
    "        win_rates.append(win_rate)\n",
    "    \n",
    "    # Add the win rates as a new column to the DataFrame\n",
    "    team_dataframes[season]['WinRate'] = win_rates\n",
    "\n",
    "# Display an example DataFrame for one season to check the new column\n",
    "team_dataframes[2004].head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "计算后面13个指标（都取平均值）"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define the columns that represent the game statistics we're interested in\n",
    "# Assuming these are the detailed stats columns for both winning and losing teams\n",
    "stats_columns = [\n",
    "    'FGM', 'FGA', 'FGM3', 'FGA3', 'FTM', 'FTA', 'OR', 'DR', 'Ast', 'TO', 'Stl', 'Blk', 'PF'\n",
    "]\n",
    "\n",
    "# Iterate over each season to calculate average stats for each team\n",
    "for season, group in grouped_dataframes.items():\n",
    "    # Initialize a dictionary to store average stats for each team\n",
    "    team_avg_stats = {team_id: {stat: 0 for stat in stats_columns} for team_id in team_dataframes[season]['TeamID']}\n",
    "    \n",
    "    # Calculate average stats for winning teams\n",
    "    for stat in stats_columns:\n",
    "        win_stats = group.groupby('WTeamID')[f'W{stat}'].mean()\n",
    "        for team_id, avg in win_stats.items():\n",
    "            if team_id in team_avg_stats:\n",
    "                team_avg_stats[team_id][stat] = avg\n",
    "                \n",
    "    # Calculate average stats for losing teams, and combine with win stats for total average\n",
    "    for stat in stats_columns:\n",
    "        loss_stats = group.groupby('LTeamID')[f'L{stat}'].mean()\n",
    "        for team_id, avg in loss_stats.items():\n",
    "            if team_id in team_avg_stats:\n",
    "                # Combine win and loss stats to get total average, weighted by number of games won/lost\n",
    "                wins = group[group['WTeamID'] == team_id].shape[0]\n",
    "                losses = group[group['LTeamID'] == team_id].shape[0]\n",
    "                total_games = wins + losses\n",
    "                if total_games > 0:  # Avoid division by zero\n",
    "                    win_avg = team_avg_stats[team_id][stat] * (wins / total_games)\n",
    "                    loss_avg = avg * (losses / total_games)\n",
    "                    team_avg_stats[team_id][stat] = win_avg + loss_avg\n",
    "    \n",
    "    # Add the calculated averages to the DataFrame\n",
    "    for stat in stats_columns:\n",
    "        team_dataframes[season][stat] = team_dataframes[season]['TeamID'].apply(lambda id: team_avg_stats[id].get(stat, 0))\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TeamID</th>\n",
       "      <th>WinRate</th>\n",
       "      <th>FGM</th>\n",
       "      <th>FGA</th>\n",
       "      <th>FGM3</th>\n",
       "      <th>FGA3</th>\n",
       "      <th>FTM</th>\n",
       "      <th>FTA</th>\n",
       "      <th>OR</th>\n",
       "      <th>DR</th>\n",
       "      <th>Ast</th>\n",
       "      <th>TO</th>\n",
       "      <th>Stl</th>\n",
       "      <th>Blk</th>\n",
       "      <th>PF</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1101</td>\n",
       "      <td>0.592593</td>\n",
       "      <td>24.592593</td>\n",
       "      <td>56.074074</td>\n",
       "      <td>6.481481</td>\n",
       "      <td>20.592593</td>\n",
       "      <td>17.111111</td>\n",
       "      <td>23.037037</td>\n",
       "      <td>10.037037</td>\n",
       "      <td>21.814815</td>\n",
       "      <td>13.592593</td>\n",
       "      <td>14.740741</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>2.666667</td>\n",
       "      <td>22.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1102</td>\n",
       "      <td>0.354839</td>\n",
       "      <td>24.838710</td>\n",
       "      <td>55.096774</td>\n",
       "      <td>8.580645</td>\n",
       "      <td>23.225806</td>\n",
       "      <td>13.967742</td>\n",
       "      <td>19.290323</td>\n",
       "      <td>7.419355</td>\n",
       "      <td>24.741935</td>\n",
       "      <td>14.483871</td>\n",
       "      <td>12.451613</td>\n",
       "      <td>4.967742</td>\n",
       "      <td>1.225806</td>\n",
       "      <td>16.870968</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1103</td>\n",
       "      <td>0.758621</td>\n",
       "      <td>24.965517</td>\n",
       "      <td>57.137931</td>\n",
       "      <td>9.172414</td>\n",
       "      <td>25.310345</td>\n",
       "      <td>15.620690</td>\n",
       "      <td>20.344828</td>\n",
       "      <td>9.517241</td>\n",
       "      <td>27.620690</td>\n",
       "      <td>12.655172</td>\n",
       "      <td>12.586207</td>\n",
       "      <td>4.896552</td>\n",
       "      <td>2.862069</td>\n",
       "      <td>17.931034</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1104</td>\n",
       "      <td>0.516129</td>\n",
       "      <td>27.548387</td>\n",
       "      <td>63.096774</td>\n",
       "      <td>10.774194</td>\n",
       "      <td>30.870968</td>\n",
       "      <td>16.129032</td>\n",
       "      <td>23.258065</td>\n",
       "      <td>11.709677</td>\n",
       "      <td>27.645161</td>\n",
       "      <td>14.225806</td>\n",
       "      <td>14.903226</td>\n",
       "      <td>6.322581</td>\n",
       "      <td>4.387097</td>\n",
       "      <td>20.225806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1105</td>\n",
       "      <td>0.266667</td>\n",
       "      <td>21.866667</td>\n",
       "      <td>57.566667</td>\n",
       "      <td>5.133333</td>\n",
       "      <td>18.266667</td>\n",
       "      <td>12.633333</td>\n",
       "      <td>18.833333</td>\n",
       "      <td>9.633333</td>\n",
       "      <td>24.833333</td>\n",
       "      <td>10.866667</td>\n",
       "      <td>13.133333</td>\n",
       "      <td>5.800000</td>\n",
       "      <td>2.100000</td>\n",
       "      <td>17.933333</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   TeamID   WinRate        FGM        FGA       FGM3       FGA3        FTM  \\\n",
       "0    1101  0.592593  24.592593  56.074074   6.481481  20.592593  17.111111   \n",
       "1    1102  0.354839  24.838710  55.096774   8.580645  23.225806  13.967742   \n",
       "2    1103  0.758621  24.965517  57.137931   9.172414  25.310345  15.620690   \n",
       "3    1104  0.516129  27.548387  63.096774  10.774194  30.870968  16.129032   \n",
       "4    1105  0.266667  21.866667  57.566667   5.133333  18.266667  12.633333   \n",
       "\n",
       "         FTA         OR         DR        Ast         TO       Stl       Blk  \\\n",
       "0  23.037037  10.037037  21.814815  13.592593  14.740741  9.000000  2.666667   \n",
       "1  19.290323   7.419355  24.741935  14.483871  12.451613  4.967742  1.225806   \n",
       "2  20.344828   9.517241  27.620690  12.655172  12.586207  4.896552  2.862069   \n",
       "3  23.258065  11.709677  27.645161  14.225806  14.903226  6.322581  4.387097   \n",
       "4  18.833333   9.633333  24.833333  10.866667  13.133333  5.800000  2.100000   \n",
       "\n",
       "          PF  \n",
       "0  22.000000  \n",
       "1  16.870968  \n",
       "2  17.931034  \n",
       "3  20.225806  \n",
       "4  17.933333  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Display an example DataFrame for one season to check the new columns\n",
    "team_dataframes[2020].head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "加入排名的文件"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Season</th>\n",
       "      <th>RankingDayNum</th>\n",
       "      <th>SystemName</th>\n",
       "      <th>TeamID</th>\n",
       "      <th>OrdinalRank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2003</td>\n",
       "      <td>35</td>\n",
       "      <td>SEL</td>\n",
       "      <td>1102</td>\n",
       "      <td>159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2003</td>\n",
       "      <td>35</td>\n",
       "      <td>SEL</td>\n",
       "      <td>1103</td>\n",
       "      <td>229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2003</td>\n",
       "      <td>35</td>\n",
       "      <td>SEL</td>\n",
       "      <td>1104</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2003</td>\n",
       "      <td>35</td>\n",
       "      <td>SEL</td>\n",
       "      <td>1105</td>\n",
       "      <td>314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2003</td>\n",
       "      <td>35</td>\n",
       "      <td>SEL</td>\n",
       "      <td>1106</td>\n",
       "      <td>260</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Season  RankingDayNum SystemName  TeamID  OrdinalRank\n",
       "0    2003             35        SEL    1102          159\n",
       "1    2003             35        SEL    1103          229\n",
       "2    2003             35        SEL    1104           12\n",
       "3    2003             35        SEL    1105          314\n",
       "4    2003             35        SEL    1106          260"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the Excel file to check its structure\n",
    "excel_file_path = 'C:\\\\Users\\\\XUN\\\\Desktop\\\\project_myself\\\\MMasseyOrdinals.csv'\n",
    "excel_df = pd.read_csv(excel_file_path)\n",
    "\n",
    "# Display the first few rows to understand its structure\n",
    "excel_df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filter out the first 10 days of ranking data for each season\n",
    "filtered_rankings = excel_df[excel_df['RankingDayNum'] > 10]\n",
    "# Initialize a dictionary to store the ranking statistics for each team and season\n",
    "ranking_stats = {}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TeamID</th>\n",
       "      <th>WinRate</th>\n",
       "      <th>FGM</th>\n",
       "      <th>FGA</th>\n",
       "      <th>FGM3</th>\n",
       "      <th>FGA3</th>\n",
       "      <th>FTM</th>\n",
       "      <th>FTA</th>\n",
       "      <th>OR</th>\n",
       "      <th>DR</th>\n",
       "      <th>Ast</th>\n",
       "      <th>TO</th>\n",
       "      <th>Stl</th>\n",
       "      <th>Blk</th>\n",
       "      <th>PF</th>\n",
       "      <th>HighestRank</th>\n",
       "      <th>TopFourRank</th>\n",
       "      <th>BottomFourRank</th>\n",
       "      <th>MedianRank</th>\n",
       "      <th>LowestRank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1102</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>19.142857</td>\n",
       "      <td>39.785714</td>\n",
       "      <td>7.821429</td>\n",
       "      <td>20.821429</td>\n",
       "      <td>11.142857</td>\n",
       "      <td>17.107143</td>\n",
       "      <td>4.178571</td>\n",
       "      <td>16.821429</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>11.428571</td>\n",
       "      <td>5.964286</td>\n",
       "      <td>1.785714</td>\n",
       "      <td>18.750000</td>\n",
       "      <td>219.0</td>\n",
       "      <td>130.00</td>\n",
       "      <td>160.00</td>\n",
       "      <td>149.0</td>\n",
       "      <td>52.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1103</td>\n",
       "      <td>0.481481</td>\n",
       "      <td>27.148148</td>\n",
       "      <td>55.851852</td>\n",
       "      <td>5.444444</td>\n",
       "      <td>16.074074</td>\n",
       "      <td>19.037037</td>\n",
       "      <td>25.851852</td>\n",
       "      <td>9.777778</td>\n",
       "      <td>19.925926</td>\n",
       "      <td>15.222222</td>\n",
       "      <td>12.629630</td>\n",
       "      <td>7.259259</td>\n",
       "      <td>2.333333</td>\n",
       "      <td>19.851852</td>\n",
       "      <td>284.0</td>\n",
       "      <td>168.00</td>\n",
       "      <td>194.00</td>\n",
       "      <td>181.0</td>\n",
       "      <td>99.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1104</td>\n",
       "      <td>0.607143</td>\n",
       "      <td>24.035714</td>\n",
       "      <td>57.178571</td>\n",
       "      <td>6.357143</td>\n",
       "      <td>19.857143</td>\n",
       "      <td>14.857143</td>\n",
       "      <td>20.928571</td>\n",
       "      <td>13.571429</td>\n",
       "      <td>23.928571</td>\n",
       "      <td>12.107143</td>\n",
       "      <td>13.285714</td>\n",
       "      <td>6.607143</td>\n",
       "      <td>3.785714</td>\n",
       "      <td>18.035714</td>\n",
       "      <td>106.0</td>\n",
       "      <td>18.00</td>\n",
       "      <td>34.75</td>\n",
       "      <td>30.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1105</td>\n",
       "      <td>0.269231</td>\n",
       "      <td>24.384615</td>\n",
       "      <td>61.615385</td>\n",
       "      <td>7.576923</td>\n",
       "      <td>20.769231</td>\n",
       "      <td>15.423077</td>\n",
       "      <td>21.846154</td>\n",
       "      <td>13.500000</td>\n",
       "      <td>23.115385</td>\n",
       "      <td>14.538462</td>\n",
       "      <td>18.653846</td>\n",
       "      <td>9.307692</td>\n",
       "      <td>2.076923</td>\n",
       "      <td>20.230769</td>\n",
       "      <td>323.0</td>\n",
       "      <td>301.75</td>\n",
       "      <td>313.00</td>\n",
       "      <td>309.0</td>\n",
       "      <td>185.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1106</td>\n",
       "      <td>0.464286</td>\n",
       "      <td>23.428571</td>\n",
       "      <td>55.285714</td>\n",
       "      <td>6.107143</td>\n",
       "      <td>17.642857</td>\n",
       "      <td>10.642857</td>\n",
       "      <td>16.464286</td>\n",
       "      <td>12.285714</td>\n",
       "      <td>23.857143</td>\n",
       "      <td>11.678571</td>\n",
       "      <td>17.035714</td>\n",
       "      <td>8.357143</td>\n",
       "      <td>3.142857</td>\n",
       "      <td>18.178571</td>\n",
       "      <td>307.0</td>\n",
       "      <td>229.00</td>\n",
       "      <td>261.25</td>\n",
       "      <td>245.0</td>\n",
       "      <td>166.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   TeamID   WinRate        FGM        FGA      FGM3       FGA3        FTM  \\\n",
       "0    1102  0.428571  19.142857  39.785714  7.821429  20.821429  11.142857   \n",
       "1    1103  0.481481  27.148148  55.851852  5.444444  16.074074  19.037037   \n",
       "2    1104  0.607143  24.035714  57.178571  6.357143  19.857143  14.857143   \n",
       "3    1105  0.269231  24.384615  61.615385  7.576923  20.769231  15.423077   \n",
       "4    1106  0.464286  23.428571  55.285714  6.107143  17.642857  10.642857   \n",
       "\n",
       "         FTA         OR         DR        Ast         TO       Stl       Blk  \\\n",
       "0  17.107143   4.178571  16.821429  13.000000  11.428571  5.964286  1.785714   \n",
       "1  25.851852   9.777778  19.925926  15.222222  12.629630  7.259259  2.333333   \n",
       "2  20.928571  13.571429  23.928571  12.107143  13.285714  6.607143  3.785714   \n",
       "3  21.846154  13.500000  23.115385  14.538462  18.653846  9.307692  2.076923   \n",
       "4  16.464286  12.285714  23.857143  11.678571  17.035714  8.357143  3.142857   \n",
       "\n",
       "          PF  HighestRank  TopFourRank  BottomFourRank  MedianRank  LowestRank  \n",
       "0  18.750000        219.0       130.00          160.00       149.0        52.0  \n",
       "1  19.851852        284.0       168.00          194.00       181.0        99.0  \n",
       "2  18.035714        106.0        18.00           34.75        30.0         1.0  \n",
       "3  20.230769        323.0       301.75          313.00       309.0       185.0  \n",
       "4  18.178571        307.0       229.00          261.25       245.0       166.0  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for season, group in filtered_rankings.groupby('Season'):\n",
    "    team_stats = {}\n",
    "    for team_id in team_dataframes[season]['TeamID']:\n",
    "        team_ranks = group[group['TeamID'] == team_id]['OrdinalRank']\n",
    "        if not team_ranks.empty:\n",
    "            highest_rank = team_ranks.max()\n",
    "            lowest_rank = team_ranks.min()\n",
    "            median_rank = team_ranks.median()\n",
    "            top_four_rank = team_ranks.quantile(0.25)  # Correctly representing the top 25%\n",
    "            bottom_four_rank = team_ranks.quantile(0.75)  # Correctly representing the bottom 25%\n",
    "            team_stats[team_id] = [highest_rank, top_four_rank, bottom_four_rank, median_rank, lowest_rank]\n",
    "\n",
    "    # Fill the DataFrame with the calculated stats\n",
    "    ranking_columns = ['HighestRank', 'TopFourRank', 'BottomFourRank', 'MedianRank', 'LowestRank']\n",
    "    for index, row in team_dataframes[season].iterrows():\n",
    "        team_id = row['TeamID']\n",
    "        if team_id in team_stats:\n",
    "            for i, stat in enumerate(ranking_columns):\n",
    "                team_dataframes[season].at[index, stat] = team_stats[team_id][i]\n",
    "        else:\n",
    "            for stat in ranking_columns:\n",
    "                team_dataframes[season].at[index, stat] = None  # Use None for teams without ranking data\n",
    "\n",
    "# Display an example DataFrame for one season to check the corrections\n",
    "team_dataframes[2003].head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TeamID</th>\n",
       "      <th>WinRate</th>\n",
       "      <th>FGM</th>\n",
       "      <th>FGA</th>\n",
       "      <th>FGM3</th>\n",
       "      <th>FGA3</th>\n",
       "      <th>FTM</th>\n",
       "      <th>FTA</th>\n",
       "      <th>OR</th>\n",
       "      <th>DR</th>\n",
       "      <th>Ast</th>\n",
       "      <th>TO</th>\n",
       "      <th>Stl</th>\n",
       "      <th>Blk</th>\n",
       "      <th>PF</th>\n",
       "      <th>HighestRank</th>\n",
       "      <th>TopFourRank</th>\n",
       "      <th>BottomFourRank</th>\n",
       "      <th>MedianRank</th>\n",
       "      <th>LowestRank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1102</td>\n",
       "      <td>0.586207</td>\n",
       "      <td>21.413793</td>\n",
       "      <td>47.724138</td>\n",
       "      <td>8.896552</td>\n",
       "      <td>24.413793</td>\n",
       "      <td>9.517241</td>\n",
       "      <td>13.068966</td>\n",
       "      <td>7.620690</td>\n",
       "      <td>15.413793</td>\n",
       "      <td>13.655172</td>\n",
       "      <td>10.068966</td>\n",
       "      <td>8.793103</td>\n",
       "      <td>1.724138</td>\n",
       "      <td>16.482759</td>\n",
       "      <td>198.0</td>\n",
       "      <td>69.75</td>\n",
       "      <td>103.0</td>\n",
       "      <td>88.0</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1103</td>\n",
       "      <td>0.642857</td>\n",
       "      <td>24.785714</td>\n",
       "      <td>55.785714</td>\n",
       "      <td>8.142857</td>\n",
       "      <td>21.357143</td>\n",
       "      <td>13.892857</td>\n",
       "      <td>20.357143</td>\n",
       "      <td>10.285714</td>\n",
       "      <td>23.071429</td>\n",
       "      <td>16.107143</td>\n",
       "      <td>13.357143</td>\n",
       "      <td>6.750000</td>\n",
       "      <td>3.857143</td>\n",
       "      <td>18.821429</td>\n",
       "      <td>269.0</td>\n",
       "      <td>73.00</td>\n",
       "      <td>121.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1104</td>\n",
       "      <td>0.766667</td>\n",
       "      <td>25.366667</td>\n",
       "      <td>52.666667</td>\n",
       "      <td>7.633333</td>\n",
       "      <td>19.566667</td>\n",
       "      <td>17.066667</td>\n",
       "      <td>23.266667</td>\n",
       "      <td>10.233333</td>\n",
       "      <td>26.466667</td>\n",
       "      <td>13.833333</td>\n",
       "      <td>12.666667</td>\n",
       "      <td>5.200000</td>\n",
       "      <td>4.433333</td>\n",
       "      <td>14.733333</td>\n",
       "      <td>86.0</td>\n",
       "      <td>15.00</td>\n",
       "      <td>23.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1105</td>\n",
       "      <td>0.551724</td>\n",
       "      <td>23.655172</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>6.103448</td>\n",
       "      <td>20.241379</td>\n",
       "      <td>15.655172</td>\n",
       "      <td>25.517241</td>\n",
       "      <td>12.931034</td>\n",
       "      <td>24.310345</td>\n",
       "      <td>13.137931</td>\n",
       "      <td>15.241379</td>\n",
       "      <td>10.620690</td>\n",
       "      <td>3.862069</td>\n",
       "      <td>19.344828</td>\n",
       "      <td>325.0</td>\n",
       "      <td>255.00</td>\n",
       "      <td>290.0</td>\n",
       "      <td>276.0</td>\n",
       "      <td>119.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1106</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>19.433333</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>4.533333</td>\n",
       "      <td>15.100000</td>\n",
       "      <td>14.566667</td>\n",
       "      <td>22.433333</td>\n",
       "      <td>11.266667</td>\n",
       "      <td>22.400000</td>\n",
       "      <td>10.366667</td>\n",
       "      <td>15.766667</td>\n",
       "      <td>6.700000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>17.466667</td>\n",
       "      <td>322.0</td>\n",
       "      <td>241.75</td>\n",
       "      <td>287.0</td>\n",
       "      <td>265.0</td>\n",
       "      <td>91.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   TeamID   WinRate        FGM        FGA      FGM3       FGA3        FTM  \\\n",
       "0    1102  0.586207  21.413793  47.724138  8.896552  24.413793   9.517241   \n",
       "1    1103  0.642857  24.785714  55.785714  8.142857  21.357143  13.892857   \n",
       "2    1104  0.766667  25.366667  52.666667  7.633333  19.566667  17.066667   \n",
       "3    1105  0.551724  23.655172  59.000000  6.103448  20.241379  15.655172   \n",
       "4    1106  0.500000  19.433333  51.000000  4.533333  15.100000  14.566667   \n",
       "\n",
       "         FTA         OR         DR        Ast         TO        Stl       Blk  \\\n",
       "0  13.068966   7.620690  15.413793  13.655172  10.068966   8.793103  1.724138   \n",
       "1  20.357143  10.285714  23.071429  16.107143  13.357143   6.750000  3.857143   \n",
       "2  23.266667  10.233333  26.466667  13.833333  12.666667   5.200000  4.433333   \n",
       "3  25.517241  12.931034  24.310345  13.137931  15.241379  10.620690  3.862069   \n",
       "4  22.433333  11.266667  22.400000  10.366667  15.766667   6.700000  2.000000   \n",
       "\n",
       "          PF  HighestRank  TopFourRank  BottomFourRank  MedianRank  LowestRank  \n",
       "0  16.482759        198.0        69.75           103.0        88.0         9.0  \n",
       "1  18.821429        269.0        73.00           121.0        89.0        33.0  \n",
       "2  14.733333         86.0        15.00            23.0        18.0         7.0  \n",
       "3  19.344828        325.0       255.00           290.0       276.0       119.0  \n",
       "4  17.466667        322.0       241.75           287.0       265.0        91.0  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "team_dataframes[2005].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>TeamID</th>\n",
       "      <th>WinRate</th>\n",
       "      <th>FGM</th>\n",
       "      <th>FGA</th>\n",
       "      <th>FGM3</th>\n",
       "      <th>FGA3</th>\n",
       "      <th>FTM</th>\n",
       "      <th>FTA</th>\n",
       "      <th>OR</th>\n",
       "      <th>DR</th>\n",
       "      <th>...</th>\n",
       "      <th>TO</th>\n",
       "      <th>Stl</th>\n",
       "      <th>Blk</th>\n",
       "      <th>PF</th>\n",
       "      <th>HighestRank</th>\n",
       "      <th>TopFourRank</th>\n",
       "      <th>BottomFourRank</th>\n",
       "      <th>MedianRank</th>\n",
       "      <th>LowestRank</th>\n",
       "      <th>FinalRankDay133</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1102</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>19.142857</td>\n",
       "      <td>39.785714</td>\n",
       "      <td>7.821429</td>\n",
       "      <td>20.821429</td>\n",
       "      <td>11.142857</td>\n",
       "      <td>17.107143</td>\n",
       "      <td>4.178571</td>\n",
       "      <td>16.821429</td>\n",
       "      <td>...</td>\n",
       "      <td>11.428571</td>\n",
       "      <td>5.964286</td>\n",
       "      <td>1.785714</td>\n",
       "      <td>18.750000</td>\n",
       "      <td>219.0</td>\n",
       "      <td>130.00</td>\n",
       "      <td>160.00</td>\n",
       "      <td>149.0</td>\n",
       "      <td>52.0</td>\n",
       "      <td>161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1103</td>\n",
       "      <td>0.481481</td>\n",
       "      <td>27.148148</td>\n",
       "      <td>55.851852</td>\n",
       "      <td>5.444444</td>\n",
       "      <td>16.074074</td>\n",
       "      <td>19.037037</td>\n",
       "      <td>25.851852</td>\n",
       "      <td>9.777778</td>\n",
       "      <td>19.925926</td>\n",
       "      <td>...</td>\n",
       "      <td>12.629630</td>\n",
       "      <td>7.259259</td>\n",
       "      <td>2.333333</td>\n",
       "      <td>19.851852</td>\n",
       "      <td>284.0</td>\n",
       "      <td>168.00</td>\n",
       "      <td>194.00</td>\n",
       "      <td>181.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1104</td>\n",
       "      <td>0.607143</td>\n",
       "      <td>24.035714</td>\n",
       "      <td>57.178571</td>\n",
       "      <td>6.357143</td>\n",
       "      <td>19.857143</td>\n",
       "      <td>14.857143</td>\n",
       "      <td>20.928571</td>\n",
       "      <td>13.571429</td>\n",
       "      <td>23.928571</td>\n",
       "      <td>...</td>\n",
       "      <td>13.285714</td>\n",
       "      <td>6.607143</td>\n",
       "      <td>3.785714</td>\n",
       "      <td>18.035714</td>\n",
       "      <td>106.0</td>\n",
       "      <td>18.00</td>\n",
       "      <td>34.75</td>\n",
       "      <td>30.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1105</td>\n",
       "      <td>0.269231</td>\n",
       "      <td>24.384615</td>\n",
       "      <td>61.615385</td>\n",
       "      <td>7.576923</td>\n",
       "      <td>20.769231</td>\n",
       "      <td>15.423077</td>\n",
       "      <td>21.846154</td>\n",
       "      <td>13.500000</td>\n",
       "      <td>23.115385</td>\n",
       "      <td>...</td>\n",
       "      <td>18.653846</td>\n",
       "      <td>9.307692</td>\n",
       "      <td>2.076923</td>\n",
       "      <td>20.230769</td>\n",
       "      <td>323.0</td>\n",
       "      <td>301.75</td>\n",
       "      <td>313.00</td>\n",
       "      <td>309.0</td>\n",
       "      <td>185.0</td>\n",
       "      <td>301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1106</td>\n",
       "      <td>0.464286</td>\n",
       "      <td>23.428571</td>\n",
       "      <td>55.285714</td>\n",
       "      <td>6.107143</td>\n",
       "      <td>17.642857</td>\n",
       "      <td>10.642857</td>\n",
       "      <td>16.464286</td>\n",
       "      <td>12.285714</td>\n",
       "      <td>23.857143</td>\n",
       "      <td>...</td>\n",
       "      <td>17.035714</td>\n",
       "      <td>8.357143</td>\n",
       "      <td>3.142857</td>\n",
       "      <td>18.178571</td>\n",
       "      <td>307.0</td>\n",
       "      <td>229.00</td>\n",
       "      <td>261.25</td>\n",
       "      <td>245.0</td>\n",
       "      <td>166.0</td>\n",
       "      <td>221</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   TeamID   WinRate        FGM        FGA      FGM3       FGA3        FTM  \\\n",
       "0    1102  0.428571  19.142857  39.785714  7.821429  20.821429  11.142857   \n",
       "1    1103  0.481481  27.148148  55.851852  5.444444  16.074074  19.037037   \n",
       "2    1104  0.607143  24.035714  57.178571  6.357143  19.857143  14.857143   \n",
       "3    1105  0.269231  24.384615  61.615385  7.576923  20.769231  15.423077   \n",
       "4    1106  0.464286  23.428571  55.285714  6.107143  17.642857  10.642857   \n",
       "\n",
       "         FTA         OR         DR  ...         TO       Stl       Blk  \\\n",
       "0  17.107143   4.178571  16.821429  ...  11.428571  5.964286  1.785714   \n",
       "1  25.851852   9.777778  19.925926  ...  12.629630  7.259259  2.333333   \n",
       "2  20.928571  13.571429  23.928571  ...  13.285714  6.607143  3.785714   \n",
       "3  21.846154  13.500000  23.115385  ...  18.653846  9.307692  2.076923   \n",
       "4  16.464286  12.285714  23.857143  ...  17.035714  8.357143  3.142857   \n",
       "\n",
       "          PF  HighestRank  TopFourRank  BottomFourRank  MedianRank  \\\n",
       "0  18.750000        219.0       130.00          160.00       149.0   \n",
       "1  19.851852        284.0       168.00          194.00       181.0   \n",
       "2  18.035714        106.0        18.00           34.75        30.0   \n",
       "3  20.230769        323.0       301.75          313.00       309.0   \n",
       "4  18.178571        307.0       229.00          261.25       245.0   \n",
       "\n",
       "   LowestRank  FinalRankDay133  \n",
       "0        52.0              161  \n",
       "1        99.0              210  \n",
       "2         1.0               33  \n",
       "3       185.0              301  \n",
       "4       166.0              221  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Extract the final rankings for day 133 for each team and season\n",
    "final_rankings = filtered_rankings[filtered_rankings['RankingDayNum'] == 114]\n",
    "\n",
    "# Initialize a dictionary to store the final ranking for each team by season\n",
    "final_rank_by_season_team = {}\n",
    "\n",
    "# Populate the dictionary\n",
    "for season, season_df in final_rankings.groupby('Season'):\n",
    "    final_rank_by_season_team[season] = dict(zip(season_df['TeamID'], season_df['OrdinalRank']))\n",
    "\n",
    "# Add the final rankings to the team_dataframes\n",
    "for season, season_df in team_dataframes.items():\n",
    "    if season in final_rank_by_season_team:\n",
    "        season_df['FinalRankDay133'] = season_df['TeamID'].apply(lambda x: final_rank_by_season_team[season].get(x, None))\n",
    "    else:\n",
    "        season_df['FinalRankDay133'] = None  # For seasons without final ranking data\n",
    "\n",
    "# Display an example DataFrame for one season to check the new column\n",
    "team_dataframes[2003].head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Season</th>\n",
       "      <th>DayNum</th>\n",
       "      <th>WTeamID</th>\n",
       "      <th>WScore</th>\n",
       "      <th>LTeamID</th>\n",
       "      <th>LScore</th>\n",
       "      <th>WLoc</th>\n",
       "      <th>NumOT</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1136</th>\n",
       "      <td>2003</td>\n",
       "      <td>134</td>\n",
       "      <td>1421</td>\n",
       "      <td>92</td>\n",
       "      <td>1411</td>\n",
       "      <td>84</td>\n",
       "      <td>N</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1137</th>\n",
       "      <td>2003</td>\n",
       "      <td>136</td>\n",
       "      <td>1112</td>\n",
       "      <td>80</td>\n",
       "      <td>1436</td>\n",
       "      <td>51</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1138</th>\n",
       "      <td>2003</td>\n",
       "      <td>136</td>\n",
       "      <td>1113</td>\n",
       "      <td>84</td>\n",
       "      <td>1272</td>\n",
       "      <td>71</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1139</th>\n",
       "      <td>2003</td>\n",
       "      <td>136</td>\n",
       "      <td>1141</td>\n",
       "      <td>79</td>\n",
       "      <td>1166</td>\n",
       "      <td>73</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1140</th>\n",
       "      <td>2003</td>\n",
       "      <td>136</td>\n",
       "      <td>1143</td>\n",
       "      <td>76</td>\n",
       "      <td>1301</td>\n",
       "      <td>74</td>\n",
       "      <td>N</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Season  DayNum  WTeamID  WScore  LTeamID  LScore WLoc  NumOT\n",
       "1136    2003     134     1421      92     1411      84    N      1\n",
       "1137    2003     136     1112      80     1436      51    N      0\n",
       "1138    2003     136     1113      84     1272      71    N      0\n",
       "1139    2003     136     1141      79     1166      73    N      0\n",
       "1140    2003     136     1143      76     1301      74    N      1"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "compact_results_file_path = 'C:\\\\Users\\\\XUN\\\\Desktop\\\\project_myself\\\\MNCAATourneyCompactResults.csv'\n",
    "compact_results_df = pd.read_csv(compact_results_file_path)\n",
    "\n",
    "# Filter the data to include only the seasons from 2003 onwards\n",
    "compact_results_df_2003_onwards = compact_results_df[compact_results_df['Season'] >= 2003]\n",
    "\n",
    "compact_results_df_2003_onwards.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>team_1</th>\n",
       "      <th>team_2</th>\n",
       "      <th>result</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1136</th>\n",
       "      <td>1421</td>\n",
       "      <td>1411</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1137</th>\n",
       "      <td>1112</td>\n",
       "      <td>1436</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1138</th>\n",
       "      <td>1113</td>\n",
       "      <td>1272</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1139</th>\n",
       "      <td>1141</td>\n",
       "      <td>1166</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1140</th>\n",
       "      <td>1143</td>\n",
       "      <td>1301</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      team_1  team_2  result\n",
       "1136    1421    1411       1\n",
       "1137    1112    1436       1\n",
       "1138    1113    1272       1\n",
       "1139    1141    1166       1\n",
       "1140    1143    1301       1"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Creating the newnewdata DataFrame based on the compact_results_df_2003_onwards data\n",
    "# The DataFrame will include columns for team_1, team_2, and the match result where 1 indicates team_1 won, and 0 indicates team_2 won\n",
    "\n",
    "# Initialize the new DataFrame\n",
    "newnewdata = pd.DataFrame()\n",
    "\n",
    "# Assign team_1 and team_2 based on winning and losing team IDs\n",
    "newnewdata['team_1'] = compact_results_df_2003_onwards['WTeamID']\n",
    "newnewdata['team_2'] = compact_results_df_2003_onwards['LTeamID']\n",
    "\n",
    "# Determine the match result; since team_1 is always the winner in our setup, the result will always be 1\n",
    "newnewdata['result'] = 1  # team_1 wins\n",
    "\n",
    "newnewdata.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create a dictionary to hold a DataFrame for each season\n",
    "newnewdata_by_season = {}\n",
    "\n",
    "# Group the compact results data by season\n",
    "for season, group in compact_results_df_2003_onwards.groupby('Season'):\n",
    "    # Initialize the DataFrame for the season\n",
    "    df_season = pd.DataFrame()\n",
    "    \n",
    "    # Assign team_1 and team_2\n",
    "    df_season['team_1'] = group['WTeamID']\n",
    "    df_season['team_2'] = group['LTeamID']\n",
    "    \n",
    "    # Since team_1 is always the winner in our setup, the result will always be 1 for this DataFrame\n",
    "    df_season['result'] = 1  # team_1 wins\n",
    "    \n",
    "    # Store the DataFrame in the dictionary\n",
    "    newnewdata_by_season[season] = df_season"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      team_1  team_2  result\n",
      "2117    1347    1254       1\n",
      "2118    1382    1417       1\n",
      "2119    1393    1113       1\n",
      "2120    1411    1300       1\n",
      "2121    1104    1439       1\n",
      "...      ...     ...     ...\n",
      "2179    1242    1181       1\n",
      "2180    1437    1403       1\n",
      "2181    1276    1260       1\n",
      "2182    1437    1242       1\n",
      "2183    1437    1276       1\n",
      "\n",
      "[67 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "print(newnewdata_by_season[2018])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Iterate over each season in newnewdata_by_season\n",
    "for season, season_df in newnewdata_by_season.items():\n",
    "    # Check if the season is in team_dataframes (it should be)\n",
    "    if season in team_dataframes:\n",
    "        team_info_df = team_dataframes[season]\n",
    "\n",
    "        # For team_1, merge the team information from team_info_df based on team_1's ID\n",
    "        season_df = season_df.merge(team_info_df, left_on='team_1', right_on='TeamID', how='left')\n",
    "        # Rename the columns to indicate they are for team_1\n",
    "        season_df.rename(columns=lambda x: x if x in ['team_1', 'team_2', 'result'] else f\"team_1_{x}\", inplace=True)\n",
    "        \n",
    "        # For team_2, repeat the process\n",
    "        season_df = season_df.merge(team_info_df, left_on='team_2', right_on='TeamID', how='left')\n",
    "        # Rename the columns to indicate they are for team_2\n",
    "        season_df.rename(columns=lambda x: x if x in ['team_1', 'team_2', 'result', 'team_1_TeamID'] + [f\"team_1_{col}\" for col in team_info_df.columns if col != 'TeamID'] else f\"team_2_{x}\", inplace=True)\n",
    "        \n",
    "        # Drop the duplicate TeamID columns\n",
    "        season_df.drop(['team_1_TeamID', 'team_2_TeamID'], axis=1, inplace=True)\n",
    "\n",
    "        # Update the dictionary with the enhanced DataFrame\n",
    "        newnewdata_by_season[season] = season_df\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   team_1  team_2  result  team_1_WinRate  team_1_FGM  team_1_FGA  \\\n",
      "0    1347    1254       1        0.625000   23.281250   54.843750   \n",
      "1    1382    1417       1        0.781250   26.375000   57.843750   \n",
      "2    1393    1113       1        0.606061   22.757576   54.424242   \n",
      "3    1411    1300       1        0.441176   25.823529   58.500000   \n",
      "4    1104    1439       1        0.558824   25.294118   55.205882   \n",
      "\n",
      "   team_1_FGM3  team_1_FGA3  team_1_FTM  team_1_FTA  ...  team_2_TO  \\\n",
      "0     7.656250    21.812500   12.718750   17.343750  ...  14.121212   \n",
      "1     7.750000    19.468750   17.406250   23.093750  ...  11.843750   \n",
      "2     5.848485    18.181818   16.181818   21.848485  ...  10.709677   \n",
      "3     7.823529    21.529412   18.176471   25.294118  ...  14.161290   \n",
      "4     6.382353    19.676471   15.382353   22.882353  ...  11.937500   \n",
      "\n",
      "   team_2_Stl  team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0    5.575758    3.151515  19.636364               335.0               263.0   \n",
      "1    5.718750    3.906250  17.937500               139.0                43.0   \n",
      "2    6.580645    3.580645  18.935484               148.0                18.0   \n",
      "3    4.677419    3.419355  19.483871               343.0               274.0   \n",
      "4    5.750000    2.281250  15.687500               109.0                33.0   \n",
      "\n",
      "   team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                  287.0              276.0              183.0   \n",
      "1                   59.0               50.0                1.0   \n",
      "2                   39.0               28.0                1.0   \n",
      "3                  309.0              289.0              141.0   \n",
      "4                   49.0               40.0                1.0   \n",
      "\n",
      "   team_2_FinalRankDay133  \n",
      "0                     282  \n",
      "1                      52  \n",
      "2                      34  \n",
      "3                     299  \n",
      "4                      48  \n",
      "\n",
      "[5 rows x 43 columns]\n"
     ]
    }
   ],
   "source": [
    "# Display an example enhanced DataFrame for one season to check the new columns\n",
    "print(newnewdata_by_season[2018].head(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    team_1  team_2  result  team_1_WinRate  team_1_FGM  team_1_FGA  \\\n",
      "0     1125    1396       1        0.833333   31.666667   63.733333   \n",
      "1     1192    1341       1        0.580645   26.193548   55.225806   \n",
      "2     1113    1385       1        0.687500   26.593750   59.468750   \n",
      "3     1295    1300       1        0.516129   24.580645   54.709677   \n",
      "4     1120    1308       1        0.735294   27.029412   60.441176   \n",
      "..     ...     ...     ...             ...         ...         ...   \n",
      "62    1120    1246       1        0.735294   27.029412   60.441176   \n",
      "63    1277    1181       1        0.823529   27.764706   57.176471   \n",
      "64    1403    1277       1        0.812500   26.156250   55.468750   \n",
      "65    1438    1120       1        0.906250   25.625000   53.593750   \n",
      "66    1438    1403       1        0.906250   25.625000   53.593750   \n",
      "\n",
      "    team_1_FGM3  team_1_FGA3  team_1_FTM  team_1_FTA  ...  team_2_TO  \\\n",
      "0     10.366667    27.966667   13.166667   17.900000  ...  11.156250   \n",
      "1      7.806452    19.322581   14.548387   19.548387  ...  12.606061   \n",
      "2      7.250000    21.250000   17.375000   25.906250  ...  10.363636   \n",
      "3      9.709677    26.354839   13.419355   17.548387  ...  15.500000   \n",
      "4     11.411765    29.970588   13.411765   18.735294  ...  12.031250   \n",
      "..          ...          ...         ...         ...  ...        ...   \n",
      "62    11.411765    29.970588   13.411765   18.735294  ...  12.636364   \n",
      "63     8.294118    21.617647   15.000000   20.000000  ...  13.117647   \n",
      "64     7.250000    19.718750   13.531250   18.593750  ...  12.852941   \n",
      "65     8.468750    20.718750   12.125000   16.250000  ...  12.147059   \n",
      "66     8.468750    20.718750   12.125000   16.250000  ...  12.375000   \n",
      "\n",
      "    team_2_Stl  team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     8.656250    2.250000  17.468750               113.0                48.0   \n",
      "1     8.818182    1.606061  21.696970               350.0               231.0   \n",
      "2     8.818182    3.333333  19.060606               104.0                39.0   \n",
      "3     5.266667    2.566667  18.033333               349.0               286.0   \n",
      "4     5.531250    2.468750  18.093750               166.0                49.0   \n",
      "..         ...         ...        ...                 ...                 ...   \n",
      "62    6.030303    5.060606  16.303030               105.0                 7.0   \n",
      "63    9.470588    6.823529  15.852941                17.0                 1.0   \n",
      "64    5.235294    5.470588  16.911765                81.0                 4.0   \n",
      "65    9.294118    4.764706  18.382353                58.0                11.0   \n",
      "66    7.375000    4.906250  17.781250                69.0                 9.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                    76.0               63.0               19.0   \n",
      "1                   281.0              257.0              125.0   \n",
      "2                    58.0               48.0                9.0   \n",
      "3                   316.0              304.0              115.0   \n",
      "4                    69.0               58.0               18.0   \n",
      "..                    ...                ...                ...   \n",
      "62                   19.0                9.0                3.0   \n",
      "63                    2.0                1.0                1.0   \n",
      "64                    8.0                5.0                1.0   \n",
      "65                   23.0               15.0                2.0   \n",
      "66                   16.0               11.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  \n",
      "0                       75  \n",
      "1                      250  \n",
      "2                       63  \n",
      "3                      291  \n",
      "4                       52  \n",
      "..                     ...  \n",
      "62                       6  \n",
      "63                       1  \n",
      "64                       4  \n",
      "65                      13  \n",
      "66                       7  \n",
      "\n",
      "[67 rows x 43 columns]\n"
     ]
    }
   ],
   "source": [
    "print(newnewdata_by_season[2019])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "for season, df in newnewdata_by_season.items():\n",
    "    # Reorder columns to move 'result' to the end\n",
    "    columns = [col for col in df.columns if col != 'result'] + ['result']\n",
    "    newnewdata_by_season[season] = df[columns]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['team_1', 'team_2', 'team_1_WinRate', 'team_1_FGM', 'team_1_FGA',\n",
      "       'team_1_FGM3', 'team_1_FGA3', 'team_1_FTM', 'team_1_FTA', 'team_1_OR',\n",
      "       'team_1_DR', 'team_1_Ast', 'team_1_TO', 'team_1_Stl', 'team_1_Blk',\n",
      "       'team_1_PF', 'team_1_HighestRank', 'team_1_TopFourRank',\n",
      "       'team_1_BottomFourRank', 'team_1_MedianRank', 'team_1_LowestRank',\n",
      "       'team_1_FinalRankDay133', 'team_2_WinRate', 'team_2_FGM', 'team_2_FGA',\n",
      "       'team_2_FGM3', 'team_2_FGA3', 'team_2_FTM', 'team_2_FTA', 'team_2_OR',\n",
      "       'team_2_DR', 'team_2_Ast', 'team_2_TO', 'team_2_Stl', 'team_2_Blk',\n",
      "       'team_2_PF', 'team_2_HighestRank', 'team_2_TopFourRank',\n",
      "       'team_2_BottomFourRank', 'team_2_MedianRank', 'team_2_LowestRank',\n",
      "       'team_2_FinalRankDay133', 'result'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "print(newnewdata_by_season[2018].columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "# Iterate over each season's DataFrame to randomly swap teams for 50% of the matches\n",
    "for season, df in newnewdata_by_season.items():\n",
    "    # Generate a random mask for selecting rows to swap\n",
    "    swap_mask = np.random.rand(len(df)) < 0.5\n",
    "    \n",
    "    # Columns related to team_1 and team_2 that need to be swapped\n",
    "    team_1_cols = [col for col in df.columns if 'team_1' in col]\n",
    "    team_2_cols = [col for col in df.columns if 'team_2' in col]\n",
    "    \n",
    "    # Swap the team_1 and team_2 columns for rows identified by the mask\n",
    "    df.loc[swap_mask, team_1_cols + team_2_cols] = df.loc[swap_mask, team_2_cols + team_1_cols].values\n",
    "    \n",
    "    # Update the result column for swapped rows: 1 becomes 0 since team_2 wins\n",
    "    df.loc[swap_mask, 'result'] = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{2003:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1421.0  1411.0        0.448276   24.379310   56.793103     6.482759   \n",
      "1   1112.0  1436.0        0.892857   30.321429   65.714286     7.035714   \n",
      "2   1113.0  1272.0        0.620690   27.206897   56.896552     4.000000   \n",
      "3   1166.0  1141.0        0.878788   28.696970   57.454545     7.969697   \n",
      "4   1143.0  1301.0        0.724138   27.344828   58.724138     6.413793   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "59  1393.0  1328.0        0.827586   29.241379   62.206897     5.241379   \n",
      "60  1277.0  1400.0        0.612903   23.032258   51.096774     4.903226   \n",
      "61  1242.0  1266.0        0.766667   30.233333   62.300000     4.800000   \n",
      "62  1400.0  1393.0        0.785714   28.000000   62.428571     5.857143   \n",
      "63  1242.0  1393.0        0.766667   30.233333   62.300000     4.800000   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     18.000000   15.965517   20.931034  12.275862  ...    6.433333   \n",
      "1     20.071429   17.535714   25.000000  15.178571  ...    6.862069   \n",
      "2     12.586207   17.551724   26.206897  13.689655  ...    7.379310   \n",
      "3     20.484848   13.878788   20.030303  10.878788  ...    7.103448   \n",
      "4     17.034483   13.379310   19.517241  11.241379  ...    7.766667   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "59    15.862069   16.379310   23.620690  14.310345  ...    6.933333   \n",
      "60    13.387097   16.258065   22.129032  10.677419  ...    6.392857   \n",
      "61    14.133333   16.066667   24.133333  14.300000  ...    6.000000   \n",
      "62    16.785714   17.000000   23.785714  16.178571  ...    8.310345   \n",
      "63    14.133333   16.066667   24.133333  14.300000  ...    8.310345   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     2.233333  18.300000               324.0              215.75   \n",
      "1     2.965517  15.896552               265.0              159.00   \n",
      "2     5.068966  18.758621               109.0               26.00   \n",
      "3     4.000000  20.965517               215.0               52.75   \n",
      "4     3.066667  18.666667               112.0               46.00   \n",
      "..         ...        ...                 ...                 ...   \n",
      "59    3.766667  18.600000                78.0                7.00   \n",
      "60    3.857143  20.357143                43.0                5.00   \n",
      "61    3.642857  18.642857                94.0               10.00   \n",
      "62    7.275862  16.586207               132.0               13.00   \n",
      "63    7.275862  16.586207               132.0               13.00   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                  260.25              241.0              114.0   \n",
      "1                  186.00              172.0              101.0   \n",
      "2                   54.00               40.0                7.0   \n",
      "3                   92.00               67.0               12.0   \n",
      "4                   65.00               54.0                9.0   \n",
      "..                    ...                ...                ...   \n",
      "59                  20.00               12.0                1.0   \n",
      "60                  12.00                8.0                1.0   \n",
      "61                  25.00               15.0                3.0   \n",
      "62                  30.00               20.0                4.0   \n",
      "63                  30.00               20.0                4.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    200.0       1  \n",
      "1                    139.0       1  \n",
      "2                     30.0       1  \n",
      "3                     47.0       0  \n",
      "4                     68.0       1  \n",
      "..                     ...     ...  \n",
      "59                     3.0       1  \n",
      "60                     4.0       0  \n",
      "61                    12.0       1  \n",
      "62                    15.0       0  \n",
      "63                    15.0       0  \n",
      "\n",
      "[64 rows x 43 columns], 2004:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1197.0  1250.0        0.466667   23.066667   55.766667     8.466667   \n",
      "1   1104.0  1356.0        0.586207   24.896552   55.000000     7.137931   \n",
      "2   1163.0  1436.0        0.818182   30.121212   62.636364     6.393939   \n",
      "3   1177.0  1173.0        0.700000   25.633333   54.566667     5.100000   \n",
      "4   1181.0  1106.0        0.843750   27.562500   58.468750     7.187500   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "59  1181.0  1462.0        0.843750   27.562500   58.468750     7.187500   \n",
      "60  1242.0  1210.0        0.714286   26.928571   58.142857     5.750000   \n",
      "61  1163.0  1181.0        0.818182   30.121212   62.636364     6.393939   \n",
      "62  1210.0  1329.0        0.718750   27.437500   58.375000     7.250000   \n",
      "63  1163.0  1210.0        0.818182   30.121212   62.636364     6.393939   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     24.400000   17.500000   24.533333  11.433333  ...    7.178571   \n",
      "1     18.620690   15.275862   21.862069  11.310345  ...   10.275862   \n",
      "2     15.969697   12.454545   20.212121  15.303030  ...    7.000000   \n",
      "3     14.066667   14.500000   20.600000  12.066667  ...    4.531250   \n",
      "4     19.531250   17.437500   23.843750  13.406250  ...    7.066667   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "59    19.531250   17.437500   23.843750  13.406250  ...    7.030303   \n",
      "60    17.178571   15.250000   21.571429  12.071429  ...    8.843750   \n",
      "61    15.969697   12.454545   20.212121  15.303030  ...    9.343750   \n",
      "62    19.375000   15.937500   23.000000  11.375000  ...    7.862069   \n",
      "63    15.969697   12.454545   20.212121  15.303030  ...    8.843750   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     3.321429  18.857143               323.0              195.25   \n",
      "1     3.103448  19.379310                89.0               20.00   \n",
      "2     2.866667  15.266667               314.0              130.00   \n",
      "3     2.843750  17.093750               149.0               32.50   \n",
      "4     3.133333  18.700000               323.0              278.00   \n",
      "..         ...        ...                 ...                 ...   \n",
      "59    2.242424  16.636364               160.0               52.00   \n",
      "60    4.843750  21.218750                56.0                5.00   \n",
      "61    6.812500  18.718750                92.0                1.00   \n",
      "62    3.586207  19.413793               129.0                8.00   \n",
      "63    4.843750  21.218750                56.0                5.00   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                  242.75              221.0               96.0   \n",
      "1                   38.00               28.0                2.0   \n",
      "2                  190.00              154.5               39.0   \n",
      "3                   61.50               44.0                5.0   \n",
      "4                  302.00              292.0              107.0   \n",
      "..                    ...                ...                ...   \n",
      "59                  81.00               63.0               17.0   \n",
      "60                  14.00                9.0                1.0   \n",
      "61                   5.00                2.0                1.0   \n",
      "62                  28.00               13.0                1.0   \n",
      "63                  14.00                9.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    179.0       1  \n",
      "1                     18.0       1  \n",
      "2                    139.0       1  \n",
      "3                     33.0       1  \n",
      "4                    292.0       1  \n",
      "..                     ...     ...  \n",
      "59                    52.0       1  \n",
      "60                    16.0       0  \n",
      "61                     3.0       1  \n",
      "62                     7.0       1  \n",
      "63                    16.0       1  \n",
      "\n",
      "[64 rows x 43 columns], 2005:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1324.0  1105.0        0.379310   25.068966   56.103448     6.275862   \n",
      "1   1112.0  1429.0        0.818182   29.121212   61.848485     6.848485   \n",
      "2   1335.0  1130.0        0.714286   23.535714   53.892857     6.500000   \n",
      "3   1153.0  1234.0        0.774194   25.548387   58.225806     6.612903   \n",
      "4   1457.0  1211.0        0.827586   22.620690   51.517241     6.724138   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "59  1246.0  1277.0        0.833333   26.500000   57.733333     6.533333   \n",
      "60  1314.0  1458.0        0.870968   30.451613   61.354839     7.387097   \n",
      "61  1257.0  1228.0        0.870968   26.548387   57.129032     9.645161   \n",
      "62  1277.0  1314.0        0.785714   27.714286   55.892857     6.857143   \n",
      "63  1314.0  1228.0        0.870968   30.451613   61.354839     7.387097   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     18.758621   13.931034   21.034483  11.862069  ...   10.620690   \n",
      "1     17.030303   14.575758   18.727273  13.727273  ...    5.580645   \n",
      "2     19.035714   14.892857   22.500000  12.357143  ...    7.250000   \n",
      "3     19.032258   18.709677   27.000000  14.387097  ...    7.531250   \n",
      "4     18.655172   14.793103   21.620690  11.172414  ...    5.586207   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "59    19.333333   14.200000   21.400000  12.700000  ...    7.714286   \n",
      "60    18.451613   20.483871   27.870968  13.774194  ...    5.466667   \n",
      "61    23.903226   17.806452   24.451613  12.709677  ...    7.636364   \n",
      "62    19.035714   15.785714   20.357143  11.857143  ...   10.387097   \n",
      "63    18.451613   20.483871   27.870968  13.774194  ...    7.636364   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     3.862069  19.344828               325.0               255.0   \n",
      "1     2.870968  13.709677               190.0                53.0   \n",
      "2     4.107143  14.892857               126.0                 4.0   \n",
      "3     5.406250  18.687500               154.0                18.0   \n",
      "4     3.448276  17.413793               144.0                11.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "59    2.678571  19.285714               118.0                11.0   \n",
      "60    1.966667  15.333333               139.0                17.0   \n",
      "61    3.424242  15.515152                86.0                 1.0   \n",
      "62    3.838710  18.129032                77.0                 2.0   \n",
      "63    3.424242  15.515152                86.0                 1.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                  290.00              276.0              119.0   \n",
      "1                   96.00               73.0               12.0   \n",
      "2                   15.00                7.0                1.0   \n",
      "3                   32.25               25.0                3.0   \n",
      "4                   20.00               14.0                3.0   \n",
      "..                    ...                ...                ...   \n",
      "59                  22.00               16.0                4.0   \n",
      "60                  23.00               20.0                4.0   \n",
      "61                   3.00                1.0                1.0   \n",
      "62                   7.00                4.0                1.0   \n",
      "63                   3.00                1.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    245.0       1  \n",
      "1                     74.0       1  \n",
      "2                      4.0       0  \n",
      "3                     28.0       1  \n",
      "4                     11.0       0  \n",
      "..                     ...     ...  \n",
      "59                    13.0       0  \n",
      "60                    17.0       1  \n",
      "61                     1.0       0  \n",
      "62                     5.0       0  \n",
      "63                     1.0       1  \n",
      "\n",
      "[64 rows x 43 columns], 2006:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1214.0  1284.0        0.516129   23.967742   57.322581     5.580645   \n",
      "1   1104.0  1266.0        0.586207   24.517241   54.068966     5.517241   \n",
      "2   1130.0  1334.0        0.781250   26.375000   53.906250     6.000000   \n",
      "3   1181.0  1380.0        0.909091   27.757576   56.151515     7.818182   \n",
      "4   1196.0  1375.0        0.818182   27.636364   54.393939     7.393939   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "59  1437.0  1196.0        0.862069   25.034483   58.793103     9.103448   \n",
      "60  1163.0  1206.0        0.900000   29.066667   62.100000     5.300000   \n",
      "61  1196.0  1206.0        0.818182   27.636364   54.393939     7.393939   \n",
      "62  1261.0  1417.0        0.733333   27.700000   58.266667     4.333333   \n",
      "63  1196.0  1417.0        0.818182   27.636364   54.393939     7.393939   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     17.612903   13.290323   21.419355  13.774194  ...    7.656250   \n",
      "1     16.241379   15.413793   21.827586  12.517241  ...    7.517241   \n",
      "2     16.093750   15.781250   23.500000  13.031250  ...    5.931034   \n",
      "3     19.757576   19.181818   25.212121   9.545455  ...    7.580645   \n",
      "4     18.757576   16.606061   22.606061  10.606061  ...    8.482759   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "59    23.551724   16.241379   21.620690  13.482759  ...    8.030303   \n",
      "60    14.800000   17.900000   25.500000  16.300000  ...    7.300000   \n",
      "61    18.757576   16.606061   22.606061  10.606061  ...    7.300000   \n",
      "62    12.833333   15.033333   21.500000  13.900000  ...    5.636364   \n",
      "63    18.757576   16.606061   22.606061  10.606061  ...    5.636364   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     3.437500  16.937500               319.0               191.0   \n",
      "1     3.068966  19.482759               132.0                30.0   \n",
      "2     2.103448  15.379310               244.0                85.0   \n",
      "3     3.806452  17.870968               319.0               197.0   \n",
      "4     1.310345  18.724138               235.0                78.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "59    4.939394  16.121212                48.0                 5.0   \n",
      "60    3.533333  15.400000               140.0                37.0   \n",
      "61    3.533333  15.400000               140.0                37.0   \n",
      "62    2.757576  16.151515                88.0                12.0   \n",
      "63    2.757576  16.151515                88.0                12.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                   221.0              205.5              110.0   \n",
      "1                    58.0               38.0                9.0   \n",
      "2                   117.0              104.0               22.0   \n",
      "3                   252.0              220.5               91.0   \n",
      "4                   116.0               97.0               21.0   \n",
      "..                    ...                ...                ...   \n",
      "59                   12.0                8.0                1.0   \n",
      "60                   64.0               46.0                5.0   \n",
      "61                   64.0               46.0                5.0   \n",
      "62                   24.0               17.0                2.0   \n",
      "63                   24.0               17.0                2.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    210.0       0  \n",
      "1                     30.0       1  \n",
      "2                    111.0       1  \n",
      "3                    211.0       1  \n",
      "4                     81.0       1  \n",
      "..                     ...     ...  \n",
      "59                    12.0       0  \n",
      "60                    37.0       0  \n",
      "61                    37.0       1  \n",
      "62                    15.0       0  \n",
      "63                    15.0       1  \n",
      "\n",
      "[64 rows x 43 columns], 2007:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1197.0  1310.0        0.580645   23.645161   52.774194     5.806452   \n",
      "1   1130.0  1403.0        0.645161   25.516129   53.225806     5.870968   \n",
      "2   1139.0  1330.0        0.806452   21.806452   49.967742     9.000000   \n",
      "3   1207.0  1125.0        0.812500   24.500000   48.375000     6.281250   \n",
      "4   1211.0  1231.0        0.696970   27.696970   56.848485     6.757576   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "59  1196.0  1332.0        0.852941   28.558824   54.205882     7.176471   \n",
      "60  1207.0  1314.0        0.812500   24.500000   48.375000     6.281250   \n",
      "61  1417.0  1196.0        0.833333   26.733333   55.633333     6.800000   \n",
      "62  1207.0  1326.0        0.812500   24.500000   48.375000     6.281250   \n",
      "63  1196.0  1326.0        0.852941   28.558824   54.205882     7.176471   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     16.032258   15.870968   24.096774  12.612903  ...    6.272727   \n",
      "1     16.806452   17.741935   24.516129  11.838710  ...    6.878788   \n",
      "2     24.451613   15.677419   20.645161   9.000000  ...    7.625000   \n",
      "3     17.156250   13.187500   18.375000  10.750000  ...    6.096774   \n",
      "4     17.090909   16.969697   22.606061  10.515152  ...    6.633333   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "59    17.588235   15.029412   22.088235  11.088235  ...    7.121212   \n",
      "60    17.156250   13.187500   18.375000  10.750000  ...    8.382353   \n",
      "61    18.500000   11.700000   18.033333  11.066667  ...    7.088235   \n",
      "62    17.156250   13.187500   18.375000  10.750000  ...    6.818182   \n",
      "63    17.588235   15.029412   22.088235  11.088235  ...    6.818182   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     1.575758  17.363636               323.0              168.25   \n",
      "1     1.878788  17.454545                96.0               43.00   \n",
      "2     3.406250  18.718750               114.0               58.00   \n",
      "3     3.225806  18.580645               227.0              121.00   \n",
      "4     4.466667  20.800000                85.0               19.00   \n",
      "..         ...        ...                 ...                 ...   \n",
      "59    2.060606  16.030303                73.0                9.00   \n",
      "60    4.588235  17.294118                18.0                1.00   \n",
      "61    4.823529  15.676471                76.0                3.00   \n",
      "62    5.939394  13.575758                42.0                3.00   \n",
      "63    5.939394  13.575758                42.0                3.00   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                  228.75              196.0               85.0   \n",
      "1                   58.00               51.0               12.0   \n",
      "2                   80.00               68.0               17.0   \n",
      "3                  147.00              134.5               59.0   \n",
      "4                   31.00               24.0                7.0   \n",
      "..                    ...                ...                ...   \n",
      "59                  21.00               15.0                1.0   \n",
      "60                   4.00                3.0                1.0   \n",
      "61                   9.00                5.0                1.0   \n",
      "62                  11.00                5.0                1.0   \n",
      "63                  11.00                5.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    189.0       0  \n",
      "1                     63.0       1  \n",
      "2                     51.0       1  \n",
      "3                    126.0       1  \n",
      "4                     20.0       0  \n",
      "..                     ...     ...  \n",
      "59                    25.0       1  \n",
      "60                     1.0       1  \n",
      "61                     3.0       0  \n",
      "62                     4.0       0  \n",
      "63                     4.0       1  \n",
      "\n",
      "[64 rows x 43 columns], 2008:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1291.0  1164.0        0.562500   24.218750   54.250000     6.000000   \n",
      "1   1181.0  1125.0        0.843750   28.750000   61.781250     9.281250   \n",
      "2   1340.0  1242.0        0.700000   25.633333   54.666667     9.033333   \n",
      "3   1243.0  1425.0        0.633333   27.900000   62.866667     6.633333   \n",
      "4   1246.0  1266.0        0.600000   23.733333   50.600000     5.800000   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "59  1172.0  1242.0        0.806452   28.645161   60.741935     8.774194   \n",
      "60  1272.0  1400.0        0.970588   28.764706   61.764706     7.941176   \n",
      "61  1314.0  1242.0        0.941176   31.852941   66.029412     5.529412   \n",
      "62  1417.0  1272.0        0.909091   26.545455   55.818182     5.303030   \n",
      "63  1272.0  1242.0        0.970588   28.764706   61.764706     7.941176   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     16.343750   14.625000   21.000000  10.093750  ...    7.029412   \n",
      "1     24.156250   17.343750   24.968750  12.718750  ...    8.437500   \n",
      "2     22.500000   13.800000   20.566667  11.166667  ...    9.000000   \n",
      "3     20.466667   16.333333   23.500000  16.166667  ...    5.687500   \n",
      "4     15.766667   15.333333   20.900000   9.733333  ...    9.468750   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "59    24.322581   11.258065   15.451613  11.225806  ...    9.000000   \n",
      "60    22.676471   14.205882   23.852941  14.117647  ...    5.969697   \n",
      "61    14.647059   19.470588   25.823529  15.705882  ...    9.000000   \n",
      "62    15.696970   15.636364   21.242424  12.606061  ...    8.705882   \n",
      "63    22.676471   14.205882   23.852941  14.117647  ...    9.000000   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     2.058824  18.794118               339.0              281.00   \n",
      "1     1.843750  18.562500               239.0              119.75   \n",
      "2     6.121212  17.424242                38.0                1.00   \n",
      "3     4.406250  15.750000               121.0               26.00   \n",
      "4     3.843750  20.937500                60.0               12.00   \n",
      "..         ...        ...                 ...                 ...   \n",
      "59    6.121212  17.424242                38.0                1.00   \n",
      "60    5.030303  16.454545                56.0                7.00   \n",
      "61    6.121212  17.424242                38.0                1.00   \n",
      "62    6.088235  17.441176                31.0                1.00   \n",
      "63    6.121212  17.424242                38.0                1.00   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                   323.0              306.0              150.0   \n",
      "1                   159.0              141.0               51.0   \n",
      "2                     5.0                3.0                1.0   \n",
      "3                    39.0               31.0                7.0   \n",
      "4                    22.0               18.0                3.0   \n",
      "..                    ...                ...                ...   \n",
      "59                    5.0                3.0                1.0   \n",
      "60                   14.0               10.0                1.0   \n",
      "61                    5.0                3.0                1.0   \n",
      "62                    3.0                2.0                1.0   \n",
      "63                    5.0                3.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    274.0       1  \n",
      "1                    120.0       1  \n",
      "2                      5.0       0  \n",
      "3                     27.0       1  \n",
      "4                      9.0       0  \n",
      "..                     ...     ...  \n",
      "59                     5.0       0  \n",
      "60                     6.0       1  \n",
      "61                     5.0       0  \n",
      "62                     7.0       0  \n",
      "63                     5.0       0  \n",
      "\n",
      "[64 rows x 43 columns], 2009:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1106.0  1287.0        0.689655   25.551724   54.931034     5.689655   \n",
      "1   1151.0  1163.0        0.500000   24.750000   56.281250     8.125000   \n",
      "2   1181.0  1127.0        0.823529   26.588235   59.294118     7.235294   \n",
      "3   1103.0  1211.0        0.647059   22.588235   54.264706     7.117647   \n",
      "4   1139.0  1261.0        0.833333   21.766667   49.766667     7.933333   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "59  1277.0  1257.0        0.812500   25.375000   55.781250     5.156250   \n",
      "60  1314.0  1328.0        0.870968   31.354839   65.967742     6.806452   \n",
      "61  1163.0  1277.0        0.870968   27.387097   58.258065     4.741935   \n",
      "62  1314.0  1437.0        0.870968   31.354839   65.967742     6.806452   \n",
      "63  1277.0  1314.0        0.812500   25.375000   55.781250     5.156250   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     17.310345   12.689655   20.034483  11.413793  ...    6.406250   \n",
      "1     23.250000   17.375000   26.687500  12.343750  ...    5.806452   \n",
      "2     20.735294   17.617647   24.352941  13.323529  ...    7.066667   \n",
      "3     21.617647   14.117647   19.735294  11.735294  ...    7.500000   \n",
      "4     22.500000   15.533333   21.533333   9.966667  ...    7.606061   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "59    14.625000   16.000000   23.312500  13.968750  ...    9.272727   \n",
      "60    18.258065   19.870968   25.935484  15.193548  ...    6.937500   \n",
      "61    13.677419   17.806452   26.290323  14.225806  ...    6.406250   \n",
      "62    18.258065   19.870968   25.935484  15.193548  ...    7.969697   \n",
      "63    14.625000   16.000000   23.312500  13.968750  ...    8.290323   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     3.968750  19.218750               341.0              176.00   \n",
      "1     8.000000  12.903226                45.0                2.00   \n",
      "2     4.166667  20.200000               310.0              133.25   \n",
      "3     5.000000  16.133333               107.0                9.00   \n",
      "4     6.060606  17.303030               153.0               32.00   \n",
      "..         ...        ...                 ...                 ...   \n",
      "59    6.181818  17.151515               156.0                7.00   \n",
      "60    4.468750  17.406250                57.0                4.00   \n",
      "61    2.843750  19.031250               145.0                7.00   \n",
      "62    3.212121  18.969697                56.0               12.00   \n",
      "63    5.290323  15.870968                27.0                1.00   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                  222.75              192.0               90.0   \n",
      "1                    5.50                4.0                1.0   \n",
      "2                  189.00              163.0               60.0   \n",
      "3                   25.50               17.0                1.0   \n",
      "4                   62.00               41.0                8.0   \n",
      "..                    ...                ...                ...   \n",
      "59                  18.50               11.0                1.0   \n",
      "60                  10.00                7.0                1.0   \n",
      "61                  18.00               10.0                1.0   \n",
      "62                  28.00               18.0                6.0   \n",
      "63                   4.00                2.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    185.0       0  \n",
      "1                      2.0       0  \n",
      "2                     93.0       1  \n",
      "3                     37.0       0  \n",
      "4                     32.0       0  \n",
      "..                     ...     ...  \n",
      "59                    12.0       1  \n",
      "60                     7.0       1  \n",
      "61                     6.0       0  \n",
      "62                     9.0       1  \n",
      "63                     5.0       0  \n",
      "\n",
      "[64 rows x 43 columns], 2010:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1115.0  1457.0        0.531250   21.593750   52.531250     4.093750   \n",
      "1   1358.0  1124.0        0.750000   27.285714   58.464286     8.964286   \n",
      "2   1139.0  1431.0        0.875000   22.718750   50.187500     6.750000   \n",
      "3   1196.0  1140.0        0.636364   25.939394   58.424242     5.848485   \n",
      "4   1250.0  1242.0        0.687500   25.531250   55.968750     6.656250   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "59  1181.0  1124.0        0.852941   26.500000   60.205882     7.558824   \n",
      "60  1277.0  1397.0        0.750000   26.906250   56.843750     4.781250   \n",
      "61  1139.0  1277.0        0.875000   22.718750   50.187500     6.750000   \n",
      "62  1452.0  1181.0        0.818182   25.272727   58.242424     6.939394   \n",
      "63  1181.0  1139.0        0.852941   26.500000   60.205882     7.558824   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     13.468750   17.125000   25.812500  12.593750  ...    8.733333   \n",
      "1     23.285714   16.357143   23.071429  12.035714  ...    6.387097   \n",
      "2     19.750000   17.906250   23.937500   9.250000  ...    8.750000   \n",
      "3     18.666667   13.878788   19.757576  13.181818  ...    8.545455   \n",
      "4     16.625000   17.406250   24.312500  10.187500  ...    8.411765   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "59    19.764706   17.411765   22.823529  14.617647  ...    6.387097   \n",
      "60    14.343750   14.031250   20.593750  13.531250  ...    8.090909   \n",
      "61    19.750000   17.906250   23.937500   9.250000  ...    6.718750   \n",
      "62    20.666667   15.484848   22.242424  15.575758  ...    6.941176   \n",
      "63    19.764706   17.411765   22.823529  14.617647  ...    6.843750   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     3.766667  18.966667               320.0               203.0   \n",
      "1     6.935484  18.064516               109.0                15.0   \n",
      "2     3.718750  19.343750               239.0                38.0   \n",
      "3     3.484848  17.363636               123.0                 9.0   \n",
      "4     6.411765  18.264706                46.0                 1.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "59    6.935484  18.064516               109.0                15.0   \n",
      "60    3.757576  19.909091               163.0                14.0   \n",
      "61    3.093750  17.656250               115.0                13.0   \n",
      "62    4.205882  18.529412                19.0                 2.0   \n",
      "63    2.468750  18.500000                89.0                18.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                   240.0              224.0              145.0   \n",
      "1                    34.0               21.0                5.0   \n",
      "2                    77.0               48.5               16.0   \n",
      "3                    18.0               13.0                3.0   \n",
      "4                     3.0                1.0                1.0   \n",
      "..                    ...                ...                ...   \n",
      "59                   34.0               21.0                5.0   \n",
      "60                   24.0               18.0                2.0   \n",
      "61                   25.0               19.0                2.0   \n",
      "62                    5.0                3.0                1.0   \n",
      "63                   34.0               25.0                5.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    245.0       1  \n",
      "1                      6.0       0  \n",
      "2                     36.0       1  \n",
      "3                     14.0       0  \n",
      "4                      1.0       0  \n",
      "..                     ...     ...  \n",
      "59                     6.0       1  \n",
      "60                    29.0       1  \n",
      "61                    28.0       1  \n",
      "62                     4.0       0  \n",
      "63                    25.0       1  \n",
      "\n",
      "[64 rows x 43 columns], 2011:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1412.0  1155.0        0.733333   24.600000   55.900000     7.566667   \n",
      "1   1421.0  1114.0        0.551724   25.241379   56.241379     4.862069   \n",
      "2   1427.0  1106.0        0.551724   23.482759   54.724138     7.137931   \n",
      "3   1433.0  1425.0        0.676471   24.264706   55.764706     8.176471   \n",
      "4   1139.0  1330.0        0.709677   24.709677   55.806452     7.451613   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1314.0  1246.0        0.787879   27.909091   62.090909     5.242424   \n",
      "63  1242.0  1433.0        0.941176   29.588235   57.617647     7.264706   \n",
      "64  1433.0  1139.0        0.676471   24.264706   55.764706     8.176471   \n",
      "65  1163.0  1246.0        0.742857   26.000000   60.057143     5.828571   \n",
      "66  1139.0  1163.0        0.709677   24.709677   55.806452     7.451613   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     22.466667   12.133333   16.866667  11.500000  ...    8.031250   \n",
      "1     14.758621   16.448276   23.482759  11.344828  ...    5.696970   \n",
      "2     19.655172   16.379310   22.758621  10.344828  ...    7.312500   \n",
      "3     22.764706   14.823529   20.617647  10.911765  ...    5.969697   \n",
      "4     20.580645   15.612903   21.451613  10.870968  ...    6.818182   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    15.727273   15.606061   23.545455  14.181818  ...    5.484848   \n",
      "63    18.764706   15.941176   23.411765  11.676471  ...    8.529412   \n",
      "64    22.764706   14.823529   20.617647  10.911765  ...    5.935484   \n",
      "65    17.571429   15.571429   20.628571  14.428571  ...    5.484848   \n",
      "66    20.580645   15.612903   21.451613  10.870968  ...    6.628571   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     4.875000  18.375000               164.0                42.0   \n",
      "1     2.363636  20.727273               287.0               187.0   \n",
      "2     4.562500  22.312500               338.0               303.0   \n",
      "3     2.969697  17.242424               188.0                57.0   \n",
      "4     4.363636  14.727273               159.0                30.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    6.272727  16.090909                31.0                 8.0   \n",
      "63    3.676471  18.235294               120.0                60.0   \n",
      "64    1.516129  19.161290               131.0                40.0   \n",
      "65    6.272727  16.090909                31.0                 8.0   \n",
      "66    5.628571  16.028571                71.0                 8.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                    66.0               54.0               19.0   \n",
      "1                   218.0              203.0               38.0   \n",
      "2                   327.0              318.0              147.0   \n",
      "3                    94.0               76.0               25.0   \n",
      "4                    54.0               39.0               12.0   \n",
      "..                    ...                ...                ...   \n",
      "62                   17.0               12.0                1.0   \n",
      "63                   85.0               72.0               30.0   \n",
      "64                   59.0               50.0                4.0   \n",
      "65                   17.0               12.0                1.0   \n",
      "66                   20.0               13.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                     61.0       0  \n",
      "1                    195.0       1  \n",
      "2                    302.0       1  \n",
      "3                    107.0       1  \n",
      "4                     24.0       1  \n",
      "..                     ...     ...  \n",
      "62                    26.0       0  \n",
      "63                    52.0       0  \n",
      "64                    72.0       0  \n",
      "65                    26.0       1  \n",
      "66                    10.0       0  \n",
      "\n",
      "[67 rows x 43 columns], 2012:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1140.0  1233.0        0.741935   27.967742   60.032258     6.806452   \n",
      "1   1290.0  1443.0        0.636364   23.939394   59.515152     7.515152   \n",
      "2   1143.0  1378.0        0.727273   26.424242   55.151515     4.636364   \n",
      "3   1249.0  1436.0        0.656250   25.375000   59.093750     4.250000   \n",
      "4   1124.0  1355.0        0.787879   26.090909   56.000000     6.727273   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1314.0  1242.0        0.852941   30.000000   65.117647     5.058824   \n",
      "63  1124.0  1246.0        0.787879   26.090909   56.000000     6.727273   \n",
      "64  1326.0  1242.0        0.794118   27.588235   57.117647     4.852941   \n",
      "65  1257.0  1246.0        0.742857   24.228571   57.057143     5.885714   \n",
      "66  1246.0  1242.0        0.941176   27.323529   56.588235     5.735294   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     19.548387   15.612903   22.032258  10.806452  ...    7.218750   \n",
      "1     22.878788   13.515152   20.787879  13.242424  ...    5.515152   \n",
      "2     12.606061   14.181818   19.000000   9.969697  ...    5.562500   \n",
      "3     12.812500   17.625000   24.343750  13.968750  ...    6.235294   \n",
      "4     17.848485   15.363636   20.424242  12.121212  ...    6.468750   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    14.911765   16.911765   24.794118  15.676471  ...    7.393939   \n",
      "63    17.848485   15.363636   20.424242  12.121212  ...    6.323529   \n",
      "64    14.882353   14.735294   21.117647  11.882353  ...    7.393939   \n",
      "65    18.942857   14.485714   21.114286  13.142857  ...    6.323529   \n",
      "66    15.441176   16.294118   22.617647  12.500000  ...    7.393939   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     2.125000  16.875000               120.0                41.0   \n",
      "1     4.090909  19.818182               325.0               214.0   \n",
      "2     3.562500  15.375000               218.0                70.0   \n",
      "3     2.382353  17.323529               293.0               146.0   \n",
      "4     1.843750  16.218750               194.0                62.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    5.636364  17.636364                65.0                 4.0   \n",
      "63    8.794118  14.558824                37.0                 1.0   \n",
      "64    5.636364  17.636364                65.0                 4.0   \n",
      "65    8.794118  14.558824                37.0                 1.0   \n",
      "66    5.636364  17.636364                65.0                 4.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                    61.0               50.0                3.0   \n",
      "1                   259.0              236.0              130.0   \n",
      "2                   125.0               95.5               24.0   \n",
      "3                   198.0              171.0               63.0   \n",
      "4                    91.0               76.0               27.0   \n",
      "..                    ...                ...                ...   \n",
      "62                   11.0                6.0                1.0   \n",
      "63                    4.0                2.0                1.0   \n",
      "64                   11.0                6.0                1.0   \n",
      "65                    4.0                2.0                1.0   \n",
      "66                   11.0                6.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                     79.0       1  \n",
      "1                    215.0       0  \n",
      "2                     72.0       0  \n",
      "3                    157.0       0  \n",
      "4                     90.0       1  \n",
      "..                     ...     ...  \n",
      "62                     5.0       0  \n",
      "63                     1.0       0  \n",
      "64                     5.0       0  \n",
      "65                     1.0       0  \n",
      "66                     5.0       1  \n",
      "\n",
      "[67 rows x 43 columns], 2013:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1299.0  1251.0        0.529412   20.558824   51.911765     5.794118   \n",
      "1   1388.0  1292.0        0.812500   26.062500   55.250000     7.843750   \n",
      "2   1254.0  1241.0        0.606061   27.090909   56.030303     7.363636   \n",
      "3   1247.0  1129.0        0.700000   25.733333   57.400000     7.600000   \n",
      "4   1112.0  1125.0        0.781250   25.031250   55.656250     7.656250   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1181.0  1257.0        0.843750   27.343750   57.406250     7.750000   \n",
      "63  1196.0  1276.0        0.787879   26.212121   54.515152     8.393939   \n",
      "64  1455.0  1257.0        0.764706   24.588235   55.500000     6.588235   \n",
      "65  1393.0  1276.0        0.742857   25.685714   58.371429     6.057143   \n",
      "66  1257.0  1276.0        0.852941   25.852941   58.058824     5.823529   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     19.205882   14.705882   22.411765  10.647059  ...    5.125000   \n",
      "1     21.031250   14.906250   20.406250  11.937500  ...    7.090909   \n",
      "2     19.121212   17.909091   25.969697  11.787879  ...    7.882353   \n",
      "3     20.500000   13.366667   18.100000  10.100000  ...    6.620690   \n",
      "4     21.093750   15.562500   20.812500  11.531250  ...    9.533333   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    19.093750   15.843750   21.656250   9.656250  ...   10.735294   \n",
      "63    22.060606   10.818182   15.878788  10.545455  ...    6.031250   \n",
      "64    19.558824   13.676471   19.882353  13.147059  ...   10.735294   \n",
      "65    18.114286   13.914286   20.600000  14.542857  ...    6.031250   \n",
      "66    17.617647   16.029412   22.529412  13.617647  ...    6.031250   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     2.906250  18.906250               347.0              293.75   \n",
      "1     3.787879  20.606061               208.0               34.00   \n",
      "2     4.500000  17.147059               333.0              186.00   \n",
      "3     1.655172  19.275862               261.0               43.00   \n",
      "4     2.733333  18.200000               147.0               31.00   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    4.235294  17.735294                27.0                3.00   \n",
      "63    2.843750  13.062500                34.0                3.00   \n",
      "64    4.235294  17.735294                27.0                3.00   \n",
      "65    2.843750  13.062500                34.0                3.00   \n",
      "66    2.843750  13.062500                34.0                3.00   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                  328.00              314.0              179.0   \n",
      "1                   50.00               42.0                7.0   \n",
      "2                  211.25              198.0              117.0   \n",
      "3                   62.00               52.0                6.0   \n",
      "4                   51.00               42.0                3.0   \n",
      "..                    ...                ...                ...   \n",
      "62                   8.00                5.0                1.0   \n",
      "63                   8.00                5.0                1.0   \n",
      "64                   8.00                5.0                1.0   \n",
      "65                   8.00                5.0                1.0   \n",
      "66                   8.00                5.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    312.0       1  \n",
      "1                     14.0       1  \n",
      "2                    189.0       0  \n",
      "3                     62.0       1  \n",
      "4                     20.0       1  \n",
      "..                     ...     ...  \n",
      "62                    11.0       0  \n",
      "63                     9.0       0  \n",
      "64                    11.0       0  \n",
      "65                     9.0       0  \n",
      "66                     9.0       1  \n",
      "\n",
      "[67 rows x 43 columns], 2014:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1107.0  1291.0        0.562500   22.437500   51.093750     4.906250   \n",
      "1   1462.0  1301.0        0.636364   25.636364   54.393939     5.212121   \n",
      "2   1142.0  1411.0        0.366667   21.733333   53.833333     6.333333   \n",
      "3   1397.0  1234.0        0.625000   24.406250   55.156250     5.562500   \n",
      "4   1163.0  1386.0        0.764706   24.382353   54.382353     7.117647   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1277.0  1163.0        0.764706   27.264706   57.441176     8.058824   \n",
      "63  1246.0  1276.0        0.705882   25.176471   55.794118     5.088235   \n",
      "64  1196.0  1163.0        0.941176   24.382353   52.764706     6.852941   \n",
      "65  1246.0  1458.0        0.705882   25.176471   55.794118     5.088235   \n",
      "66  1246.0  1163.0        0.705882   25.176471   55.794118     5.088235   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     13.468750   16.250000   21.718750  10.343750  ...    7.156250   \n",
      "1     14.727273   15.727273   22.848485  11.151515  ...    4.764706   \n",
      "2     18.900000   12.200000   17.766667  10.733333  ...    4.593750   \n",
      "3     16.875000   16.125000   22.781250  13.718750  ...    7.250000   \n",
      "4     18.382353   15.970588   21.000000  10.088235  ...    4.484848   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    20.588235   13.352941   19.264706  11.058824  ...    6.970588   \n",
      "63    15.647059   20.470588   30.000000  14.647059  ...    5.121212   \n",
      "64    18.617647   15.117647   22.882353  11.676471  ...    6.970588   \n",
      "65    15.647059   20.470588   30.000000  14.647059  ...    5.000000   \n",
      "66    15.647059   20.470588   30.000000  14.647059  ...    6.970588   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     3.062500  18.750000               341.0               231.0   \n",
      "1     3.970588  18.705882               173.0                62.0   \n",
      "2     3.531250  16.562500               337.0               251.0   \n",
      "3     5.062500  17.968750                76.0                 9.0   \n",
      "4     4.606061  15.818182               208.0                53.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    6.205882  18.264706                71.0                20.0   \n",
      "63    2.515152  14.545455               149.0                11.0   \n",
      "64    6.205882  18.264706                71.0                20.0   \n",
      "65    3.515152  14.939394                40.0                 5.0   \n",
      "66    6.205882  18.264706                71.0                20.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                   264.5              249.0              139.0   \n",
      "1                    81.0               72.0               22.0   \n",
      "2                   283.5              268.0              139.0   \n",
      "3                    24.0               16.0                1.0   \n",
      "4                    84.0               71.0               23.0   \n",
      "..                    ...                ...                ...   \n",
      "62                   31.0               26.0                1.0   \n",
      "63                   25.0               15.0                3.0   \n",
      "64                   31.0               26.0                1.0   \n",
      "65                   12.0                9.0                1.0   \n",
      "66                   31.0               26.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    245.0       1  \n",
      "1                     64.0       0  \n",
      "2                    284.0       1  \n",
      "3                     24.0       1  \n",
      "4                     38.0       1  \n",
      "..                     ...     ...  \n",
      "62                    27.0       0  \n",
      "63                    14.0       1  \n",
      "64                    27.0       0  \n",
      "65                    10.0       1  \n",
      "66                    27.0       0  \n",
      "\n",
      "[67 rows x 43 columns], 2015:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1214.0  1264.0        0.484848   22.818182   55.969697     5.666667   \n",
      "1   1140.0  1279.0        0.718750   27.187500   59.062500     8.218750   \n",
      "2   1173.0  1129.0        0.757576   22.727273   49.090909     6.454545   \n",
      "3   1352.0  1316.0        0.575758   24.303030   54.484848     6.393939   \n",
      "4   1411.0  1112.0        0.647059   23.352941   52.617647     5.294118   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1211.0  1181.0        0.939394   28.212121   54.363636     7.121212   \n",
      "63  1257.0  1277.0        0.750000   24.468750   57.093750     5.656250   \n",
      "64  1181.0  1277.0        0.878788   28.606061   56.969697     7.575758   \n",
      "65  1246.0  1458.0        1.000000   25.970588   55.411765     5.441176   \n",
      "66  1181.0  1458.0        0.878788   28.606061   56.969697     7.575758   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     18.636364   15.848485   24.303030  12.242424  ...    8.093750   \n",
      "1     21.375000   19.250000   25.000000  11.937500  ...    6.593750   \n",
      "2     18.333333   16.303030   23.909091   7.424242  ...    5.967742   \n",
      "3     16.818182   14.000000   19.606061  10.424242  ...    6.096774   \n",
      "4     16.529412   16.176471   24.441176  11.352941  ...    7.176471   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    17.454545   14.666667   21.272727  10.121212  ...    7.181818   \n",
      "63    18.593750   14.625000   22.156250  12.906250  ...    5.323529   \n",
      "64    19.636364   15.818182   22.878788  12.151515  ...    5.323529   \n",
      "65    15.558824   17.529412   24.264706  12.911765  ...    4.529412   \n",
      "66    19.636364   15.818182   22.878788  12.151515  ...    4.529412   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     2.781250  22.906250               325.0               165.0   \n",
      "1     3.687500  19.562500               200.0                39.0   \n",
      "2     2.322581  17.225806               202.0                48.0   \n",
      "3     3.935484  16.580645               292.0               147.0   \n",
      "4     3.588235  17.911765                44.0                 4.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    3.757576  16.000000                28.0                 3.0   \n",
      "63    4.558824  18.558824               112.0                19.0   \n",
      "64    4.558824  18.558824               112.0                19.0   \n",
      "65    3.500000  12.029412                18.0                 3.0   \n",
      "66    3.500000  12.029412                18.0                 3.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                  224.00              193.0               79.0   \n",
      "1                   65.25               48.0               20.0   \n",
      "2                   76.00               60.0               19.0   \n",
      "3                  192.00              166.0               69.0   \n",
      "4                    8.75                6.0                1.0   \n",
      "..                    ...                ...                ...   \n",
      "62                   5.00                4.0                1.0   \n",
      "63                  31.00               24.0                5.0   \n",
      "64                  31.00               24.0                5.0   \n",
      "65                   6.00                4.0                1.0   \n",
      "66                   6.00                4.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    196.0       1  \n",
      "1                     34.0       0  \n",
      "2                     43.0       1  \n",
      "3                    180.0       1  \n",
      "4                      8.0       0  \n",
      "..                     ...     ...  \n",
      "62                     4.0       0  \n",
      "63                    28.0       0  \n",
      "64                    28.0       1  \n",
      "65                     6.0       0  \n",
      "66                     6.0       1  \n",
      "\n",
      "[67 rows x 43 columns], 2016:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1195.0  1192.0        0.551724   28.206897   60.068966     5.068966   \n",
      "1   1455.0  1435.0        0.741935   25.064516   57.903226     7.322581   \n",
      "2   1221.0  1380.0        0.424242   22.333333   54.090909     7.151515   \n",
      "3   1409.0  1276.0        0.645161   25.677419   57.838710     6.967742   \n",
      "4   1114.0  1345.0        0.870968   25.032258   54.774194     7.354839   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1323.0  1314.0        0.656250   27.156250   57.625000     7.343750   \n",
      "63  1393.0  1438.0        0.593750   23.937500   56.125000     8.750000   \n",
      "64  1393.0  1314.0        0.593750   23.937500   56.125000     8.750000   \n",
      "65  1437.0  1328.0        0.852941   26.617647   56.941176     8.558824   \n",
      "66  1437.0  1314.0        0.852941   26.617647   56.941176     8.558824   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     14.655172   14.103448   21.862069  11.448276  ...    7.354839   \n",
      "1     22.290323   15.677419   21.903226  11.612903  ...    4.312500   \n",
      "2     21.848485   13.515152   19.515152   8.151515  ...    7.354839   \n",
      "3     21.161290   15.677419   23.129032  10.096774  ...    5.424242   \n",
      "4     19.000000   12.580645   17.129032   8.709677  ...    4.264706   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    19.906250   14.062500   19.125000  10.906250  ...    6.882353   \n",
      "63    24.250000   13.593750   19.906250  11.812500  ...    5.484848   \n",
      "64    24.250000   13.593750   19.906250  11.812500  ...    6.882353   \n",
      "65    24.911765   15.176471   19.529412   9.264706  ...    6.906250   \n",
      "66    24.911765   15.176471   19.529412   9.264706  ...    6.882353   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     2.516129  21.580645               347.0              249.00   \n",
      "1     5.531250  19.125000               114.0               21.00   \n",
      "2     3.322581  19.741935               307.0              187.75   \n",
      "3     2.090909  15.666667               210.0               30.00   \n",
      "4     4.647059  17.176471                62.0                9.00   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    4.382353  17.911765                52.0                5.00   \n",
      "63    2.939394  16.363636                60.0                5.00   \n",
      "64    4.382353  17.911765                52.0                5.00   \n",
      "65    5.250000  16.812500                80.0                2.00   \n",
      "66    4.382353  17.911765                52.0                5.00   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                  283.00              268.0              172.0   \n",
      "1                   50.00               32.0                2.0   \n",
      "2                  229.25              209.0               68.0   \n",
      "3                   48.00               38.0               11.0   \n",
      "4                   18.00               14.0                1.0   \n",
      "..                    ...                ...                ...   \n",
      "62                  10.00                7.0                1.0   \n",
      "63                  11.00                7.0                1.0   \n",
      "64                  10.00                7.0                1.0   \n",
      "65                   8.00                4.0                1.0   \n",
      "66                  10.00                7.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    262.0       1  \n",
      "1                     74.0       1  \n",
      "2                    190.0       1  \n",
      "3                     39.0       0  \n",
      "4                     25.0       1  \n",
      "..                     ...     ...  \n",
      "62                     7.0       0  \n",
      "63                     5.0       1  \n",
      "64                     7.0       0  \n",
      "65                     4.0       1  \n",
      "66                     7.0       1  \n",
      "\n",
      "[67 rows x 43 columns], 2017:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1448.0  1243.0        0.593750   28.062500   59.437500     8.093750   \n",
      "1   1309.0  1291.0        0.607143   24.928571   54.000000     4.214286   \n",
      "2   1413.0  1300.0        0.625000   24.062500   55.687500     6.125000   \n",
      "3   1344.0  1425.0        0.625000   24.343750   54.500000     7.187500   \n",
      "4   1112.0  1315.0        0.882353   26.205882   55.088235     6.735294   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1314.0  1246.0        0.787879   30.848485   65.909091     7.242424   \n",
      "63  1376.0  1196.0        0.677419   24.258065   59.064516     6.645161   \n",
      "64  1211.0  1376.0        0.969697   30.363636   58.636364     7.303030   \n",
      "65  1332.0  1314.0        0.848485   27.969697   58.060606     8.606061   \n",
      "66  1211.0  1314.0        0.969697   30.363636   58.636364     7.303030   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     20.937500   18.437500   23.875000  10.687500  ...    7.818182   \n",
      "1     13.535714   16.678571   23.500000  11.928571  ...    6.205882   \n",
      "2     17.468750   15.125000   22.875000  10.218750  ...    5.866667   \n",
      "3     19.531250   14.375000   20.812500   8.968750  ...    7.242424   \n",
      "4     16.941176   17.117647   22.588235  10.294118  ...    7.642857   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    19.757576   15.393939   21.787879  15.757576  ...    6.058824   \n",
      "63    19.903226   16.322581   23.612903  12.516129  ...    7.562500   \n",
      "64    19.121212   16.545455   22.424242   9.363636  ...    7.903226   \n",
      "65    22.727273   14.121212   20.000000  10.272727  ...    6.787879   \n",
      "66    19.121212   16.545455   22.424242   9.363636  ...    6.787879   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     3.787879  17.727273               108.0                31.0   \n",
      "1     4.000000  18.000000               350.0               202.0   \n",
      "2     3.266667  17.166667               329.0               141.0   \n",
      "3     5.424242  15.909091                85.0                29.0   \n",
      "4     2.821429  21.428571               314.0               163.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    5.294118  19.294118                32.0                 3.0   \n",
      "63    4.843750  18.593750                58.0                 9.0   \n",
      "64    3.677419  20.935484                69.0                24.0   \n",
      "65    3.212121  17.909091                34.0                 4.0   \n",
      "66    3.212121  17.909091                34.0                 4.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                    45.0               37.0               16.0   \n",
      "1                   234.0              216.0              106.0   \n",
      "2                   187.0              163.0               47.0   \n",
      "3                    54.0               41.0                4.0   \n",
      "4                   215.0              187.0               53.0   \n",
      "..                    ...                ...                ...   \n",
      "62                    8.0                5.0                1.0   \n",
      "63                   18.0               13.0                1.0   \n",
      "64                   35.0               29.0                6.0   \n",
      "65                   10.0                6.0                1.0   \n",
      "66                   10.0                6.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                     33.0       0  \n",
      "1                    210.0       0  \n",
      "2                    136.0       1  \n",
      "3                     71.0       0  \n",
      "4                    156.0       1  \n",
      "..                     ...     ...  \n",
      "62                     7.0       1  \n",
      "63                     6.0       1  \n",
      "64                    29.0       1  \n",
      "65                     4.0       0  \n",
      "66                     4.0       0  \n",
      "\n",
      "[67 rows x 43 columns], 2018:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1254.0  1347.0        0.515152   26.575758   58.363636     7.909091   \n",
      "1   1382.0  1417.0        0.781250   26.375000   57.843750     7.750000   \n",
      "2   1113.0  1393.0        0.645161   27.967742   60.258065     8.935484   \n",
      "3   1300.0  1411.0        0.516129   26.161290   56.903226     5.967742   \n",
      "4   1104.0  1439.0        0.558824   25.294118   55.205882     6.382353   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1181.0  1242.0        0.787879   30.545455   61.939394     8.303030   \n",
      "63  1437.0  1403.0        0.882353   31.029412   61.529412    11.411765   \n",
      "64  1276.0  1260.0        0.794118   26.647059   57.235294     8.970588   \n",
      "65  1242.0  1437.0        0.794118   30.117647   60.529412    10.147059   \n",
      "66  1276.0  1437.0        0.794118   26.647059   57.235294     8.970588   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     22.696970   15.636364   22.454545  10.515152  ...    6.312500   \n",
      "1     19.468750   17.406250   23.093750  10.343750  ...    5.718750   \n",
      "2     24.548387   18.645161   25.258065   9.903226  ...    7.242424   \n",
      "3     17.967742   12.096774   17.741935  11.129032  ...    5.588235   \n",
      "4     19.676471   15.382353   22.882353  10.029412  ...    5.750000   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    21.969697   15.303030   21.606061  13.545455  ...    6.617647   \n",
      "63    28.676471   13.588235   17.617647   9.382353  ...    7.393939   \n",
      "64    24.705882   11.382353   17.323529   8.647059  ...    6.656250   \n",
      "65    25.205882   11.117647   15.882353   9.558824  ...    6.676471   \n",
      "66    24.705882   11.382353   17.323529   8.647059  ...    6.676471   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     2.906250  16.750000               303.0              165.00   \n",
      "1     3.906250  17.937500               139.0               43.00   \n",
      "2     5.575758  16.303030                71.0               41.00   \n",
      "3     3.941176  17.735294               346.0              218.00   \n",
      "4     2.281250  15.687500               109.0               33.00   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    4.176471  15.294118                57.0                5.00   \n",
      "63    4.272727  18.151515                82.0                9.25   \n",
      "64    2.375000  14.000000               162.0               53.00   \n",
      "65    3.970588  15.852941                57.0                1.00   \n",
      "66    3.970588  15.852941                57.0                1.00   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                   196.0              181.0               81.0   \n",
      "1                    59.0               50.0                1.0   \n",
      "2                    52.0               47.0                1.0   \n",
      "3                   270.0              246.0              119.0   \n",
      "4                    49.0               40.0                1.0   \n",
      "..                    ...                ...                ...   \n",
      "62                   10.0                7.0                1.0   \n",
      "63                   18.0               13.0                1.0   \n",
      "64                   91.0               68.0                1.0   \n",
      "65                    2.0                2.0                1.0   \n",
      "66                    2.0                2.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                    183.0       0  \n",
      "1                     52.0       1  \n",
      "2                     47.0       0  \n",
      "3                    252.0       0  \n",
      "4                     48.0       1  \n",
      "..                     ...     ...  \n",
      "62                     6.0       0  \n",
      "63                     8.0       1  \n",
      "64                    51.0       1  \n",
      "65                     1.0       0  \n",
      "66                     1.0       0  \n",
      "\n",
      "[67 rows x 43 columns], 2019:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1396.0  1125.0        0.718750   26.406250   60.218750     7.500000   \n",
      "1   1192.0  1341.0        0.580645   26.193548   55.225806     7.806452   \n",
      "2   1385.0  1113.0        0.636364   27.939394   61.545455     8.515152   \n",
      "3   1300.0  1295.0        0.500000   24.266667   54.933333     6.266667   \n",
      "4   1308.0  1120.0        0.875000   27.343750   59.281250     9.375000   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1246.0  1120.0        0.818182   26.606061   55.606061     6.030303   \n",
      "63  1181.0  1277.0        0.852941   30.500000   63.911765     7.264706   \n",
      "64  1277.0  1403.0        0.823529   27.764706   57.176471     8.294118   \n",
      "65  1438.0  1120.0        0.906250   25.625000   53.593750     8.468750   \n",
      "66  1403.0  1438.0        0.812500   26.156250   55.468750     7.250000   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     22.687500   14.531250   19.875000   9.718750  ...    6.666667   \n",
      "1     19.322581   14.548387   19.548387   9.225806  ...    8.818182   \n",
      "2     23.575758   13.121212   18.090909   7.636364  ...    6.218750   \n",
      "3     20.100000   12.900000   18.333333  11.533333  ...    4.741935   \n",
      "4     27.531250   13.593750   20.187500  12.625000  ...    9.294118   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    16.575758   17.484848   23.636364  11.606061  ...    9.294118   \n",
      "63    24.058824   15.235294   22.088235  13.382353  ...    5.235294   \n",
      "64    21.617647   15.000000   20.000000  10.823529  ...    7.375000   \n",
      "65    20.718750   12.125000   16.250000   8.875000  ...    9.294118   \n",
      "66    19.718750   13.531250   18.593750   8.843750  ...    5.625000   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     3.800000  15.700000               180.0                48.0   \n",
      "1     1.606061  21.696970               350.0               231.0   \n",
      "2     3.218750  19.906250               130.0                42.0   \n",
      "3     2.483871  15.129032               306.0               200.0   \n",
      "4     4.764706  18.382353                58.0                11.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    4.764706  18.382353                58.0                11.0   \n",
      "63    5.470588  16.911765                81.0                 4.0   \n",
      "64    4.906250  17.781250                69.0                 9.0   \n",
      "65    4.764706  18.382353                58.0                11.0   \n",
      "66    3.812500  14.656250                44.0                 2.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                   73.00               59.0               11.0   \n",
      "1                  281.00              257.0              125.0   \n",
      "2                   56.00               50.0                8.0   \n",
      "3                  221.25              209.0              105.0   \n",
      "4                   23.00               15.0                2.0   \n",
      "..                    ...                ...                ...   \n",
      "62                  23.00               15.0                2.0   \n",
      "63                   8.00                5.0                1.0   \n",
      "64                  16.00               11.0                1.0   \n",
      "65                  23.00               15.0                2.0   \n",
      "66                   4.00                3.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                     68.0       0  \n",
      "1                    250.0       1  \n",
      "2                     48.0       0  \n",
      "3                    213.0       0  \n",
      "4                     13.0       0  \n",
      "..                     ...     ...  \n",
      "62                    13.0       0  \n",
      "63                     4.0       0  \n",
      "64                     7.0       0  \n",
      "65                    13.0       1  \n",
      "66                     3.0       0  \n",
      "\n",
      "[67 rows x 43 columns], 2021:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1179.0  1455.0        0.851852   29.296296   60.037037     6.888889   \n",
      "1   1313.0  1111.0        0.666667   25.476190   59.285714     7.952381   \n",
      "2   1411.0  1291.0        0.652174   26.391304   59.260870     4.565217   \n",
      "3   1277.0  1417.0        0.555556   24.740741   58.296296     6.370370   \n",
      "4   1116.0  1159.0        0.785714   29.464286   64.785714     7.857143   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "61  1211.0  1425.0        1.000000   34.153846   62.000000     7.307692   \n",
      "62  1417.0  1276.0        0.653846   26.384615   57.115385     6.653846   \n",
      "63  1222.0  1124.0        0.884615   26.653846   60.807692     9.115385   \n",
      "64  1417.0  1211.0        0.653846   26.384615   57.115385     6.653846   \n",
      "65  1211.0  1124.0        1.000000   34.153846   62.000000     7.307692   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     18.814815   10.740741   15.111111   8.777778  ...    5.736842   \n",
      "1     21.285714   16.238095   22.904762   8.238095  ...    7.541667   \n",
      "2     16.478261   16.217391   22.956522  10.217391  ...    4.409091   \n",
      "3     19.888889   13.185185   18.296296   9.666667  ...    5.076923   \n",
      "4     23.178571   15.607143   21.178571  10.571429  ...    7.200000   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "61    20.038462   16.500000   22.730769   8.230769  ...    4.793103   \n",
      "62    18.115385   13.423077   18.615385   8.769231  ...    4.416667   \n",
      "63    25.692308   13.884615   18.692308  12.846154  ...    8.958333   \n",
      "64    18.115385   13.423077   18.615385   8.769231  ...    8.307692   \n",
      "65    20.038462   16.500000   22.730769   8.230769  ...    8.958333   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     3.421053   3.578947               222.0                48.0   \n",
      "1     3.166667   8.083333               311.0               164.0   \n",
      "2     4.136364   6.636364               320.0               188.0   \n",
      "3     2.653846   4.346154                97.0                30.0   \n",
      "4     3.400000   4.533333               339.0                32.5   \n",
      "..         ...        ...                 ...                 ...   \n",
      "61    5.241379   4.482759               115.0                13.0   \n",
      "62    4.291667   6.208333                77.0                 3.0   \n",
      "63    3.750000   5.250000                27.0                 2.0   \n",
      "64    2.846154   3.576923                22.0                 1.0   \n",
      "65    3.750000   5.250000                27.0                 2.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                   77.00               64.0               16.0   \n",
      "1                  202.00              182.0               97.0   \n",
      "2                  237.75              209.0              105.0   \n",
      "3                   45.00               38.0                9.0   \n",
      "4                  103.00               67.0                3.0   \n",
      "..                    ...                ...                ...   \n",
      "61                  27.00               20.0                3.0   \n",
      "62                   7.00                4.0                1.0   \n",
      "63                   2.00                2.0                1.0   \n",
      "64                   2.00                1.0                1.0   \n",
      "65                   2.00                2.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                     21.0       1  \n",
      "1                    173.0       1  \n",
      "2                    206.0       1  \n",
      "3                     24.0       0  \n",
      "4                     47.0       1  \n",
      "..                     ...     ...  \n",
      "61                    17.0       1  \n",
      "62                     3.0       1  \n",
      "63                     2.0       0  \n",
      "64                     1.0       0  \n",
      "65                     2.0       0  \n",
      "\n",
      "[66 rows x 43 columns], 2022:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1231.0  1461.0        0.606061   26.030303   56.757576     6.121212   \n",
      "1   1394.0  1411.0        0.633333   25.333333   59.800000     5.900000   \n",
      "2   1323.0  1353.0        0.677419   25.580645   55.774194     9.064516   \n",
      "3   1460.0  1136.0        0.606061   27.424242   58.787879     6.303030   \n",
      "4   1436.0  1116.0        0.843750   27.437500   55.593750     8.812500   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1242.0  1274.0        0.823529   28.647059   59.558824     7.147059   \n",
      "63  1314.0  1389.0        0.727273   27.636364   61.030303     8.272727   \n",
      "64  1437.0  1242.0        0.787879   24.606061   56.303030     9.303030   \n",
      "65  1181.0  1314.0        0.823529   29.676471   60.764706     8.176471   \n",
      "66  1242.0  1314.0        0.823529   28.647059   59.558824     7.147059   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     18.060606   13.303030   19.030303   7.454545  ...    3.781250   \n",
      "1     18.700000   17.200000   22.933333  11.200000  ...    5.600000   \n",
      "2     24.032258   11.709677   15.419355   6.000000  ...    7.193548   \n",
      "3     19.090909   14.000000   18.272727   8.969697  ...    6.333333   \n",
      "4     23.968750   11.062500   14.812500   5.781250  ...    7.727273   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    20.117647   14.147059   19.529412   9.941176  ...    8.727273   \n",
      "63    22.848485   13.969697   18.090909   9.303030  ...    7.310345   \n",
      "64    25.909091   14.121212   17.151515   8.727273  ...    6.411765   \n",
      "65    22.235294   12.647059   17.352941   9.411765  ...    5.393939   \n",
      "66    20.117647   14.147059   19.529412   9.941176  ...    5.393939   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     2.062500  15.281250               211.0                34.0   \n",
      "1     5.000000  17.766667               348.0               187.0   \n",
      "2     3.935484  15.774194               304.0                70.0   \n",
      "3     4.200000  16.766667               336.0               191.0   \n",
      "4     4.181818  16.848485               147.0                19.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    2.939394  14.939394               217.0                49.0   \n",
      "63    4.896552  19.620690               308.0               159.5   \n",
      "64    4.147059  15.882353               108.0                 4.0   \n",
      "65    3.848485  14.363636               170.0                29.0   \n",
      "66    3.848485  14.363636               170.0                29.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                    70.0               50.0                4.0   \n",
      "1                   230.0              206.0              102.0   \n",
      "2                   107.0               87.0               26.0   \n",
      "3                   245.0              217.0              102.0   \n",
      "4                    41.0               27.0                3.0   \n",
      "..                    ...                ...                ...   \n",
      "62                   89.0               63.0               23.0   \n",
      "63                  235.5              194.0               95.0   \n",
      "64                    8.0                6.0                1.0   \n",
      "65                   43.0               35.0               13.0   \n",
      "66                   43.0               35.0               13.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                     16.0       1  \n",
      "1                    207.0       0  \n",
      "2                     59.0       1  \n",
      "3                    196.0       1  \n",
      "4                     27.0       0  \n",
      "..                     ...     ...  \n",
      "62                    47.0       1  \n",
      "63                   173.0       1  \n",
      "64                     4.0       0  \n",
      "65                    46.0       0  \n",
      "66                    46.0       1  \n",
      "\n",
      "[67 rows x 43 columns], 2023:     team_1  team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0   1338.0  1280.0        0.666667   26.303030   58.060606     9.212121   \n",
      "1   1394.0  1369.0        0.655172   26.965517   60.206897     7.758621   \n",
      "2   1113.0  1305.0        0.647059   25.000000   60.470588     7.500000   \n",
      "3   1192.0  1411.0        0.531250   27.781250   61.593750     7.843750   \n",
      "4   1104.0  1394.0        0.852941   27.764706   62.205882    10.058824   \n",
      "..     ...     ...             ...         ...         ...          ...   \n",
      "62  1274.0  1400.0        0.781250   28.968750   59.625000     7.593750   \n",
      "63  1166.0  1361.0        0.636364   27.515152   58.878788     8.909091   \n",
      "64  1274.0  1163.0        0.781250   28.968750   59.625000     7.593750   \n",
      "65  1361.0  1194.0        0.812500   25.093750   56.843750     6.812500   \n",
      "66  1361.0  1163.0        0.812500   25.093750   56.843750     6.812500   \n",
      "\n",
      "    team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_Stl  \\\n",
      "0     25.606061   14.303030   18.787879   8.757576  ...    8.848485   \n",
      "1     21.034483   16.586207   20.724138   9.793103  ...    6.666667   \n",
      "2     23.911765   12.823529   18.617647   9.352941  ...    6.064516   \n",
      "3     22.781250   12.875000   17.187500   9.875000  ...    6.437500   \n",
      "4     29.764706   16.588235   22.852941  11.264706  ...    8.310345   \n",
      "..          ...         ...         ...        ...  ...         ...   \n",
      "62    20.656250   13.875000   17.875000   8.968750  ...    8.058824   \n",
      "63    24.757576   12.696970   16.545455   7.515152  ...    7.125000   \n",
      "64    20.656250   13.875000   17.875000   8.968750  ...    6.545455   \n",
      "65    19.812500   14.343750   19.500000   9.218750  ...    6.500000   \n",
      "66    19.812500   14.343750   19.500000   9.218750  ...    6.545455   \n",
      "\n",
      "    team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0     3.424242  15.121212               105.0                33.0   \n",
      "1     3.181818  21.484848               340.0               234.0   \n",
      "2     3.096774  18.000000               150.0                35.0   \n",
      "3     3.062500  19.000000               348.0               264.0   \n",
      "4     1.517241  19.482759               311.0               187.0   \n",
      "..         ...        ...                 ...                 ...   \n",
      "62    3.647059  17.617647                55.0                 6.0   \n",
      "63    3.718750  16.500000                69.0                16.0   \n",
      "64    4.878788  18.121212                63.0                 4.0   \n",
      "65    2.531250  15.843750               223.0                20.0   \n",
      "66    4.878788  18.121212                63.0                 4.0   \n",
      "\n",
      "    team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                    52.0               44.0                3.0   \n",
      "1                   262.0              249.0               78.0   \n",
      "2                    65.0               48.0               13.0   \n",
      "3                   312.0              299.0              144.0   \n",
      "4                   226.0              205.0               75.0   \n",
      "..                    ...                ...                ...   \n",
      "62                   10.0                8.0                1.0   \n",
      "63                   30.0               22.0                1.0   \n",
      "64                   13.0                7.0                1.0   \n",
      "65                   50.0               33.0                5.0   \n",
      "66                   13.0                7.0                1.0   \n",
      "\n",
      "    team_2_FinalRankDay133  result  \n",
      "0                     49.0       1  \n",
      "1                    244.0       1  \n",
      "2                     21.0       1  \n",
      "3                    309.0       1  \n",
      "4                    151.0       1  \n",
      "..                     ...     ...  \n",
      "62                     9.0       1  \n",
      "63                    15.0       0  \n",
      "64                    19.0       0  \n",
      "65                    12.0       1  \n",
      "66                    19.0       0  \n",
      "\n",
      "[67 rows x 43 columns]}\n"
     ]
    }
   ],
   "source": [
    "# Display an example DataFrame to verify the changes\n",
    "print(newnewdata_by_season)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "seeds_df = pd.read_csv('C:\\\\Users\\\\XUN\\\\Desktop\\\\project_myself\\\\2024_tourney_seeds.csv')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "选出2024年的数据"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Tournament</th>\n",
       "      <th>Seed</th>\n",
       "      <th>TeamID</th>\n",
       "      <th>WinRate</th>\n",
       "      <th>FGM</th>\n",
       "      <th>FGA</th>\n",
       "      <th>FGM3</th>\n",
       "      <th>FGA3</th>\n",
       "      <th>FTM</th>\n",
       "      <th>FTA</th>\n",
       "      <th>...</th>\n",
       "      <th>TO</th>\n",
       "      <th>Stl</th>\n",
       "      <th>Blk</th>\n",
       "      <th>PF</th>\n",
       "      <th>HighestRank</th>\n",
       "      <th>TopFourRank</th>\n",
       "      <th>BottomFourRank</th>\n",
       "      <th>MedianRank</th>\n",
       "      <th>LowestRank</th>\n",
       "      <th>FinalRankDay133</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M</td>\n",
       "      <td>W01</td>\n",
       "      <td>1163</td>\n",
       "      <td>0.892857</td>\n",
       "      <td>28.857143</td>\n",
       "      <td>58.357143</td>\n",
       "      <td>8.714286</td>\n",
       "      <td>24.178571</td>\n",
       "      <td>14.857143</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>9.357143</td>\n",
       "      <td>6.392857</td>\n",
       "      <td>5.321429</td>\n",
       "      <td>16.607143</td>\n",
       "      <td>47.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>W02</td>\n",
       "      <td>1235</td>\n",
       "      <td>0.785714</td>\n",
       "      <td>27.785714</td>\n",
       "      <td>59.392857</td>\n",
       "      <td>6.642857</td>\n",
       "      <td>18.750000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>21.642857</td>\n",
       "      <td>...</td>\n",
       "      <td>10.464286</td>\n",
       "      <td>10.535714</td>\n",
       "      <td>2.964286</td>\n",
       "      <td>16.607143</td>\n",
       "      <td>135.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M</td>\n",
       "      <td>W03</td>\n",
       "      <td>1228</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>29.500000</td>\n",
       "      <td>62.571429</td>\n",
       "      <td>8.607143</td>\n",
       "      <td>24.714286</td>\n",
       "      <td>16.928571</td>\n",
       "      <td>22.857143</td>\n",
       "      <td>...</td>\n",
       "      <td>10.392857</td>\n",
       "      <td>4.464286</td>\n",
       "      <td>3.821429</td>\n",
       "      <td>15.214286</td>\n",
       "      <td>78.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M</td>\n",
       "      <td>W04</td>\n",
       "      <td>1120</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>28.500000</td>\n",
       "      <td>60.821429</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>23.321429</td>\n",
       "      <td>17.750000</td>\n",
       "      <td>23.500000</td>\n",
       "      <td>...</td>\n",
       "      <td>10.214286</td>\n",
       "      <td>7.571429</td>\n",
       "      <td>5.785714</td>\n",
       "      <td>18.821429</td>\n",
       "      <td>106.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M</td>\n",
       "      <td>W05</td>\n",
       "      <td>1361</td>\n",
       "      <td>0.740741</td>\n",
       "      <td>25.851852</td>\n",
       "      <td>57.407407</td>\n",
       "      <td>6.888889</td>\n",
       "      <td>21.592593</td>\n",
       "      <td>16.148148</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>10.518519</td>\n",
       "      <td>7.370370</td>\n",
       "      <td>3.851852</td>\n",
       "      <td>17.407407</td>\n",
       "      <td>86.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>M</td>\n",
       "      <td>Z12</td>\n",
       "      <td>1241</td>\n",
       "      <td>0.896552</td>\n",
       "      <td>29.689655</td>\n",
       "      <td>62.896552</td>\n",
       "      <td>8.482759</td>\n",
       "      <td>23.758621</td>\n",
       "      <td>15.137931</td>\n",
       "      <td>21.379310</td>\n",
       "      <td>...</td>\n",
       "      <td>10.241379</td>\n",
       "      <td>8.965517</td>\n",
       "      <td>2.862069</td>\n",
       "      <td>17.689655</td>\n",
       "      <td>167.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>M</td>\n",
       "      <td>Z13</td>\n",
       "      <td>1436</td>\n",
       "      <td>0.777778</td>\n",
       "      <td>25.444444</td>\n",
       "      <td>56.740741</td>\n",
       "      <td>8.444444</td>\n",
       "      <td>25.370370</td>\n",
       "      <td>11.481481</td>\n",
       "      <td>15.777778</td>\n",
       "      <td>...</td>\n",
       "      <td>8.333333</td>\n",
       "      <td>5.222222</td>\n",
       "      <td>3.814815</td>\n",
       "      <td>13.814815</td>\n",
       "      <td>339.0</td>\n",
       "      <td>97.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>112.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>M</td>\n",
       "      <td>Z14</td>\n",
       "      <td>1324</td>\n",
       "      <td>0.633333</td>\n",
       "      <td>27.066667</td>\n",
       "      <td>60.233333</td>\n",
       "      <td>8.633333</td>\n",
       "      <td>24.666667</td>\n",
       "      <td>13.600000</td>\n",
       "      <td>18.100000</td>\n",
       "      <td>...</td>\n",
       "      <td>11.033333</td>\n",
       "      <td>6.633333</td>\n",
       "      <td>2.333333</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>260.0</td>\n",
       "      <td>116.0</td>\n",
       "      <td>146.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>M</td>\n",
       "      <td>Z15</td>\n",
       "      <td>1443</td>\n",
       "      <td>0.640000</td>\n",
       "      <td>28.680000</td>\n",
       "      <td>61.960000</td>\n",
       "      <td>6.600000</td>\n",
       "      <td>19.320000</td>\n",
       "      <td>14.400000</td>\n",
       "      <td>20.200000</td>\n",
       "      <td>...</td>\n",
       "      <td>13.560000</td>\n",
       "      <td>7.040000</td>\n",
       "      <td>3.040000</td>\n",
       "      <td>18.840000</td>\n",
       "      <td>359.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>166.0</td>\n",
       "      <td>148.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>M</td>\n",
       "      <td>Z16</td>\n",
       "      <td>1255</td>\n",
       "      <td>0.538462</td>\n",
       "      <td>25.884615</td>\n",
       "      <td>58.576923</td>\n",
       "      <td>5.615385</td>\n",
       "      <td>16.923077</td>\n",
       "      <td>16.076923</td>\n",
       "      <td>23.653846</td>\n",
       "      <td>...</td>\n",
       "      <td>12.153846</td>\n",
       "      <td>7.038462</td>\n",
       "      <td>2.423077</td>\n",
       "      <td>18.846154</td>\n",
       "      <td>340.0</td>\n",
       "      <td>139.0</td>\n",
       "      <td>193.0</td>\n",
       "      <td>169.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>176</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>64 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Tournament Seed  TeamID   WinRate        FGM        FGA      FGM3  \\\n",
       "0           M  W01    1163  0.892857  28.857143  58.357143  8.714286   \n",
       "1           M  W02    1235  0.785714  27.785714  59.392857  6.642857   \n",
       "2           M  W03    1228  0.750000  29.500000  62.571429  8.607143   \n",
       "3           M  W04    1120  0.750000  28.500000  60.821429  8.000000   \n",
       "4           M  W05    1361  0.740741  25.851852  57.407407  6.888889   \n",
       "..        ...  ...     ...       ...        ...        ...       ...   \n",
       "59          M  Z12    1241  0.896552  29.689655  62.896552  8.482759   \n",
       "60          M  Z13    1436  0.777778  25.444444  56.740741  8.444444   \n",
       "61          M  Z14    1324  0.633333  27.066667  60.233333  8.633333   \n",
       "62          M  Z15    1443  0.640000  28.680000  61.960000  6.600000   \n",
       "63          M  Z16    1255  0.538462  25.884615  58.576923  5.615385   \n",
       "\n",
       "         FGA3        FTM        FTA  ...         TO        Stl       Blk  \\\n",
       "0   24.178571  14.857143  20.000000  ...   9.357143   6.392857  5.321429   \n",
       "1   18.750000  15.000000  21.642857  ...  10.464286  10.535714  2.964286   \n",
       "2   24.714286  16.928571  22.857143  ...  10.392857   4.464286  3.821429   \n",
       "3   23.321429  17.750000  23.500000  ...  10.214286   7.571429  5.785714   \n",
       "4   21.592593  16.148148  22.000000  ...  10.518519   7.370370  3.851852   \n",
       "..        ...        ...        ...  ...        ...        ...       ...   \n",
       "59  23.758621  15.137931  21.379310  ...  10.241379   8.965517  2.862069   \n",
       "60  25.370370  11.481481  15.777778  ...   8.333333   5.222222  3.814815   \n",
       "61  24.666667  13.600000  18.100000  ...  11.033333   6.633333  2.333333   \n",
       "62  19.320000  14.400000  20.200000  ...  13.560000   7.040000  3.040000   \n",
       "63  16.923077  16.076923  23.653846  ...  12.153846   7.038462  2.423077   \n",
       "\n",
       "           PF  HighestRank  TopFourRank  BottomFourRank  MedianRank  \\\n",
       "0   16.607143         47.0          3.0             8.0         5.0   \n",
       "1   16.607143        135.0          8.0            26.0        14.0   \n",
       "2   15.214286         78.0         11.0            21.0        15.0   \n",
       "3   18.821429        106.0          7.0            19.0        11.0   \n",
       "4   17.407407         86.0         19.0            31.0        24.0   \n",
       "..        ...          ...          ...             ...         ...   \n",
       "59  17.689655        167.0         39.0            71.0        58.0   \n",
       "60  13.814815        339.0         97.0           123.0       112.0   \n",
       "61  15.000000        260.0        116.0           146.0       130.0   \n",
       "62  18.840000        359.0        133.0           166.0       148.0   \n",
       "63  18.846154        340.0        139.0           193.0       169.0   \n",
       "\n",
       "    LowestRank  FinalRankDay133  \n",
       "0          1.0                3  \n",
       "1          2.0               12  \n",
       "2          3.0               10  \n",
       "3          2.0                6  \n",
       "4          2.0               20  \n",
       "..         ...              ...  \n",
       "59         5.0               57  \n",
       "60        46.0               94  \n",
       "61        68.0              121  \n",
       "62        70.0              145  \n",
       "63        46.0              176  \n",
       "\n",
       "[64 rows x 23 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Merging the 2024 teams information with the corresponding team statistics from team_dataframes[2024]\n",
    "merged_df_2024 = seeds_df.merge(team_dataframes[2024], on='TeamID', how='left')\n",
    "\n",
    "merged_df_2024"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "M_merge = merged_df_2024[merged_df_2024['Tournament'].str.contains('M')]\n",
    "W_merge = merged_df_2024[merged_df_2024['Tournament'].str.contains('W')]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Tournament</th>\n",
       "      <th>Seed</th>\n",
       "      <th>TeamID</th>\n",
       "      <th>WinRate</th>\n",
       "      <th>FGM</th>\n",
       "      <th>FGA</th>\n",
       "      <th>FGM3</th>\n",
       "      <th>FGA3</th>\n",
       "      <th>FTM</th>\n",
       "      <th>FTA</th>\n",
       "      <th>...</th>\n",
       "      <th>TO</th>\n",
       "      <th>Stl</th>\n",
       "      <th>Blk</th>\n",
       "      <th>PF</th>\n",
       "      <th>HighestRank</th>\n",
       "      <th>TopFourRank</th>\n",
       "      <th>BottomFourRank</th>\n",
       "      <th>MedianRank</th>\n",
       "      <th>LowestRank</th>\n",
       "      <th>FinalRankDay133</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>M</td>\n",
       "      <td>W01</td>\n",
       "      <td>1163</td>\n",
       "      <td>0.892857</td>\n",
       "      <td>28.857143</td>\n",
       "      <td>58.357143</td>\n",
       "      <td>8.714286</td>\n",
       "      <td>24.178571</td>\n",
       "      <td>14.857143</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>9.357143</td>\n",
       "      <td>6.392857</td>\n",
       "      <td>5.321429</td>\n",
       "      <td>16.607143</td>\n",
       "      <td>47.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>M</td>\n",
       "      <td>W02</td>\n",
       "      <td>1235</td>\n",
       "      <td>0.785714</td>\n",
       "      <td>27.785714</td>\n",
       "      <td>59.392857</td>\n",
       "      <td>6.642857</td>\n",
       "      <td>18.750000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>21.642857</td>\n",
       "      <td>...</td>\n",
       "      <td>10.464286</td>\n",
       "      <td>10.535714</td>\n",
       "      <td>2.964286</td>\n",
       "      <td>16.607143</td>\n",
       "      <td>135.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>M</td>\n",
       "      <td>W03</td>\n",
       "      <td>1228</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>29.500000</td>\n",
       "      <td>62.571429</td>\n",
       "      <td>8.607143</td>\n",
       "      <td>24.714286</td>\n",
       "      <td>16.928571</td>\n",
       "      <td>22.857143</td>\n",
       "      <td>...</td>\n",
       "      <td>10.392857</td>\n",
       "      <td>4.464286</td>\n",
       "      <td>3.821429</td>\n",
       "      <td>15.214286</td>\n",
       "      <td>78.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>M</td>\n",
       "      <td>W04</td>\n",
       "      <td>1120</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>28.500000</td>\n",
       "      <td>60.821429</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>23.321429</td>\n",
       "      <td>17.750000</td>\n",
       "      <td>23.500000</td>\n",
       "      <td>...</td>\n",
       "      <td>10.214286</td>\n",
       "      <td>7.571429</td>\n",
       "      <td>5.785714</td>\n",
       "      <td>18.821429</td>\n",
       "      <td>106.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>M</td>\n",
       "      <td>W05</td>\n",
       "      <td>1361</td>\n",
       "      <td>0.740741</td>\n",
       "      <td>25.851852</td>\n",
       "      <td>57.407407</td>\n",
       "      <td>6.888889</td>\n",
       "      <td>21.592593</td>\n",
       "      <td>16.148148</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>10.518519</td>\n",
       "      <td>7.370370</td>\n",
       "      <td>3.851852</td>\n",
       "      <td>17.407407</td>\n",
       "      <td>86.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>M</td>\n",
       "      <td>Z12</td>\n",
       "      <td>1241</td>\n",
       "      <td>0.896552</td>\n",
       "      <td>29.689655</td>\n",
       "      <td>62.896552</td>\n",
       "      <td>8.482759</td>\n",
       "      <td>23.758621</td>\n",
       "      <td>15.137931</td>\n",
       "      <td>21.379310</td>\n",
       "      <td>...</td>\n",
       "      <td>10.241379</td>\n",
       "      <td>8.965517</td>\n",
       "      <td>2.862069</td>\n",
       "      <td>17.689655</td>\n",
       "      <td>167.0</td>\n",
       "      <td>39.0</td>\n",
       "      <td>71.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>M</td>\n",
       "      <td>Z13</td>\n",
       "      <td>1436</td>\n",
       "      <td>0.777778</td>\n",
       "      <td>25.444444</td>\n",
       "      <td>56.740741</td>\n",
       "      <td>8.444444</td>\n",
       "      <td>25.370370</td>\n",
       "      <td>11.481481</td>\n",
       "      <td>15.777778</td>\n",
       "      <td>...</td>\n",
       "      <td>8.333333</td>\n",
       "      <td>5.222222</td>\n",
       "      <td>3.814815</td>\n",
       "      <td>13.814815</td>\n",
       "      <td>339.0</td>\n",
       "      <td>97.0</td>\n",
       "      <td>123.0</td>\n",
       "      <td>112.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>M</td>\n",
       "      <td>Z14</td>\n",
       "      <td>1324</td>\n",
       "      <td>0.633333</td>\n",
       "      <td>27.066667</td>\n",
       "      <td>60.233333</td>\n",
       "      <td>8.633333</td>\n",
       "      <td>24.666667</td>\n",
       "      <td>13.600000</td>\n",
       "      <td>18.100000</td>\n",
       "      <td>...</td>\n",
       "      <td>11.033333</td>\n",
       "      <td>6.633333</td>\n",
       "      <td>2.333333</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>260.0</td>\n",
       "      <td>116.0</td>\n",
       "      <td>146.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>M</td>\n",
       "      <td>Z15</td>\n",
       "      <td>1443</td>\n",
       "      <td>0.640000</td>\n",
       "      <td>28.680000</td>\n",
       "      <td>61.960000</td>\n",
       "      <td>6.600000</td>\n",
       "      <td>19.320000</td>\n",
       "      <td>14.400000</td>\n",
       "      <td>20.200000</td>\n",
       "      <td>...</td>\n",
       "      <td>13.560000</td>\n",
       "      <td>7.040000</td>\n",
       "      <td>3.040000</td>\n",
       "      <td>18.840000</td>\n",
       "      <td>359.0</td>\n",
       "      <td>133.0</td>\n",
       "      <td>166.0</td>\n",
       "      <td>148.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>145</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>M</td>\n",
       "      <td>Z16</td>\n",
       "      <td>1255</td>\n",
       "      <td>0.538462</td>\n",
       "      <td>25.884615</td>\n",
       "      <td>58.576923</td>\n",
       "      <td>5.615385</td>\n",
       "      <td>16.923077</td>\n",
       "      <td>16.076923</td>\n",
       "      <td>23.653846</td>\n",
       "      <td>...</td>\n",
       "      <td>12.153846</td>\n",
       "      <td>7.038462</td>\n",
       "      <td>2.423077</td>\n",
       "      <td>18.846154</td>\n",
       "      <td>340.0</td>\n",
       "      <td>139.0</td>\n",
       "      <td>193.0</td>\n",
       "      <td>169.0</td>\n",
       "      <td>46.0</td>\n",
       "      <td>176</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>64 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Tournament Seed  TeamID   WinRate        FGM        FGA      FGM3  \\\n",
       "0           M  W01    1163  0.892857  28.857143  58.357143  8.714286   \n",
       "1           M  W02    1235  0.785714  27.785714  59.392857  6.642857   \n",
       "2           M  W03    1228  0.750000  29.500000  62.571429  8.607143   \n",
       "3           M  W04    1120  0.750000  28.500000  60.821429  8.000000   \n",
       "4           M  W05    1361  0.740741  25.851852  57.407407  6.888889   \n",
       "..        ...  ...     ...       ...        ...        ...       ...   \n",
       "59          M  Z12    1241  0.896552  29.689655  62.896552  8.482759   \n",
       "60          M  Z13    1436  0.777778  25.444444  56.740741  8.444444   \n",
       "61          M  Z14    1324  0.633333  27.066667  60.233333  8.633333   \n",
       "62          M  Z15    1443  0.640000  28.680000  61.960000  6.600000   \n",
       "63          M  Z16    1255  0.538462  25.884615  58.576923  5.615385   \n",
       "\n",
       "         FGA3        FTM        FTA  ...         TO        Stl       Blk  \\\n",
       "0   24.178571  14.857143  20.000000  ...   9.357143   6.392857  5.321429   \n",
       "1   18.750000  15.000000  21.642857  ...  10.464286  10.535714  2.964286   \n",
       "2   24.714286  16.928571  22.857143  ...  10.392857   4.464286  3.821429   \n",
       "3   23.321429  17.750000  23.500000  ...  10.214286   7.571429  5.785714   \n",
       "4   21.592593  16.148148  22.000000  ...  10.518519   7.370370  3.851852   \n",
       "..        ...        ...        ...  ...        ...        ...       ...   \n",
       "59  23.758621  15.137931  21.379310  ...  10.241379   8.965517  2.862069   \n",
       "60  25.370370  11.481481  15.777778  ...   8.333333   5.222222  3.814815   \n",
       "61  24.666667  13.600000  18.100000  ...  11.033333   6.633333  2.333333   \n",
       "62  19.320000  14.400000  20.200000  ...  13.560000   7.040000  3.040000   \n",
       "63  16.923077  16.076923  23.653846  ...  12.153846   7.038462  2.423077   \n",
       "\n",
       "           PF  HighestRank  TopFourRank  BottomFourRank  MedianRank  \\\n",
       "0   16.607143         47.0          3.0             8.0         5.0   \n",
       "1   16.607143        135.0          8.0            26.0        14.0   \n",
       "2   15.214286         78.0         11.0            21.0        15.0   \n",
       "3   18.821429        106.0          7.0            19.0        11.0   \n",
       "4   17.407407         86.0         19.0            31.0        24.0   \n",
       "..        ...          ...          ...             ...         ...   \n",
       "59  17.689655        167.0         39.0            71.0        58.0   \n",
       "60  13.814815        339.0         97.0           123.0       112.0   \n",
       "61  15.000000        260.0        116.0           146.0       130.0   \n",
       "62  18.840000        359.0        133.0           166.0       148.0   \n",
       "63  18.846154        340.0        139.0           193.0       169.0   \n",
       "\n",
       "    LowestRank  FinalRankDay133  \n",
       "0          1.0                3  \n",
       "1          2.0               12  \n",
       "2          3.0               10  \n",
       "3          2.0                6  \n",
       "4          2.0               20  \n",
       "..         ...              ...  \n",
       "59         5.0               57  \n",
       "60        46.0               94  \n",
       "61        68.0              121  \n",
       "62        70.0              145  \n",
       "63        46.0              176  \n",
       "\n",
       "[64 rows x 23 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "M_merge"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  team_1 team_2  team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  \\\n",
      "0    W01    W02        0.892857   28.857143   58.357143     8.714286   \n",
      "1    W01    W03        0.892857   28.857143   58.357143     8.714286   \n",
      "2    W01    W04        0.892857   28.857143   58.357143     8.714286   \n",
      "3    W01    W05        0.892857   28.857143   58.357143     8.714286   \n",
      "4    W01    W06        0.892857   28.857143   58.357143     8.714286   \n",
      "\n",
      "   team_1_FGA3  team_1_FTM  team_1_FTA  team_1_OR  ...  team_2_TO  team_2_Stl  \\\n",
      "0    24.178571   14.857143        20.0  10.178571  ...  10.464286   10.535714   \n",
      "1    24.178571   14.857143        20.0  10.178571  ...  10.392857    4.464286   \n",
      "2    24.178571   14.857143        20.0  10.178571  ...  10.214286    7.571429   \n",
      "3    24.178571   14.857143        20.0  10.178571  ...  10.518519    7.370370   \n",
      "4    24.178571   14.857143        20.0  10.178571  ...  10.214286    6.321429   \n",
      "\n",
      "   team_2_Blk  team_2_PF  team_2_HighestRank  team_2_TopFourRank  \\\n",
      "0    2.964286  16.607143               135.0                 8.0   \n",
      "1    3.821429  15.214286                78.0                11.0   \n",
      "2    5.785714  18.821429               106.0                 7.0   \n",
      "3    3.851852  17.407407                86.0                19.0   \n",
      "4    2.750000  17.714286                99.0                 6.0   \n",
      "\n",
      "   team_2_BottomFourRank  team_2_MedianRank  team_2_LowestRank  \\\n",
      "0                   26.0               14.0                2.0   \n",
      "1                   21.0               15.0                3.0   \n",
      "2                   19.0               11.0                2.0   \n",
      "3                   31.0               24.0                2.0   \n",
      "4                   21.0               13.0                1.0   \n",
      "\n",
      "   team_2_FinalRankDay133  \n",
      "0                      12  \n",
      "1                      10  \n",
      "2                       6  \n",
      "3                      20  \n",
      "4                      21  \n",
      "\n",
      "[5 rows x 42 columns]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "from itertools import combinations\n",
    "\n",
    "# 假设M_merge是已经定义并包含合并数据的DataFrame\n",
    "# Create all unique pairs of seeds without repeating pairs (team against itself)\n",
    "seed_pairs = list(combinations(M_merge['Seed'].unique(), 2))\n",
    "\n",
    "# Initialize an empty DataFrame for the new matrix\n",
    "columns = ['team_1', 'team_2'] + [f'team_1_{col}' for col in M_merge.columns if col not in ['Tournament', 'Seed', 'TeamID']] + [f'team_2_{col}' for col in M_merge.columns if col not in ['Tournament', 'Seed', 'TeamID']]\n",
    "team_pro = pd.DataFrame(columns=columns)\n",
    "\n",
    "# Populate the new matrix with the team stats for each pair\n",
    "for seed1, seed2 in seed_pairs:\n",
    "    team1_data = M_merge[M_merge['Seed'] == seed1].drop(columns=['Tournament', 'Seed', 'TeamID']).reset_index(drop=True)\n",
    "    team2_data = M_merge[M_merge['Seed'] == seed2].drop(columns=['Tournament', 'Seed', 'TeamID']).reset_index(drop=True)\n",
    "    \n",
    "    # Join the two team's data\n",
    "    combined_data = pd.concat([team1_data, team2_data], axis=1)\n",
    "    \n",
    "    # Add the seeds at the beginning\n",
    "    combined_data.insert(0, 'Team1_Seed', seed1)\n",
    "    combined_data.insert(1, 'Team2_Seed', seed2)\n",
    "    \n",
    "    # Rename columns to reflect team1 and team2\n",
    "    combined_data.columns = columns\n",
    "    \n",
    "    # Append to the main DataFrame\n",
    "    team_pro = pd.concat([team_pro, combined_data], ignore_index=True)\n",
    "\n",
    "# Now 2024_team_pro will have the desired structure without teams playing against themselves\n",
    "print(team_pro.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['team_1', 'team_2', 'team_1_WinRate', 'team_1_FGM', 'team_1_FGA',\n",
       "       'team_1_FGM3', 'team_1_FGA3', 'team_1_FTM', 'team_1_FTA', 'team_1_OR',\n",
       "       'team_1_DR', 'team_1_Ast', 'team_1_TO', 'team_1_Stl', 'team_1_Blk',\n",
       "       'team_1_PF', 'team_1_HighestRank', 'team_1_TopFourRank',\n",
       "       'team_1_BottomFourRank', 'team_1_MedianRank', 'team_1_LowestRank',\n",
       "       'team_1_FinalRankDay133', 'team_2_WinRate', 'team_2_FGM', 'team_2_FGA',\n",
       "       'team_2_FGM3', 'team_2_FGA3', 'team_2_FTM', 'team_2_FTA', 'team_2_OR',\n",
       "       'team_2_DR', 'team_2_Ast', 'team_2_TO', 'team_2_Stl', 'team_2_Blk',\n",
       "       'team_2_PF', 'team_2_HighestRank', 'team_2_TopFourRank',\n",
       "       'team_2_BottomFourRank', 'team_2_MedianRank', 'team_2_LowestRank',\n",
       "       'team_2_FinalRankDay133'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "team_pro.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.optim as optim\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from torch.utils.data import DataLoader, TensorDataset\n",
    "\n",
    "# 假设 'team_dataframes' 是包含2003到2023年数据的字典，'team_pro' 是用于预测的DataFrame\n",
    "\n",
    "# Step 1: 数据预处理\n",
    "\n",
    "# 将所有DataFrame合并为一个\n",
    "all_data = pd.concat(newnewdata_by_season.values(), ignore_index=True)\n",
    "all_data = all_data.drop(['team_1', 'team_2'], axis=1)\n",
    "# Separating features and target\n",
    "X = all_data.drop('result', axis=1)\n",
    "y = all_data['result']\n",
    "\n",
    "# 数据标准化\n",
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(X)\n",
    "\n",
    "# 保证 'team_pro_renamed' 有相同的列顺序\n",
    "team_pro_aligned = team_pro[X.columns.tolist()]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  team_1_FGA3  \\\n",
      "0           0.448276   24.379310   56.793103     6.482759    18.000000   \n",
      "1           0.892857   30.321429   65.714286     7.035714    20.071429   \n",
      "2           0.620690   27.206897   56.896552     4.000000    12.586207   \n",
      "3           0.878788   28.696970   57.454545     7.969697    20.484848   \n",
      "4           0.724138   27.344828   58.724138     6.413793    17.034483   \n",
      "...              ...         ...         ...          ...          ...   \n",
      "1310        0.781250   28.968750   59.625000     7.593750    20.656250   \n",
      "1311        0.636364   27.515152   58.878788     8.909091    24.757576   \n",
      "1312        0.781250   28.968750   59.625000     7.593750    20.656250   \n",
      "1313        0.812500   25.093750   56.843750     6.812500    19.812500   \n",
      "1314        0.812500   25.093750   56.843750     6.812500    19.812500   \n",
      "\n",
      "      team_1_FTM  team_1_FTA  team_1_OR  team_1_DR  team_1_Ast  ...  \\\n",
      "0      15.965517   20.931034  12.275862  23.172414   13.034483  ...   \n",
      "1      17.535714   25.000000  15.178571  27.642857   17.642857  ...   \n",
      "2      17.551724   26.206897  13.689655  23.310345   15.551724  ...   \n",
      "3      13.878788   20.030303  10.878788  23.181818   16.818182  ...   \n",
      "4      13.379310   19.517241  11.241379  24.379310   16.000000  ...   \n",
      "...          ...         ...        ...        ...         ...  ...   \n",
      "1310   13.875000   17.875000   8.968750  22.906250   14.937500  ...   \n",
      "1311   12.696970   16.545455   7.515152  27.242424   15.909091  ...   \n",
      "1312   13.875000   17.875000   8.968750  22.906250   14.937500  ...   \n",
      "1313   14.343750   19.500000   9.218750  23.437500   13.031250  ...   \n",
      "1314   14.343750   19.500000   9.218750  23.437500   13.031250  ...   \n",
      "\n",
      "      team_2_Stl  team_2_Blk  team_2_PF  team_2_HighestRank  \\\n",
      "0       6.433333    2.233333  18.300000               324.0   \n",
      "1       6.862069    2.965517  15.896552               265.0   \n",
      "2       7.379310    5.068966  18.758621               109.0   \n",
      "3       7.103448    4.000000  20.965517               215.0   \n",
      "4       7.766667    3.066667  18.666667               112.0   \n",
      "...          ...         ...        ...                 ...   \n",
      "1310    8.058824    3.647059  17.617647                55.0   \n",
      "1311    7.125000    3.718750  16.500000                69.0   \n",
      "1312    6.545455    4.878788  18.121212                63.0   \n",
      "1313    6.500000    2.531250  15.843750               223.0   \n",
      "1314    6.545455    4.878788  18.121212                63.0   \n",
      "\n",
      "      team_2_TopFourRank  team_2_BottomFourRank  team_2_MedianRank  \\\n",
      "0                 215.75                 260.25              241.0   \n",
      "1                 159.00                 186.00              172.0   \n",
      "2                  26.00                  54.00               40.0   \n",
      "3                  52.75                  92.00               67.0   \n",
      "4                  46.00                  65.00               54.0   \n",
      "...                  ...                    ...                ...   \n",
      "1310                6.00                  10.00                8.0   \n",
      "1311               16.00                  30.00               22.0   \n",
      "1312                4.00                  13.00                7.0   \n",
      "1313               20.00                  50.00               33.0   \n",
      "1314                4.00                  13.00                7.0   \n",
      "\n",
      "      team_2_LowestRank  team_2_FinalRankDay133  result  \n",
      "0                 114.0                   200.0       1  \n",
      "1                 101.0                   139.0       1  \n",
      "2                   7.0                    30.0       1  \n",
      "3                  12.0                    47.0       0  \n",
      "4                   9.0                    68.0       1  \n",
      "...                 ...                     ...     ...  \n",
      "1310                1.0                     9.0       1  \n",
      "1311                1.0                    15.0       0  \n",
      "1312                1.0                    19.0       0  \n",
      "1313                5.0                    12.0       1  \n",
      "1314                1.0                    19.0       0  \n",
      "\n",
      "[1315 rows x 41 columns]\n"
     ]
    }
   ],
   "source": [
    "print(all_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  team_1_FGA3  \\\n",
      "0           0.892857   28.857143   58.357143     8.714286    24.178571   \n",
      "1           0.892857   28.857143   58.357143     8.714286    24.178571   \n",
      "2           0.892857   28.857143   58.357143     8.714286    24.178571   \n",
      "3           0.892857   28.857143   58.357143     8.714286    24.178571   \n",
      "4           0.892857   28.857143   58.357143     8.714286    24.178571   \n",
      "...              ...         ...         ...          ...          ...   \n",
      "2011        0.777778   25.444444   56.740741     8.444444    25.370370   \n",
      "2012        0.777778   25.444444   56.740741     8.444444    25.370370   \n",
      "2013        0.633333   27.066667   60.233333     8.633333    24.666667   \n",
      "2014        0.633333   27.066667   60.233333     8.633333    24.666667   \n",
      "2015        0.640000   28.680000   61.960000     6.600000    19.320000   \n",
      "\n",
      "      team_1_FTM  team_1_FTA  team_1_OR  team_1_DR  team_1_Ast  ...  \\\n",
      "0      14.857143   20.000000  10.178571  24.857143   17.750000  ...   \n",
      "1      14.857143   20.000000  10.178571  24.857143   17.750000  ...   \n",
      "2      14.857143   20.000000  10.178571  24.857143   17.750000  ...   \n",
      "3      14.857143   20.000000  10.178571  24.857143   17.750000  ...   \n",
      "4      14.857143   20.000000  10.178571  24.857143   17.750000  ...   \n",
      "...          ...         ...        ...        ...         ...  ...   \n",
      "2011   11.481481   15.777778   6.518519  25.555556   13.185185  ...   \n",
      "2012   11.481481   15.777778   6.518519  25.555556   13.185185  ...   \n",
      "2013   13.600000   18.100000   9.366667  24.166667   13.966667  ...   \n",
      "2014   13.600000   18.100000   9.366667  24.166667   13.966667  ...   \n",
      "2015   14.400000   20.200000   8.400000  27.000000   13.160000  ...   \n",
      "\n",
      "      team_2_TO  team_2_Stl  team_2_Blk  team_2_PF  team_2_HighestRank  \\\n",
      "0     10.464286   10.535714    2.964286  16.607143               135.0   \n",
      "1     10.392857    4.464286    3.821429  15.214286                78.0   \n",
      "2     10.214286    7.571429    5.785714  18.821429               106.0   \n",
      "3     10.518519    7.370370    3.851852  17.407407                86.0   \n",
      "4     10.214286    6.321429    2.750000  17.714286                99.0   \n",
      "...         ...         ...         ...        ...                 ...   \n",
      "2011  13.560000    7.040000    3.040000  18.840000               359.0   \n",
      "2012  12.153846    7.038462    2.423077  18.846154               340.0   \n",
      "2013  13.560000    7.040000    3.040000  18.840000               359.0   \n",
      "2014  12.153846    7.038462    2.423077  18.846154               340.0   \n",
      "2015  12.153846    7.038462    2.423077  18.846154               340.0   \n",
      "\n",
      "      team_2_TopFourRank  team_2_BottomFourRank  team_2_MedianRank  \\\n",
      "0                    8.0                   26.0               14.0   \n",
      "1                   11.0                   21.0               15.0   \n",
      "2                    7.0                   19.0               11.0   \n",
      "3                   19.0                   31.0               24.0   \n",
      "4                    6.0                   21.0               13.0   \n",
      "...                  ...                    ...                ...   \n",
      "2011               133.0                  166.0              148.0   \n",
      "2012               139.0                  193.0              169.0   \n",
      "2013               133.0                  166.0              148.0   \n",
      "2014               139.0                  193.0              169.0   \n",
      "2015               139.0                  193.0              169.0   \n",
      "\n",
      "      team_2_LowestRank team_2_FinalRankDay133  \n",
      "0                   2.0                     12  \n",
      "1                   3.0                     10  \n",
      "2                   2.0                      6  \n",
      "3                   2.0                     20  \n",
      "4                   1.0                     21  \n",
      "...                 ...                    ...  \n",
      "2011               70.0                    145  \n",
      "2012               46.0                    176  \n",
      "2013               70.0                    145  \n",
      "2014               46.0                    176  \n",
      "2015               46.0                    176  \n",
      "\n",
      "[2016 rows x 40 columns]\n"
     ]
    }
   ],
   "source": [
    "print(team_pro_aligned)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# 将数据集分成训练集和测试集\n",
    "train_data, test_data = train_test_split(all_data, test_size=0.2, random_state=42)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 提取训练集和测试集的特征和目标变量\n",
    "X_train = train_data.drop(columns=['result'])\n",
    "y_train = train_data['result']\n",
    "\n",
    "X_test = test_data.drop(columns=['result'])\n",
    "y_test = test_data['result']\n",
    "\n",
    "# 这里你可能需要对特征进行归一化或标准化\n",
    "# 你可以使用 sklearn.preprocessing 中的方法\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      team_1_WinRate  team_1_FGM  team_1_FGA  team_1_FGM3  team_1_FGA3  \\\n",
      "209         0.633333   25.033333   57.933333     6.300000    18.433333   \n",
      "312         0.818182   26.606061   59.272727     7.666667    21.090909   \n",
      "140         0.781250   25.937500   55.937500     6.031250    16.281250   \n",
      "905         0.593750   23.937500   56.125000     8.750000    24.250000   \n",
      "783         0.575758   24.303030   54.484848     6.393939    16.818182   \n",
      "...              ...         ...         ...          ...          ...   \n",
      "1095        0.852941   26.941176   58.970588     6.794118    18.882353   \n",
      "1130        0.640000   27.080000   61.400000     8.120000    24.120000   \n",
      "1294        0.906250   27.906250   59.593750     9.718750    26.093750   \n",
      "860         0.781250   26.156250   54.875000     6.843750    18.718750   \n",
      "1126        0.714286   27.678571   59.142857     6.392857    18.892857   \n",
      "\n",
      "      team_1_FTM  team_1_FTA  team_1_OR  team_1_DR  team_1_Ast  ...  \\\n",
      "209    14.633333   22.066667  12.933333  23.633333   13.400000  ...   \n",
      "312    14.151515   19.878788  12.060606  22.606061   14.848485  ...   \n",
      "140    17.750000   22.406250  11.093750  23.062500   16.500000  ...   \n",
      "905    13.593750   19.906250  11.812500  23.718750   14.062500  ...   \n",
      "783    14.000000   19.606061  10.424242  23.000000   12.242424  ...   \n",
      "...          ...         ...        ...        ...         ...  ...   \n",
      "1095   11.794118   16.852941  11.647059  28.382353   13.235294  ...   \n",
      "1130   13.560000   17.280000   9.000000  23.360000   15.200000  ...   \n",
      "1294   12.625000   17.593750   9.125000  26.062500   14.218750  ...   \n",
      "860    16.468750   21.937500   9.687500  25.062500   12.812500  ...   \n",
      "1126   15.321429   21.500000   9.285714  25.928571   13.178571  ...   \n",
      "\n",
      "      team_2_TO  team_2_Stl  team_2_Blk  team_2_PF  team_2_HighestRank  \\\n",
      "209   13.483871    9.870968    3.774194  16.483871               105.0   \n",
      "312   12.606061    7.121212    2.060606  16.030303                73.0   \n",
      "140   14.433333    5.933333    2.833333  14.466667               182.0   \n",
      "905   11.343750    5.000000    3.000000  17.593750                77.0   \n",
      "783   12.193548    6.096774    3.935484  16.580645               292.0   \n",
      "...         ...         ...         ...        ...                 ...   \n",
      "1095  11.800000    7.771429    4.228571  17.771429               162.0   \n",
      "1130  10.769231    8.115385    2.846154   6.538462                85.0   \n",
      "1294  11.156250    7.437500    1.875000  19.125000               354.0   \n",
      "860   13.818182    6.727273    3.484848  21.272727               263.0   \n",
      "1126   9.666667    3.958333    2.375000   4.166667               152.0   \n",
      "\n",
      "      team_2_TopFourRank  team_2_BottomFourRank  team_2_MedianRank  \\\n",
      "209                 21.0                   41.0               34.0   \n",
      "312                  9.0                   21.0               15.0   \n",
      "140                 20.0                   50.5               24.0   \n",
      "905                 24.0                   41.0               31.0   \n",
      "783                147.0                  192.0              166.0   \n",
      "...                  ...                    ...                ...   \n",
      "1095                48.0                   74.0               61.0   \n",
      "1130                16.0                   33.0               24.0   \n",
      "1294               287.0                  316.0              304.0   \n",
      "860                126.0                  160.0              142.0   \n",
      "1126                87.0                  111.0               99.0   \n",
      "\n",
      "      team_2_LowestRank  team_2_FinalRankDay133  \n",
      "209                 3.0                    39.0  \n",
      "312                 1.0                    25.0  \n",
      "140                 5.0                    16.0  \n",
      "905                 1.0                    63.0  \n",
      "783                69.0                   180.0  \n",
      "...                 ...                     ...  \n",
      "1095                9.0                    64.0  \n",
      "1130                2.0                    19.0  \n",
      "1294              175.0                   284.0  \n",
      "860                53.0                   129.0  \n",
      "1126               33.0                   122.0  \n",
      "\n",
      "[1052 rows x 40 columns]\n"
     ]
    }
   ],
   "source": [
    "print(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\XUN\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras\\src\\layers\\rnn\\rnn.py:204: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(**kwargs)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 55ms/step - accuracy: 0.4824 - loss: 0.6952 - val_accuracy: 0.4915 - val_loss: 0.6993\n",
      "Epoch 2/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5033 - loss: 0.6947 - val_accuracy: 0.4661 - val_loss: 0.6938\n",
      "Epoch 3/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.4916 - loss: 0.6931 - val_accuracy: 0.5000 - val_loss: 0.6947\n",
      "Epoch 4/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.4914 - loss: 0.6938 - val_accuracy: 0.4915 - val_loss: 0.6965\n",
      "Epoch 5/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.5047 - loss: 0.6919 - val_accuracy: 0.4407 - val_loss: 0.6951\n",
      "Epoch 6/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.5025 - loss: 0.6923 - val_accuracy: 0.4915 - val_loss: 0.6973\n",
      "Epoch 7/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.5300 - loss: 0.6919 - val_accuracy: 0.4831 - val_loss: 0.7005\n",
      "Epoch 8/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.4958 - loss: 0.6913 - val_accuracy: 0.4492 - val_loss: 0.6985\n",
      "Epoch 9/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.5242 - loss: 0.6908 - val_accuracy: 0.4746 - val_loss: 0.7079\n",
      "Epoch 10/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5064 - loss: 0.6924 - val_accuracy: 0.4915 - val_loss: 0.7076\n",
      "Epoch 11/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5246 - loss: 0.6898 - val_accuracy: 0.4322 - val_loss: 0.6965\n",
      "Epoch 12/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.4932 - loss: 0.6902 - val_accuracy: 0.4746 - val_loss: 0.7146\n",
      "Epoch 13/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step - accuracy: 0.5408 - loss: 0.6866 - val_accuracy: 0.4915 - val_loss: 0.7224\n",
      "Epoch 14/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5368 - loss: 0.6819 - val_accuracy: 0.5169 - val_loss: 0.6912\n",
      "Epoch 15/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.4770 - loss: 0.6951 - val_accuracy: 0.5000 - val_loss: 0.6937\n",
      "Epoch 16/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.5167 - loss: 0.6920 - val_accuracy: 0.4915 - val_loss: 0.6948\n",
      "Epoch 17/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.5360 - loss: 0.6900 - val_accuracy: 0.4831 - val_loss: 0.6953\n",
      "Epoch 18/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5548 - loss: 0.6886 - val_accuracy: 0.4915 - val_loss: 0.7005\n",
      "Epoch 19/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.5077 - loss: 0.6929 - val_accuracy: 0.5000 - val_loss: 0.6959\n",
      "Epoch 20/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5383 - loss: 0.6877 - val_accuracy: 0.5085 - val_loss: 0.6972\n",
      "Epoch 21/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5501 - loss: 0.6867 - val_accuracy: 0.5169 - val_loss: 0.7050\n",
      "Epoch 22/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.5651 - loss: 0.6796 - val_accuracy: 0.5254 - val_loss: 0.7012\n",
      "Epoch 23/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5472 - loss: 0.6913 - val_accuracy: 0.5000 - val_loss: 0.7067\n",
      "Epoch 24/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step - accuracy: 0.5340 - loss: 0.6837 - val_accuracy: 0.4831 - val_loss: 0.6984\n",
      "Epoch 25/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5479 - loss: 0.6832 - val_accuracy: 0.4915 - val_loss: 0.6935\n",
      "Epoch 26/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step - accuracy: 0.5118 - loss: 0.6930 - val_accuracy: 0.5593 - val_loss: 0.6929\n",
      "Epoch 27/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.5524 - loss: 0.6830 - val_accuracy: 0.5085 - val_loss: 0.7051\n",
      "Epoch 28/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5615 - loss: 0.6762 - val_accuracy: 0.5339 - val_loss: 0.6923\n",
      "Epoch 29/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5672 - loss: 0.6811 - val_accuracy: 0.5085 - val_loss: 0.6974\n",
      "Epoch 30/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.5636 - loss: 0.6809 - val_accuracy: 0.5339 - val_loss: 0.7021\n",
      "Epoch 31/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.5675 - loss: 0.6787 - val_accuracy: 0.4915 - val_loss: 0.6958\n",
      "Epoch 32/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.5086 - loss: 0.6916 - val_accuracy: 0.5847 - val_loss: 0.6992\n",
      "Epoch 33/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5438 - loss: 0.6803 - val_accuracy: 0.4831 - val_loss: 0.7070\n",
      "Epoch 34/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step - accuracy: 0.5447 - loss: 0.6770 - val_accuracy: 0.5085 - val_loss: 0.7031\n",
      "Epoch 35/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.5487 - loss: 0.6843 - val_accuracy: 0.5000 - val_loss: 0.7001\n",
      "Epoch 36/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5767 - loss: 0.6744 - val_accuracy: 0.4746 - val_loss: 0.6989\n",
      "Epoch 37/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.5880 - loss: 0.6714 - val_accuracy: 0.5678 - val_loss: 0.7217\n",
      "Epoch 38/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5388 - loss: 0.6767 - val_accuracy: 0.5000 - val_loss: 0.7157\n",
      "Epoch 39/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5943 - loss: 0.6675 - val_accuracy: 0.4746 - val_loss: 0.6898\n",
      "Epoch 40/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.5699 - loss: 0.6684 - val_accuracy: 0.4746 - val_loss: 0.7075\n",
      "Epoch 41/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.5921 - loss: 0.6652 - val_accuracy: 0.5424 - val_loss: 0.6969\n",
      "Epoch 42/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.5554 - loss: 0.6712 - val_accuracy: 0.4746 - val_loss: 0.7373\n",
      "Epoch 43/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.5546 - loss: 0.6730 - val_accuracy: 0.5424 - val_loss: 0.7357\n",
      "Epoch 44/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.5716 - loss: 0.6603 - val_accuracy: 0.5085 - val_loss: 0.7136\n",
      "Epoch 45/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5965 - loss: 0.6544 - val_accuracy: 0.4746 - val_loss: 0.6965\n",
      "Epoch 46/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.5700 - loss: 0.6777 - val_accuracy: 0.5000 - val_loss: 0.7426\n",
      "Epoch 47/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.5841 - loss: 0.6633 - val_accuracy: 0.5085 - val_loss: 0.8043\n",
      "Epoch 48/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.5841 - loss: 0.6671 - val_accuracy: 0.5424 - val_loss: 0.6906\n",
      "Epoch 49/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.6062 - loss: 0.6673 - val_accuracy: 0.5254 - val_loss: 0.7134\n",
      "Epoch 50/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.5647 - loss: 0.6621 - val_accuracy: 0.5169 - val_loss: 0.7258\n",
      "Epoch 51/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.6001 - loss: 0.6518 - val_accuracy: 0.5000 - val_loss: 0.7038\n",
      "Epoch 52/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.6005 - loss: 0.6564 - val_accuracy: 0.4831 - val_loss: 0.7213\n",
      "Epoch 53/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.5961 - loss: 0.6582 - val_accuracy: 0.5000 - val_loss: 0.7267\n",
      "Epoch 54/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.6126 - loss: 0.6439 - val_accuracy: 0.5000 - val_loss: 0.7260\n",
      "Epoch 55/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.6139 - loss: 0.6556 - val_accuracy: 0.4831 - val_loss: 0.7348\n",
      "Epoch 56/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.5940 - loss: 0.6544 - val_accuracy: 0.5000 - val_loss: 0.7595\n",
      "Epoch 57/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.6144 - loss: 0.6381 - val_accuracy: 0.5085 - val_loss: 0.7847\n",
      "Epoch 58/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.6070 - loss: 0.6565 - val_accuracy: 0.5085 - val_loss: 0.7638\n",
      "Epoch 59/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.6219 - loss: 0.6494 - val_accuracy: 0.5000 - val_loss: 0.7850\n",
      "Epoch 60/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.6373 - loss: 0.6319 - val_accuracy: 0.4661 - val_loss: 0.8079\n",
      "Epoch 61/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.6091 - loss: 0.6298 - val_accuracy: 0.5508 - val_loss: 0.7333\n",
      "Epoch 62/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - accuracy: 0.6624 - loss: 0.6239 - val_accuracy: 0.5254 - val_loss: 0.7354\n",
      "Epoch 63/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.5821 - loss: 0.6370 - val_accuracy: 0.4915 - val_loss: 0.8329\n",
      "Epoch 64/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.6721 - loss: 0.6056 - val_accuracy: 0.5254 - val_loss: 0.7354\n",
      "Epoch 65/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.6130 - loss: 0.6323 - val_accuracy: 0.5085 - val_loss: 0.7774\n",
      "Epoch 66/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.6466 - loss: 0.6152 - val_accuracy: 0.5000 - val_loss: 0.8198\n",
      "Epoch 67/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.6308 - loss: 0.6339 - val_accuracy: 0.5169 - val_loss: 0.8168\n",
      "Epoch 68/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.6203 - loss: 0.6322 - val_accuracy: 0.5169 - val_loss: 0.8126\n",
      "Epoch 69/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.6639 - loss: 0.6045 - val_accuracy: 0.5424 - val_loss: 0.7704\n",
      "Epoch 70/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.6607 - loss: 0.6034 - val_accuracy: 0.5424 - val_loss: 0.7908\n",
      "Epoch 71/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.6621 - loss: 0.6004 - val_accuracy: 0.4831 - val_loss: 0.7954\n",
      "Epoch 72/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.6754 - loss: 0.5875 - val_accuracy: 0.4831 - val_loss: 0.9601\n",
      "Epoch 73/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.6743 - loss: 0.5864 - val_accuracy: 0.4831 - val_loss: 0.9230\n",
      "Epoch 74/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.6648 - loss: 0.6195 - val_accuracy: 0.5424 - val_loss: 0.8288\n",
      "Epoch 75/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.6783 - loss: 0.5811 - val_accuracy: 0.5000 - val_loss: 0.9330\n",
      "Epoch 76/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.6736 - loss: 0.5667 - val_accuracy: 0.4831 - val_loss: 0.9695\n",
      "Epoch 77/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.7045 - loss: 0.5547 - val_accuracy: 0.5169 - val_loss: 0.8123\n",
      "Epoch 78/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.6359 - loss: 0.6087 - val_accuracy: 0.4492 - val_loss: 0.8177\n",
      "Epoch 79/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.6839 - loss: 0.5915 - val_accuracy: 0.4915 - val_loss: 0.9769\n",
      "Epoch 80/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.7098 - loss: 0.5626 - val_accuracy: 0.4831 - val_loss: 0.9580\n",
      "Epoch 81/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.6817 - loss: 0.5517 - val_accuracy: 0.4831 - val_loss: 0.9173\n",
      "Epoch 82/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.7082 - loss: 0.5521 - val_accuracy: 0.4661 - val_loss: 0.9872\n",
      "Epoch 83/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.7311 - loss: 0.5228 - val_accuracy: 0.4915 - val_loss: 1.0230\n",
      "Epoch 84/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 27ms/step - accuracy: 0.6791 - loss: 0.5552 - val_accuracy: 0.5169 - val_loss: 0.9761\n",
      "Epoch 85/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.7202 - loss: 0.5290 - val_accuracy: 0.4915 - val_loss: 0.9735\n",
      "Epoch 86/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.7290 - loss: 0.5066 - val_accuracy: 0.4492 - val_loss: 1.1597\n",
      "Epoch 87/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.7211 - loss: 0.5189 - val_accuracy: 0.5508 - val_loss: 1.0173\n",
      "Epoch 88/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.7670 - loss: 0.4815 - val_accuracy: 0.5085 - val_loss: 1.0599\n",
      "Epoch 89/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.7140 - loss: 0.5110 - val_accuracy: 0.4661 - val_loss: 1.1297\n",
      "Epoch 90/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.7481 - loss: 0.4812 - val_accuracy: 0.4746 - val_loss: 1.2669\n",
      "Epoch 91/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.7612 - loss: 0.4428 - val_accuracy: 0.4746 - val_loss: 1.1892\n",
      "Epoch 92/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 28ms/step - accuracy: 0.7738 - loss: 0.4441 - val_accuracy: 0.4831 - val_loss: 1.2024\n",
      "Epoch 93/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 28ms/step - accuracy: 0.7438 - loss: 0.4744 - val_accuracy: 0.4661 - val_loss: 1.3036\n",
      "Epoch 94/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 0.7661 - loss: 0.4567 - val_accuracy: 0.5169 - val_loss: 1.3213\n",
      "Epoch 95/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 0.7814 - loss: 0.4254 - val_accuracy: 0.5169 - val_loss: 1.2097\n",
      "Epoch 96/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.7746 - loss: 0.4177 - val_accuracy: 0.4915 - val_loss: 1.2078\n",
      "Epoch 97/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.7980 - loss: 0.4020 - val_accuracy: 0.5085 - val_loss: 1.1796\n",
      "Epoch 98/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.8002 - loss: 0.3969 - val_accuracy: 0.4576 - val_loss: 1.4152\n",
      "Epoch 99/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.7948 - loss: 0.3919 - val_accuracy: 0.5000 - val_loss: 1.3193\n",
      "Epoch 100/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.8029 - loss: 0.3774 - val_accuracy: 0.4915 - val_loss: 1.2189\n",
      "Epoch 101/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.8018 - loss: 0.4129 - val_accuracy: 0.4831 - val_loss: 1.3953\n",
      "Epoch 102/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 0.8168 - loss: 0.3766 - val_accuracy: 0.4915 - val_loss: 1.5487\n",
      "Epoch 103/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.8279 - loss: 0.3468 - val_accuracy: 0.4576 - val_loss: 1.7004\n",
      "Epoch 104/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.8135 - loss: 0.3620 - val_accuracy: 0.4746 - val_loss: 1.8852\n",
      "Epoch 105/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - accuracy: 0.8477 - loss: 0.3172 - val_accuracy: 0.4407 - val_loss: 1.5096\n",
      "Epoch 106/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.8358 - loss: 0.3516 - val_accuracy: 0.4661 - val_loss: 1.6942\n",
      "Epoch 107/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.8451 - loss: 0.3138 - val_accuracy: 0.5169 - val_loss: 1.6100\n",
      "Epoch 108/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.8232 - loss: 0.3677 - val_accuracy: 0.4915 - val_loss: 1.6477\n",
      "Epoch 109/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.8154 - loss: 0.3595 - val_accuracy: 0.4576 - val_loss: 1.8947\n",
      "Epoch 110/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.8464 - loss: 0.3148 - val_accuracy: 0.4746 - val_loss: 1.7372\n",
      "Epoch 111/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.8515 - loss: 0.3275 - val_accuracy: 0.4322 - val_loss: 2.0871\n",
      "Epoch 112/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.8637 - loss: 0.2921 - val_accuracy: 0.4153 - val_loss: 2.1691\n",
      "Epoch 113/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.8762 - loss: 0.2576 - val_accuracy: 0.4746 - val_loss: 2.2089\n",
      "Epoch 114/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.8645 - loss: 0.2718 - val_accuracy: 0.4153 - val_loss: 2.5794\n",
      "Epoch 115/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.8640 - loss: 0.2839 - val_accuracy: 0.4661 - val_loss: 2.1860\n",
      "Epoch 116/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.8841 - loss: 0.2373 - val_accuracy: 0.4661 - val_loss: 2.3720\n",
      "Epoch 117/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.8873 - loss: 0.2433 - val_accuracy: 0.4576 - val_loss: 2.3805\n",
      "Epoch 118/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.8975 - loss: 0.2223 - val_accuracy: 0.4576 - val_loss: 2.5098\n",
      "Epoch 119/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - accuracy: 0.8998 - loss: 0.2366 - val_accuracy: 0.4915 - val_loss: 2.6428\n",
      "Epoch 120/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.9007 - loss: 0.2039 - val_accuracy: 0.4407 - val_loss: 2.6331\n",
      "Epoch 121/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.9220 - loss: 0.2001 - val_accuracy: 0.4407 - val_loss: 2.6567\n",
      "Epoch 122/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.8997 - loss: 0.1917 - val_accuracy: 0.4746 - val_loss: 2.8192\n",
      "Epoch 123/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.9075 - loss: 0.1933 - val_accuracy: 0.5000 - val_loss: 2.7311\n",
      "Epoch 124/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.9310 - loss: 0.1679 - val_accuracy: 0.4576 - val_loss: 2.9897\n",
      "Epoch 125/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.9137 - loss: 0.1845 - val_accuracy: 0.4831 - val_loss: 3.0471\n",
      "Epoch 126/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.8951 - loss: 0.2321 - val_accuracy: 0.4746 - val_loss: 2.7399\n",
      "Epoch 127/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.9050 - loss: 0.2182 - val_accuracy: 0.4746 - val_loss: 2.9616\n",
      "Epoch 128/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.9064 - loss: 0.2081 - val_accuracy: 0.4322 - val_loss: 2.6557\n",
      "Epoch 129/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 0.9012 - loss: 0.2045 - val_accuracy: 0.4492 - val_loss: 2.5350\n",
      "Epoch 130/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.8965 - loss: 0.2430 - val_accuracy: 0.4831 - val_loss: 2.8733\n",
      "Epoch 131/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.9037 - loss: 0.2278 - val_accuracy: 0.4576 - val_loss: 2.5542\n",
      "Epoch 132/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9243 - loss: 0.1724 - val_accuracy: 0.4746 - val_loss: 2.6612\n",
      "Epoch 133/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 29ms/step - accuracy: 0.9402 - loss: 0.1420 - val_accuracy: 0.4746 - val_loss: 2.6139\n",
      "Epoch 134/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 30ms/step - accuracy: 0.9493 - loss: 0.1252 - val_accuracy: 0.5085 - val_loss: 2.8375\n",
      "Epoch 135/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - accuracy: 0.9393 - loss: 0.1180 - val_accuracy: 0.5000 - val_loss: 2.9709\n",
      "Epoch 136/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 30ms/step - accuracy: 0.9650 - loss: 0.1109 - val_accuracy: 0.4661 - val_loss: 3.1754\n",
      "Epoch 137/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 28ms/step - accuracy: 0.9625 - loss: 0.0962 - val_accuracy: 0.4492 - val_loss: 3.2403\n",
      "Epoch 138/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 37ms/step - accuracy: 0.9709 - loss: 0.0823 - val_accuracy: 0.5000 - val_loss: 3.2135\n",
      "Epoch 139/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 32ms/step - accuracy: 0.9624 - loss: 0.0873 - val_accuracy: 0.4831 - val_loss: 3.3670\n",
      "Epoch 140/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 50ms/step - accuracy: 0.9610 - loss: 0.0955 - val_accuracy: 0.4661 - val_loss: 3.4836\n",
      "Epoch 141/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 42ms/step - accuracy: 0.9466 - loss: 0.1295 - val_accuracy: 0.4237 - val_loss: 3.4060\n",
      "Epoch 142/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 38ms/step - accuracy: 0.9407 - loss: 0.1493 - val_accuracy: 0.5085 - val_loss: 3.5870\n",
      "Epoch 143/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 32ms/step - accuracy: 0.9348 - loss: 0.1644 - val_accuracy: 0.4915 - val_loss: 3.0037\n",
      "Epoch 144/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 35ms/step - accuracy: 0.9398 - loss: 0.1413 - val_accuracy: 0.5085 - val_loss: 2.9119\n",
      "Epoch 145/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 41ms/step - accuracy: 0.9593 - loss: 0.1055 - val_accuracy: 0.4831 - val_loss: 3.0126\n",
      "Epoch 146/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 42ms/step - accuracy: 0.9597 - loss: 0.1038 - val_accuracy: 0.5000 - val_loss: 3.1688\n",
      "Epoch 147/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 40ms/step - accuracy: 0.9498 - loss: 0.1257 - val_accuracy: 0.4576 - val_loss: 2.9619\n",
      "Epoch 148/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 32ms/step - accuracy: 0.9590 - loss: 0.1046 - val_accuracy: 0.4661 - val_loss: 3.0617\n",
      "Epoch 149/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 32ms/step - accuracy: 0.9764 - loss: 0.0651 - val_accuracy: 0.5169 - val_loss: 3.6154\n",
      "Epoch 150/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 34ms/step - accuracy: 0.9810 - loss: 0.0458 - val_accuracy: 0.5254 - val_loss: 3.3779\n",
      "Epoch 151/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 48ms/step - accuracy: 0.9880 - loss: 0.0365 - val_accuracy: 0.5169 - val_loss: 3.5307\n",
      "Epoch 152/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 44ms/step - accuracy: 0.9943 - loss: 0.0283 - val_accuracy: 0.4661 - val_loss: 3.9643\n",
      "Epoch 153/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 42ms/step - accuracy: 0.9874 - loss: 0.0408 - val_accuracy: 0.5254 - val_loss: 3.6680\n",
      "Epoch 154/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 39ms/step - accuracy: 0.9732 - loss: 0.0534 - val_accuracy: 0.5085 - val_loss: 3.6024\n",
      "Epoch 155/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 38ms/step - accuracy: 0.9751 - loss: 0.0756 - val_accuracy: 0.4661 - val_loss: 4.2858\n",
      "Epoch 156/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 53ms/step - accuracy: 0.9604 - loss: 0.0901 - val_accuracy: 0.5000 - val_loss: 3.6060\n",
      "Epoch 157/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 44ms/step - accuracy: 0.9846 - loss: 0.0407 - val_accuracy: 0.5339 - val_loss: 3.6113\n",
      "Epoch 158/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 32ms/step - accuracy: 0.9939 - loss: 0.0262 - val_accuracy: 0.4831 - val_loss: 3.9346\n",
      "Epoch 159/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 30ms/step - accuracy: 0.9912 - loss: 0.0268 - val_accuracy: 0.5339 - val_loss: 4.0617\n",
      "Epoch 160/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 27ms/step - accuracy: 0.9932 - loss: 0.0222 - val_accuracy: 0.5000 - val_loss: 4.0897\n",
      "Epoch 161/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 33ms/step - accuracy: 0.9920 - loss: 0.0256 - val_accuracy: 0.4915 - val_loss: 3.9662\n",
      "Epoch 162/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 30ms/step - accuracy: 0.9946 - loss: 0.0258 - val_accuracy: 0.5254 - val_loss: 3.9896\n",
      "Epoch 163/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 27ms/step - accuracy: 0.9896 - loss: 0.0385 - val_accuracy: 0.5678 - val_loss: 3.4083\n",
      "Epoch 164/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - accuracy: 0.9798 - loss: 0.0628 - val_accuracy: 0.4661 - val_loss: 4.5354\n",
      "Epoch 165/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step - accuracy: 0.9673 - loss: 0.0769 - val_accuracy: 0.5085 - val_loss: 3.9853\n",
      "Epoch 166/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.9863 - loss: 0.0565 - val_accuracy: 0.4831 - val_loss: 4.6075\n",
      "Epoch 167/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.9819 - loss: 0.0618 - val_accuracy: 0.5169 - val_loss: 4.0657\n",
      "Epoch 168/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 31ms/step - accuracy: 0.9870 - loss: 0.0353 - val_accuracy: 0.4831 - val_loss: 4.0996\n",
      "Epoch 169/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 32ms/step - accuracy: 0.9904 - loss: 0.0274 - val_accuracy: 0.4407 - val_loss: 4.2939\n",
      "Epoch 170/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 43ms/step - accuracy: 0.9925 - loss: 0.0265 - val_accuracy: 0.5085 - val_loss: 3.8497\n",
      "Epoch 171/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 38ms/step - accuracy: 0.9904 - loss: 0.0249 - val_accuracy: 0.5000 - val_loss: 4.1086\n",
      "Epoch 172/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 30ms/step - accuracy: 0.9929 - loss: 0.0281 - val_accuracy: 0.4492 - val_loss: 4.1989\n",
      "Epoch 173/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 36ms/step - accuracy: 0.9841 - loss: 0.0325 - val_accuracy: 0.4576 - val_loss: 4.2737\n",
      "Epoch 174/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 26ms/step - accuracy: 0.9903 - loss: 0.0400 - val_accuracy: 0.5000 - val_loss: 4.4087\n",
      "Epoch 175/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 0.9948 - loss: 0.0240 - val_accuracy: 0.4746 - val_loss: 4.2373\n",
      "Epoch 176/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 26ms/step - accuracy: 0.9916 - loss: 0.0183 - val_accuracy: 0.5169 - val_loss: 4.3808\n",
      "Epoch 177/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - accuracy: 0.9906 - loss: 0.0299 - val_accuracy: 0.5085 - val_loss: 4.2097\n",
      "Epoch 178/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.9956 - loss: 0.0177 - val_accuracy: 0.5000 - val_loss: 4.3000\n",
      "Epoch 179/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9983 - loss: 0.0095 - val_accuracy: 0.4915 - val_loss: 4.4587\n",
      "Epoch 180/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9997 - loss: 0.0060 - val_accuracy: 0.5000 - val_loss: 4.4274\n",
      "Epoch 181/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step - accuracy: 1.0000 - loss: 0.0041 - val_accuracy: 0.5000 - val_loss: 4.5125\n",
      "Epoch 182/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.9972 - loss: 0.0108 - val_accuracy: 0.4746 - val_loss: 4.4932\n",
      "Epoch 183/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.9780 - loss: 0.0558 - val_accuracy: 0.4492 - val_loss: 4.5542\n",
      "Epoch 184/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 22ms/step - accuracy: 0.9724 - loss: 0.0665 - val_accuracy: 0.4237 - val_loss: 4.4046\n",
      "Epoch 185/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step - accuracy: 0.9813 - loss: 0.0570 - val_accuracy: 0.4661 - val_loss: 4.2918\n",
      "Epoch 186/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step - accuracy: 0.9852 - loss: 0.0427 - val_accuracy: 0.4831 - val_loss: 4.6958\n",
      "Epoch 187/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 30ms/step - accuracy: 0.9850 - loss: 0.0380 - val_accuracy: 0.4915 - val_loss: 4.3936\n",
      "Epoch 188/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 29ms/step - accuracy: 0.9911 - loss: 0.0259 - val_accuracy: 0.4915 - val_loss: 4.2621\n",
      "Epoch 189/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 28ms/step - accuracy: 0.9900 - loss: 0.0254 - val_accuracy: 0.5000 - val_loss: 4.3518\n",
      "Epoch 190/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 34ms/step - accuracy: 0.9780 - loss: 0.0699 - val_accuracy: 0.4576 - val_loss: 4.7225\n",
      "Epoch 191/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 44ms/step - accuracy: 0.9867 - loss: 0.0365 - val_accuracy: 0.4831 - val_loss: 4.4087\n",
      "Epoch 192/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 35ms/step - accuracy: 0.9532 - loss: 0.1266 - val_accuracy: 0.5000 - val_loss: 4.0237\n",
      "Epoch 193/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 28ms/step - accuracy: 0.9821 - loss: 0.0560 - val_accuracy: 0.5169 - val_loss: 3.6009\n",
      "Epoch 194/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 0.9854 - loss: 0.0365 - val_accuracy: 0.4746 - val_loss: 3.7763\n",
      "Epoch 195/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.9973 - loss: 0.0193 - val_accuracy: 0.4831 - val_loss: 3.8303\n",
      "Epoch 196/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step - accuracy: 0.9956 - loss: 0.0128 - val_accuracy: 0.4661 - val_loss: 3.9983\n",
      "Epoch 197/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step - accuracy: 0.9998 - loss: 0.0068 - val_accuracy: 0.4831 - val_loss: 3.9784\n",
      "Epoch 198/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - accuracy: 1.0000 - loss: 0.0052 - val_accuracy: 0.4746 - val_loss: 4.1523\n",
      "Epoch 199/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - accuracy: 1.0000 - loss: 0.0040 - val_accuracy: 0.4746 - val_loss: 4.0756\n",
      "Epoch 200/200\n",
      "\u001b[1m17/17\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 27ms/step - accuracy: 0.9998 - loss: 0.0034 - val_accuracy: 0.4915 - val_loss: 4.1090\n",
      "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - accuracy: 0.4874 - loss: 4.2398 \n",
      "Test Accuracy: 0.5038167834281921\n",
      "\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import LSTM, Dropout, Dense\n",
    "from tensorflow.keras.utils import to_categorical\n",
    "\n",
    "# Simulated loading of your data (replace with actual data loading)\n",
    "df = all_data\n",
    "df_future = team_pro_aligned\n",
    "\n",
    "# Assuming df and df_future are already loaded as per your setup\n",
    "\n",
    "# Normalize features except 'result'\n",
    "scaler = MinMaxScaler()\n",
    "df_features = df.drop(columns=['result'])\n",
    "df_scaled = scaler.fit_transform(df_features)\n",
    "df_future_scaled = scaler.transform(df_future)\n",
    "\n",
    "# Function to create sequences\n",
    "def create_sequences(features, target, sequence_length):\n",
    "    X, y = [], []\n",
    "    for i in range(len(features) - sequence_length):\n",
    "        seq = features[i:i + sequence_length]\n",
    "        label = target[i + sequence_length]\n",
    "        X.append(seq)\n",
    "        y.append(label)\n",
    "    return np.array(X), np.array(y)\n",
    "\n",
    "# Assuming the target is the 'result' column\n",
    "sequence_length = 5  # This is a hyperparameter you can tune\n",
    "X, y = create_sequences(df_scaled, df['result'].values, sequence_length)\n",
    "\n",
    "# Splitting dataset into train and test sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)\n",
    "\n",
    "# Model definition\n",
    "model = Sequential([\n",
    "    LSTM(128, return_sequences=True, input_shape=(X_train.shape[1], X_train.shape[2])),\n",
    "    Dropout(0.2),\n",
    "    LSTM(128),\n",
    "    Dropout(0.2),\n",
    "    Dense(64, activation='relu'),\n",
    "    Dense(1, activation='sigmoid')  # Use 'softmax' if you have more than two classes and adjust the last layer accordingly\n",
    "])\n",
    "\n",
    "model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "# Model training\n",
    "history = model.fit(X_train, y_train, epochs=200, batch_size=64, validation_split=0.1)\n",
    "\n",
    "# Evaluation\n",
    "test_loss, test_accuracy = model.evaluate(X_test, y_test)\n",
    "print(f\"Test Accuracy: {test_accuracy}\")\n",
    "\n",
    "# Preparing the future dataset for prediction\n",
    "# Assuming you want to predict the 'result' for the 'team_pro_aligned' dataset\n",
    "# Note: This might involve creating sequences with the last few entries of `df` and the start of `df_future`\n",
    "# For simplicity, here's a basic approach:\n",
    "\n",
    "# If `team_pro_aligned` does not include a 'result' column, use only feature transformation\n",
    "X_future = [df_future_scaled[i:i + sequence_length] for i in range(len(df_future_scaled) - sequence_length + 1)]\n",
    "X_future = np.array(X_future)\n",
    "\n",
    "# Making predictions\n",
    "predictions = model.predict(X_future)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "import xgboost as xgb\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from math import sqrt\n",
    "from sklearn.model_selection import train_test_split, GridSearchCV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fitting 3 folds for each of 54 candidates, totalling 162 fits\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=3, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=3, n_estimators=300; total time=   1.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=3, n_estimators=300; total time=   1.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=4, n_estimators=100; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=4, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=4, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=4, n_estimators=200; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=4, n_estimators=200; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=4, n_estimators=200; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=4, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=4, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=4, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.9s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=5, n_estimators=200; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=5, n_estimators=200; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=5, n_estimators=300; total time=   1.6s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=5, n_estimators=300; total time=   1.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.01, max_depth=5, n_estimators=300; total time=   1.6s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=3, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=3, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=3, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=3, n_estimators=200; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=3, n_estimators=200; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=3, n_estimators=300; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=3, n_estimators=300; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=3, n_estimators=300; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=4, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=4, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=4, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=4, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=4, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=4, n_estimators=200; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=4, n_estimators=300; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=4, n_estimators=300; total time=   0.9s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=4, n_estimators=300; total time=   0.9s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=5, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=5, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=5, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=5, n_estimators=200; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=5, n_estimators=200; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=5, n_estimators=200; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=5, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=5, n_estimators=300; total time=   1.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.05, max_depth=5, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=4, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=4, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=4, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=4, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=4, n_estimators=200; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=4, n_estimators=200; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=4, n_estimators=300; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=4, n_estimators=300; total time=   0.9s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=4, n_estimators=300; total time=   0.9s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=5, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=5, n_estimators=300; total time=   1.0s\n",
      "[CV] END colsample_bytree=0.3, learning_rate=0.1, max_depth=5, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=3, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=3, n_estimators=300; total time=   0.9s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=4, n_estimators=100; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=4, n_estimators=100; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=4, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=4, n_estimators=200; total time=   0.9s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=4, n_estimators=200; total time=   1.0s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=4, n_estimators=200; total time=   0.9s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=4, n_estimators=300; total time=   1.2s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=4, n_estimators=300; total time=   1.2s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=4, n_estimators=300; total time=   1.2s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=5, n_estimators=100; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=5, n_estimators=200; total time=   1.0s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=5, n_estimators=200; total time=   0.9s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=5, n_estimators=200; total time=   1.2s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=5, n_estimators=300; total time=   2.1s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=5, n_estimators=300; total time=   1.7s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.01, max_depth=5, n_estimators=300; total time=   1.9s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=3, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=3, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=3, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=3, n_estimators=200; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=3, n_estimators=300; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=3, n_estimators=300; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=3, n_estimators=300; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=4, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=4, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=4, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=4, n_estimators=200; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=4, n_estimators=200; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=4, n_estimators=200; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=4, n_estimators=300; total time=   0.9s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=4, n_estimators=300; total time=   1.2s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=4, n_estimators=300; total time=   1.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=5, n_estimators=100; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=5, n_estimators=100; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=5, n_estimators=100; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=5, n_estimators=200; total time=   1.0s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=5, n_estimators=200; total time=   1.0s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=5, n_estimators=200; total time=   1.2s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=5, n_estimators=300; total time=   1.6s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=5, n_estimators=300; total time=   1.2s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.05, max_depth=5, n_estimators=300; total time=   1.4s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=3, n_estimators=100; total time=   0.2s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=3, n_estimators=200; total time=   0.5s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=3, n_estimators=300; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=4, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=4, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=4, n_estimators=100; total time=   0.3s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=4, n_estimators=200; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=4, n_estimators=200; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=4, n_estimators=200; total time=   0.7s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=4, n_estimators=300; total time=   1.0s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=4, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=4, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.6s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=5, n_estimators=100; total time=   0.4s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=5, n_estimators=200; total time=   0.8s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=5, n_estimators=300; total time=   1.1s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=5, n_estimators=300; total time=   1.6s\n",
      "[CV] END colsample_bytree=0.7, learning_rate=0.1, max_depth=5, n_estimators=300; total time=   1.4s\n",
      "Best parameters found:  {'colsample_bytree': 0.3, 'learning_rate': 0.01, 'max_depth': 3, 'n_estimators': 200}\n",
      "Best accuracy found:  0.7024691358024692\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split, GridSearchCV\n",
    "from xgboost import XGBClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "import xgboost as xgb\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "X = all_data.iloc[:, :-1]  # All rows, all columns except the last one\n",
    "y = all_data.iloc[:, -1]   # All rows, just the last column\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "def find_best_parameters(X_train, y_train):\n",
    "    \"\"\"\n",
    "    Finds the best parameters for the XGBoost model using GridSearchCV.\n",
    "    \n",
    "    Parameters:\n",
    "    - X_train: Training features.\n",
    "    - y_train: Training target.\n",
    "    \n",
    "    Returns:\n",
    "    - A trained XGBoost model with the best parameters found.\n",
    "    \"\"\"\n",
    "    model = XGBClassifier(use_label_encoder=False, eval_metric='mlogloss')\n",
    "    param_grid = {\n",
    "        'n_estimators': [100, 200, 300],\n",
    "        'learning_rate': [0.01, 0.05, 0.1],\n",
    "        'max_depth': [3, 4, 5],\n",
    "        'colsample_bytree': [0.3, 0.7]\n",
    "    }\n",
    "    grid_search = GridSearchCV(estimator=model, param_grid=param_grid, scoring='accuracy', cv=3, verbose=2)\n",
    "    grid_search.fit(X_train, y_train)\n",
    "    print(\"Best parameters found: \", grid_search.best_params_)\n",
    "    print(\"Best accuracy found: \", grid_search.best_score_)\n",
    "    return grid_search.best_estimator_\n",
    "\n",
    "def plot_feature_importances(model, max_num_features=None, color_scheme='viridis'):\n",
    "    \"\"\"\n",
    "    Plot sorted feature importances for a trained XGBoost model.\n",
    "    \"\"\"\n",
    "    sns.set(style=\"whitegrid\")\n",
    "    feature_importances = model.get_booster().get_score(importance_type='weight')\n",
    "    sorted_features = sorted(feature_importances.items(), key=lambda kv: kv[1], reverse=True)\n",
    "    \n",
    "    if max_num_features:\n",
    "        sorted_features = sorted_features[:max_num_features]\n",
    "    \n",
    "    sorted_features_names = [x[0] for x in sorted_features]\n",
    "    sorted_features_values = [x[1] for x in sorted_features]\n",
    "    \n",
    "    plt.figure(figsize=(10, 8 if max_num_features is None else 0.5 * max_num_features)) \n",
    "    bars = plt.barh(sorted_features_names, sorted_features_values, color=sns.color_palette(color_scheme, len(sorted_features_names))) \n",
    "    for bar in bars:\n",
    "        plt.text(bar.get_width(), bar.get_y() + bar.get_height()/2, f'{bar.get_width():.2f}', va='center', ha='left', fontsize=12)\n",
    "    \n",
    "    plt.xlabel('Importance', fontsize=15)\n",
    "    plt.ylabel('Features', fontsize=15)\n",
    "    plt.title('Feature Importances for XGBoost', fontsize=20)\n",
    "    plt.xticks(fontsize=12)\n",
    "    plt.yticks(fontsize=12)\n",
    "    plt.gca().invert_yaxis()\n",
    "    plt.show()\n",
    "\n",
    "# Find the best parameters and train the model\n",
    "best_model = find_best_parameters(X_train, y_train)\n",
    "\n",
    "# Plot the feature importances of the best model\n",
    "plot_feature_importances(best_model, max_num_features=10, color_scheme='viridis')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE: 0.432225\n"
     ]
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from math import sqrt\n",
    "\n",
    "# 初始化随机森林回归器，这里使用了更多的示例参数以提高预测准确度\n",
    "rf_reg = RandomForestRegressor(\n",
    "    n_estimators=500,      # 增加树的数量以提高模型的稳定性和准确度\n",
    "    max_depth=200,          # 增加树的深度可以捕捉更复杂的数据关系，但要注意过拟合\n",
    "    min_samples_split=100,  # 增加分割所需的最小样本数可以提高模型的泛化能力\n",
    "    min_samples_leaf=4,    # 设置叶子节点的最小样本数，防止模型过于复杂而过拟合\n",
    "    max_features='sqrt',   # 每次分割考虑的特征数量，'sqrt'通常是一个不错的起点\n",
    "    bootstrap=True,        # 使用样本的bootstrap抽样\n",
    "    random_state=45        # 设置随机状态以确保结果的可重复性\n",
    ")\n",
    "\n",
    "# 训练模型\n",
    "rf_reg.fit(X_train, y_train)\n",
    "\n",
    "# 使用模型进行预测\n",
    "predictions = rf_reg.predict(X_test)\n",
    "\n",
    "# 计算RMSE\n",
    "rmse = sqrt(mean_squared_error(y_test, predictions))\n",
    "print(\"RMSE: %f\" % (rmse))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\XUN\\AppData\\Local\\Temp\\ipykernel_23304\\1510723465.py:9: FutureWarning: \n",
      "\n",
      "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n",
      "\n",
      "  sns.barplot(data=features_sorted, x='Importance', y='Feature', palette='viridis', order=features_sorted['Feature'])\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "features_importance = rf_reg.feature_importances_\n",
    "features_names = X.columns\n",
    "\n",
    "features_df = pd.DataFrame({'Feature': features_names, 'Importance': features_importance})\n",
    "features_sorted = features_df.sort_values(by='Importance', ascending=False).head(10)\n",
    "\n",
    "# 使用 seaborn 画出一个更现代化的条形图\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.barplot(data=features_sorted, x='Importance', y='Feature', palette='viridis', order=features_sorted['Feature'])\n",
    "plt.title('Top 10 Feature Importances for Random Forest', fontsize=16)\n",
    "plt.xlabel('Importance', fontsize=14)\n",
    "plt.ylabel('Features', fontsize=14)\n",
    "plt.grid(axis='x', linestyle='--', alpha=0.6)\n",
    "sns.despine(trim=True, left=True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/1000\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "c:\\Users\\XUN\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\keras\\src\\layers\\core\\dense.py:88: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 5ms/step - accuracy: 0.6337 - loss: 2.3835 - val_accuracy: 0.6588 - val_loss: 1.0596\n",
      "Epoch 2/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6384 - loss: 0.9616 - val_accuracy: 0.5355 - val_loss: 1.3505\n",
      "Epoch 3/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.6218 - loss: 0.8204 - val_accuracy: 0.6635 - val_loss: 0.8647\n",
      "Epoch 4/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6470 - loss: 0.8008 - val_accuracy: 0.6825 - val_loss: 0.6630\n",
      "Epoch 5/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6840 - loss: 0.6387 - val_accuracy: 0.6635 - val_loss: 0.8437\n",
      "Epoch 6/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7091 - loss: 0.7494 - val_accuracy: 0.6635 - val_loss: 0.6896\n",
      "Epoch 7/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6811 - loss: 0.6086 - val_accuracy: 0.6398 - val_loss: 0.6660\n",
      "Epoch 8/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7150 - loss: 0.6128 - val_accuracy: 0.6445 - val_loss: 0.8951\n",
      "Epoch 9/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7056 - loss: 0.6331 - val_accuracy: 0.5024 - val_loss: 1.0128\n",
      "Epoch 10/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6429 - loss: 0.6431 - val_accuracy: 0.6872 - val_loss: 0.6796\n",
      "Epoch 11/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6752 - loss: 0.6087 - val_accuracy: 0.6872 - val_loss: 0.6467\n",
      "Epoch 12/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6860 - loss: 0.6001 - val_accuracy: 0.6682 - val_loss: 0.6718\n",
      "Epoch 13/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7019 - loss: 0.5879 - val_accuracy: 0.6825 - val_loss: 0.6161\n",
      "Epoch 14/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7213 - loss: 0.5438 - val_accuracy: 0.6588 - val_loss: 0.6864\n",
      "Epoch 15/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7273 - loss: 0.5664 - val_accuracy: 0.6066 - val_loss: 0.6693\n",
      "Epoch 16/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7015 - loss: 0.5766 - val_accuracy: 0.6967 - val_loss: 0.6402\n",
      "Epoch 17/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7106 - loss: 0.5598 - val_accuracy: 0.6919 - val_loss: 0.6357\n",
      "Epoch 18/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7127 - loss: 0.5704 - val_accuracy: 0.6825 - val_loss: 0.6627\n",
      "Epoch 19/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7071 - loss: 0.5575 - val_accuracy: 0.6825 - val_loss: 0.6424\n",
      "Epoch 20/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7323 - loss: 0.5381 - val_accuracy: 0.6682 - val_loss: 0.6390\n",
      "Epoch 21/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7285 - loss: 0.5211 - val_accuracy: 0.6777 - val_loss: 0.6341\n",
      "Epoch 22/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7252 - loss: 0.5554 - val_accuracy: 0.6777 - val_loss: 0.6490\n",
      "Epoch 23/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7109 - loss: 0.5653 - val_accuracy: 0.6919 - val_loss: 0.6196\n",
      "Epoch 24/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7060 - loss: 0.5611 - val_accuracy: 0.6825 - val_loss: 0.6299\n",
      "Epoch 25/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7087 - loss: 0.5664 - val_accuracy: 0.6825 - val_loss: 0.6408\n",
      "Epoch 26/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.6992 - loss: 0.5828 - val_accuracy: 0.6635 - val_loss: 0.6032\n",
      "Epoch 27/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7286 - loss: 0.5552 - val_accuracy: 0.6730 - val_loss: 0.6548\n",
      "Epoch 28/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7259 - loss: 0.5430 - val_accuracy: 0.6825 - val_loss: 0.6317\n",
      "Epoch 29/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6844 - loss: 0.5835 - val_accuracy: 0.6635 - val_loss: 0.6734\n",
      "Epoch 30/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7043 - loss: 0.5412 - val_accuracy: 0.6777 - val_loss: 0.6429\n",
      "Epoch 31/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7259 - loss: 0.5435 - val_accuracy: 0.6919 - val_loss: 0.6412\n",
      "Epoch 32/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7223 - loss: 0.5445 - val_accuracy: 0.6682 - val_loss: 0.6384\n",
      "Epoch 33/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7121 - loss: 0.5614 - val_accuracy: 0.6825 - val_loss: 0.6423\n",
      "Epoch 34/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7097 - loss: 0.5599 - val_accuracy: 0.6872 - val_loss: 0.6094\n",
      "Epoch 35/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7228 - loss: 0.5410 - val_accuracy: 0.6730 - val_loss: 0.6298\n",
      "Epoch 36/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7087 - loss: 0.5555 - val_accuracy: 0.6872 - val_loss: 0.6148\n",
      "Epoch 37/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7142 - loss: 0.5498 - val_accuracy: 0.6682 - val_loss: 0.6361\n",
      "Epoch 38/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6883 - loss: 0.5292 - val_accuracy: 0.6066 - val_loss: 0.6666\n",
      "Epoch 39/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7144 - loss: 0.5549 - val_accuracy: 0.6872 - val_loss: 0.6099\n",
      "Epoch 40/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7109 - loss: 0.5309 - val_accuracy: 0.6777 - val_loss: 0.6010\n",
      "Epoch 41/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6842 - loss: 0.5545 - val_accuracy: 0.6730 - val_loss: 0.5929\n",
      "Epoch 42/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7545 - loss: 0.5123 - val_accuracy: 0.7014 - val_loss: 0.6182\n",
      "Epoch 43/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7024 - loss: 0.5440 - val_accuracy: 0.6493 - val_loss: 0.6564\n",
      "Epoch 44/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7195 - loss: 0.5257 - val_accuracy: 0.6730 - val_loss: 0.5991\n",
      "Epoch 45/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7028 - loss: 0.5677 - val_accuracy: 0.6967 - val_loss: 0.6124\n",
      "Epoch 46/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7419 - loss: 0.5251 - val_accuracy: 0.6777 - val_loss: 0.5999\n",
      "Epoch 47/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7114 - loss: 0.5452 - val_accuracy: 0.7014 - val_loss: 0.6113\n",
      "Epoch 48/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7341 - loss: 0.5219 - val_accuracy: 0.6825 - val_loss: 0.6102\n",
      "Epoch 49/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7032 - loss: 0.5597 - val_accuracy: 0.6919 - val_loss: 0.6372\n",
      "Epoch 50/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.7539 - loss: 0.5224 - val_accuracy: 0.6872 - val_loss: 0.6269\n",
      "Epoch 51/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7422 - loss: 0.5357 - val_accuracy: 0.6588 - val_loss: 0.6318\n",
      "Epoch 52/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7052 - loss: 0.5629 - val_accuracy: 0.6777 - val_loss: 0.6563\n",
      "Epoch 53/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6991 - loss: 0.5530 - val_accuracy: 0.6919 - val_loss: 0.6538\n",
      "Epoch 54/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.6964 - loss: 0.5833 - val_accuracy: 0.6825 - val_loss: 0.6233\n",
      "Epoch 55/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7202 - loss: 0.5358 - val_accuracy: 0.6635 - val_loss: 0.6463\n",
      "Epoch 56/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7357 - loss: 0.5425 - val_accuracy: 0.6919 - val_loss: 0.6477\n",
      "Epoch 57/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7137 - loss: 0.5423 - val_accuracy: 0.6588 - val_loss: 0.6750\n",
      "Epoch 58/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7126 - loss: 0.5456 - val_accuracy: 0.6682 - val_loss: 0.6353\n",
      "Epoch 59/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7204 - loss: 0.5356 - val_accuracy: 0.6730 - val_loss: 0.6241\n",
      "Epoch 60/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7156 - loss: 0.5526 - val_accuracy: 0.6730 - val_loss: 0.6363\n",
      "Epoch 61/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7147 - loss: 0.5347 - val_accuracy: 0.6730 - val_loss: 0.6417\n",
      "Epoch 62/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7289 - loss: 0.5348 - val_accuracy: 0.6730 - val_loss: 0.6510\n",
      "Epoch 63/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7150 - loss: 0.5340 - val_accuracy: 0.6493 - val_loss: 0.6353\n",
      "Epoch 64/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7449 - loss: 0.5076 - val_accuracy: 0.5877 - val_loss: 0.6918\n",
      "Epoch 65/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7035 - loss: 0.5843 - val_accuracy: 0.6682 - val_loss: 0.6093\n",
      "Epoch 66/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7534 - loss: 0.5250 - val_accuracy: 0.6872 - val_loss: 0.6156\n",
      "Epoch 67/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7240 - loss: 0.5142 - val_accuracy: 0.6967 - val_loss: 0.6043\n",
      "Epoch 68/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7456 - loss: 0.5270 - val_accuracy: 0.6161 - val_loss: 0.6519\n",
      "Epoch 69/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7346 - loss: 0.5005 - val_accuracy: 0.6872 - val_loss: 0.6158\n",
      "Epoch 70/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7180 - loss: 0.5153 - val_accuracy: 0.6445 - val_loss: 0.6257\n",
      "Epoch 71/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7482 - loss: 0.5145 - val_accuracy: 0.6682 - val_loss: 0.6309\n",
      "Epoch 72/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7076 - loss: 0.5186 - val_accuracy: 0.6635 - val_loss: 0.6337\n",
      "Epoch 73/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7263 - loss: 0.5333 - val_accuracy: 0.6635 - val_loss: 0.6294\n",
      "Epoch 74/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7048 - loss: 0.5404 - val_accuracy: 0.6540 - val_loss: 0.6739\n",
      "Epoch 75/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7279 - loss: 0.5269 - val_accuracy: 0.6682 - val_loss: 0.6287\n",
      "Epoch 76/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7492 - loss: 0.5100 - val_accuracy: 0.6635 - val_loss: 0.6262\n",
      "Epoch 77/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7282 - loss: 0.5343 - val_accuracy: 0.6588 - val_loss: 0.6632\n",
      "Epoch 78/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7240 - loss: 0.5131 - val_accuracy: 0.6256 - val_loss: 0.7183\n",
      "Epoch 79/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7619 - loss: 0.4889 - val_accuracy: 0.6398 - val_loss: 0.6613\n",
      "Epoch 80/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7741 - loss: 0.4834 - val_accuracy: 0.6730 - val_loss: 0.6448\n",
      "Epoch 81/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7262 - loss: 0.5287 - val_accuracy: 0.6635 - val_loss: 0.6914\n",
      "Epoch 82/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7521 - loss: 0.5078 - val_accuracy: 0.6777 - val_loss: 0.6415\n",
      "Epoch 83/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7205 - loss: 0.5279 - val_accuracy: 0.6588 - val_loss: 0.6434\n",
      "Epoch 84/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7395 - loss: 0.5072 - val_accuracy: 0.6540 - val_loss: 0.6424\n",
      "Epoch 85/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7440 - loss: 0.5125 - val_accuracy: 0.6635 - val_loss: 0.6734\n",
      "Epoch 86/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7581 - loss: 0.5002 - val_accuracy: 0.6730 - val_loss: 0.6862\n",
      "Epoch 87/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7425 - loss: 0.4961 - val_accuracy: 0.6398 - val_loss: 0.6687\n",
      "Epoch 88/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7234 - loss: 0.5200 - val_accuracy: 0.6777 - val_loss: 0.6619\n",
      "Epoch 89/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7229 - loss: 0.5396 - val_accuracy: 0.6588 - val_loss: 0.6358\n",
      "Epoch 90/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7508 - loss: 0.5104 - val_accuracy: 0.6682 - val_loss: 0.6617\n",
      "Epoch 91/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7265 - loss: 0.5240 - val_accuracy: 0.6540 - val_loss: 0.6950\n",
      "Epoch 92/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7492 - loss: 0.5220 - val_accuracy: 0.6588 - val_loss: 0.6577\n",
      "Epoch 93/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7536 - loss: 0.4999 - val_accuracy: 0.6635 - val_loss: 0.6395\n",
      "Epoch 94/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7504 - loss: 0.5076 - val_accuracy: 0.6635 - val_loss: 0.6668\n",
      "Epoch 95/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7728 - loss: 0.4755 - val_accuracy: 0.6682 - val_loss: 0.6458\n",
      "Epoch 96/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7589 - loss: 0.5099 - val_accuracy: 0.6209 - val_loss: 0.6631\n",
      "Epoch 97/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7364 - loss: 0.5153 - val_accuracy: 0.6351 - val_loss: 0.6764\n",
      "Epoch 98/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7668 - loss: 0.4957 - val_accuracy: 0.6493 - val_loss: 0.7479\n",
      "Epoch 99/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7558 - loss: 0.4886 - val_accuracy: 0.6588 - val_loss: 0.7256\n",
      "Epoch 100/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7459 - loss: 0.5089 - val_accuracy: 0.6730 - val_loss: 0.6782\n",
      "Epoch 101/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7593 - loss: 0.4715 - val_accuracy: 0.6161 - val_loss: 0.6809\n",
      "Epoch 102/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7258 - loss: 0.5102 - val_accuracy: 0.6635 - val_loss: 0.7046\n",
      "Epoch 103/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7727 - loss: 0.4669 - val_accuracy: 0.6493 - val_loss: 0.6914\n",
      "Epoch 104/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7684 - loss: 0.4833 - val_accuracy: 0.6730 - val_loss: 0.6589\n",
      "Epoch 105/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7642 - loss: 0.4989 - val_accuracy: 0.6445 - val_loss: 0.6589\n",
      "Epoch 106/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7589 - loss: 0.4968 - val_accuracy: 0.6588 - val_loss: 0.6538\n",
      "Epoch 107/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7501 - loss: 0.4916 - val_accuracy: 0.6635 - val_loss: 0.7101\n",
      "Epoch 108/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7370 - loss: 0.5016 - val_accuracy: 0.6493 - val_loss: 0.6906\n",
      "Epoch 109/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7635 - loss: 0.4874 - val_accuracy: 0.6493 - val_loss: 0.6625\n",
      "Epoch 110/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7644 - loss: 0.4837 - val_accuracy: 0.6540 - val_loss: 0.6894\n",
      "Epoch 111/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7690 - loss: 0.4632 - val_accuracy: 0.6588 - val_loss: 0.6935\n",
      "Epoch 112/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7819 - loss: 0.4658 - val_accuracy: 0.6588 - val_loss: 0.7311\n",
      "Epoch 113/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7533 - loss: 0.4819 - val_accuracy: 0.6635 - val_loss: 0.6734\n",
      "Epoch 114/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7560 - loss: 0.4865 - val_accuracy: 0.6209 - val_loss: 0.6884\n",
      "Epoch 115/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7845 - loss: 0.4693 - val_accuracy: 0.6493 - val_loss: 0.7063\n",
      "Epoch 116/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7639 - loss: 0.5127 - val_accuracy: 0.6588 - val_loss: 0.7236\n",
      "Epoch 117/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7531 - loss: 0.4740 - val_accuracy: 0.6398 - val_loss: 0.6887\n",
      "Epoch 118/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7753 - loss: 0.4802 - val_accuracy: 0.6445 - val_loss: 0.7525\n",
      "Epoch 119/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7731 - loss: 0.4555 - val_accuracy: 0.6351 - val_loss: 0.7156\n",
      "Epoch 120/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7610 - loss: 0.4717 - val_accuracy: 0.6256 - val_loss: 0.6844\n",
      "Epoch 121/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7638 - loss: 0.4977 - val_accuracy: 0.6540 - val_loss: 0.7439\n",
      "Epoch 122/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7485 - loss: 0.5386 - val_accuracy: 0.6682 - val_loss: 0.7018\n",
      "Epoch 123/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7590 - loss: 0.4637 - val_accuracy: 0.6256 - val_loss: 0.7246\n",
      "Epoch 124/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7650 - loss: 0.4564 - val_accuracy: 0.6303 - val_loss: 0.6953\n",
      "Epoch 125/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7673 - loss: 0.4766 - val_accuracy: 0.6445 - val_loss: 0.7234\n",
      "Epoch 126/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7514 - loss: 0.4872 - val_accuracy: 0.6445 - val_loss: 0.7025\n",
      "Epoch 127/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7732 - loss: 0.4809 - val_accuracy: 0.6588 - val_loss: 0.7231\n",
      "Epoch 128/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7748 - loss: 0.4609 - val_accuracy: 0.6209 - val_loss: 0.7108\n",
      "Epoch 129/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7474 - loss: 0.4565 - val_accuracy: 0.6493 - val_loss: 0.7397\n",
      "Epoch 130/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7827 - loss: 0.4589 - val_accuracy: 0.6588 - val_loss: 0.7424\n",
      "Epoch 131/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7684 - loss: 0.4857 - val_accuracy: 0.6256 - val_loss: 0.7008\n",
      "Epoch 132/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7682 - loss: 0.4703 - val_accuracy: 0.6303 - val_loss: 0.7500\n",
      "Epoch 133/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7778 - loss: 0.4792 - val_accuracy: 0.6398 - val_loss: 0.7618\n",
      "Epoch 134/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7726 - loss: 0.4605 - val_accuracy: 0.6445 - val_loss: 0.7611\n",
      "Epoch 135/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7943 - loss: 0.4583 - val_accuracy: 0.6445 - val_loss: 0.7303\n",
      "Epoch 136/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7694 - loss: 0.4757 - val_accuracy: 0.6635 - val_loss: 0.7976\n",
      "Epoch 137/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7818 - loss: 0.4632 - val_accuracy: 0.6351 - val_loss: 0.9233\n",
      "Epoch 138/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7663 - loss: 0.4727 - val_accuracy: 0.6445 - val_loss: 0.7231\n",
      "Epoch 139/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7565 - loss: 0.4692 - val_accuracy: 0.6588 - val_loss: 0.7830\n",
      "Epoch 140/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7632 - loss: 0.4743 - val_accuracy: 0.6398 - val_loss: 0.7273\n",
      "Epoch 141/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8196 - loss: 0.4328 - val_accuracy: 0.6209 - val_loss: 0.7017\n",
      "Epoch 142/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8196 - loss: 0.4164 - val_accuracy: 0.6540 - val_loss: 0.7275\n",
      "Epoch 143/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7906 - loss: 0.4514 - val_accuracy: 0.6256 - val_loss: 0.7533\n",
      "Epoch 144/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8202 - loss: 0.4030 - val_accuracy: 0.6493 - val_loss: 0.7873\n",
      "Epoch 145/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8036 - loss: 0.4264 - val_accuracy: 0.6493 - val_loss: 0.7191\n",
      "Epoch 146/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8071 - loss: 0.4293 - val_accuracy: 0.6493 - val_loss: 0.7652\n",
      "Epoch 147/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8048 - loss: 0.4169 - val_accuracy: 0.6445 - val_loss: 0.8242\n",
      "Epoch 148/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8055 - loss: 0.4255 - val_accuracy: 0.6398 - val_loss: 0.8405\n",
      "Epoch 149/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7742 - loss: 0.4685 - val_accuracy: 0.6398 - val_loss: 0.8346\n",
      "Epoch 150/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8202 - loss: 0.4217 - val_accuracy: 0.6351 - val_loss: 0.7370\n",
      "Epoch 151/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8173 - loss: 0.3999 - val_accuracy: 0.6540 - val_loss: 0.7986\n",
      "Epoch 152/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7873 - loss: 0.4742 - val_accuracy: 0.6256 - val_loss: 0.7621\n",
      "Epoch 153/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7689 - loss: 0.4576 - val_accuracy: 0.6351 - val_loss: 0.7622\n",
      "Epoch 154/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7922 - loss: 0.4267 - val_accuracy: 0.6493 - val_loss: 0.7883\n",
      "Epoch 155/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7873 - loss: 0.4430 - val_accuracy: 0.6493 - val_loss: 0.8162\n",
      "Epoch 156/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7958 - loss: 0.4205 - val_accuracy: 0.6351 - val_loss: 0.7569\n",
      "Epoch 157/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8120 - loss: 0.4247 - val_accuracy: 0.6635 - val_loss: 0.7573\n",
      "Epoch 158/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7668 - loss: 0.4596 - val_accuracy: 0.6351 - val_loss: 0.8063\n",
      "Epoch 159/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8225 - loss: 0.4036 - val_accuracy: 0.6161 - val_loss: 0.8018\n",
      "Epoch 160/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8231 - loss: 0.3969 - val_accuracy: 0.6161 - val_loss: 0.7641\n",
      "Epoch 161/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8167 - loss: 0.3943 - val_accuracy: 0.6445 - val_loss: 0.8020\n",
      "Epoch 162/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8009 - loss: 0.4202 - val_accuracy: 0.6161 - val_loss: 0.8091\n",
      "Epoch 163/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8083 - loss: 0.4051 - val_accuracy: 0.6066 - val_loss: 0.8571\n",
      "Epoch 164/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7562 - loss: 0.4508 - val_accuracy: 0.6256 - val_loss: 0.8405\n",
      "Epoch 165/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7897 - loss: 0.4300 - val_accuracy: 0.6445 - val_loss: 0.8734\n",
      "Epoch 166/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8239 - loss: 0.3959 - val_accuracy: 0.6209 - val_loss: 0.7973\n",
      "Epoch 167/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8002 - loss: 0.3992 - val_accuracy: 0.6209 - val_loss: 0.7802\n",
      "Epoch 168/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8453 - loss: 0.3874 - val_accuracy: 0.6256 - val_loss: 0.8152\n",
      "Epoch 169/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7922 - loss: 0.4127 - val_accuracy: 0.6351 - val_loss: 0.8356\n",
      "Epoch 170/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7904 - loss: 0.4282 - val_accuracy: 0.6303 - val_loss: 0.8526\n",
      "Epoch 171/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7930 - loss: 0.4274 - val_accuracy: 0.6445 - val_loss: 0.8293\n",
      "Epoch 172/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7887 - loss: 0.3990 - val_accuracy: 0.6351 - val_loss: 0.8902\n",
      "Epoch 173/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8000 - loss: 0.3986 - val_accuracy: 0.6303 - val_loss: 0.8643\n",
      "Epoch 174/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7762 - loss: 0.4400 - val_accuracy: 0.6209 - val_loss: 0.8729\n",
      "Epoch 175/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8238 - loss: 0.3944 - val_accuracy: 0.6256 - val_loss: 0.8267\n",
      "Epoch 176/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8326 - loss: 0.3818 - val_accuracy: 0.6209 - val_loss: 0.8132\n",
      "Epoch 177/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8402 - loss: 0.3727 - val_accuracy: 0.6256 - val_loss: 0.8317\n",
      "Epoch 178/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8101 - loss: 0.3937 - val_accuracy: 0.6209 - val_loss: 0.8567\n",
      "Epoch 179/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8169 - loss: 0.4014 - val_accuracy: 0.6493 - val_loss: 0.9309\n",
      "Epoch 180/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8211 - loss: 0.3784 - val_accuracy: 0.6351 - val_loss: 0.8851\n",
      "Epoch 181/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8183 - loss: 0.4016 - val_accuracy: 0.6540 - val_loss: 0.9485\n",
      "Epoch 182/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8068 - loss: 0.4056 - val_accuracy: 0.6209 - val_loss: 0.8192\n",
      "Epoch 183/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8393 - loss: 0.3591 - val_accuracy: 0.6398 - val_loss: 0.8373\n",
      "Epoch 184/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8306 - loss: 0.3738 - val_accuracy: 0.6161 - val_loss: 0.8341\n",
      "Epoch 185/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8185 - loss: 0.3944 - val_accuracy: 0.6256 - val_loss: 0.9981\n",
      "Epoch 186/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7893 - loss: 0.4232 - val_accuracy: 0.6256 - val_loss: 0.9213\n",
      "Epoch 187/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7943 - loss: 0.4271 - val_accuracy: 0.6019 - val_loss: 0.9373\n",
      "Epoch 188/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8263 - loss: 0.3637 - val_accuracy: 0.6351 - val_loss: 0.8566\n",
      "Epoch 189/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8245 - loss: 0.3891 - val_accuracy: 0.6209 - val_loss: 0.9053\n",
      "Epoch 190/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8436 - loss: 0.3600 - val_accuracy: 0.6066 - val_loss: 0.9068\n",
      "Epoch 191/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.7878 - loss: 0.4057 - val_accuracy: 0.6019 - val_loss: 0.9361\n",
      "Epoch 192/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8228 - loss: 0.3806 - val_accuracy: 0.6445 - val_loss: 0.9122\n",
      "Epoch 193/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8407 - loss: 0.3576 - val_accuracy: 0.6256 - val_loss: 0.8361\n",
      "Epoch 194/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8270 - loss: 0.3766 - val_accuracy: 0.6398 - val_loss: 0.9735\n",
      "Epoch 195/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7933 - loss: 0.4191 - val_accuracy: 0.6256 - val_loss: 0.9029\n",
      "Epoch 196/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8544 - loss: 0.3399 - val_accuracy: 0.6540 - val_loss: 0.9368\n",
      "Epoch 197/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8298 - loss: 0.3725 - val_accuracy: 0.6303 - val_loss: 0.9886\n",
      "Epoch 198/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7888 - loss: 0.4041 - val_accuracy: 0.6256 - val_loss: 0.9631\n",
      "Epoch 199/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8329 - loss: 0.3766 - val_accuracy: 0.6303 - val_loss: 0.9718\n",
      "Epoch 200/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8092 - loss: 0.3794 - val_accuracy: 0.6398 - val_loss: 0.9539\n",
      "Epoch 201/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8065 - loss: 0.3811 - val_accuracy: 0.6161 - val_loss: 0.9240\n",
      "Epoch 202/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8027 - loss: 0.3944 - val_accuracy: 0.6635 - val_loss: 0.9174\n",
      "Epoch 203/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.7782 - loss: 0.4789 - val_accuracy: 0.6161 - val_loss: 0.9782\n",
      "Epoch 204/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8385 - loss: 0.3719 - val_accuracy: 0.6540 - val_loss: 0.9347\n",
      "Epoch 205/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8538 - loss: 0.3474 - val_accuracy: 0.5972 - val_loss: 0.9377\n",
      "Epoch 206/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8271 - loss: 0.3438 - val_accuracy: 0.6066 - val_loss: 0.9509\n",
      "Epoch 207/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8398 - loss: 0.3329 - val_accuracy: 0.6066 - val_loss: 0.9081\n",
      "Epoch 208/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8085 - loss: 0.4320 - val_accuracy: 0.6351 - val_loss: 0.9942\n",
      "Epoch 209/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8224 - loss: 0.3714 - val_accuracy: 0.6303 - val_loss: 1.0646\n",
      "Epoch 210/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8114 - loss: 0.3912 - val_accuracy: 0.6209 - val_loss: 0.9807\n",
      "Epoch 211/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8196 - loss: 0.3736 - val_accuracy: 0.6209 - val_loss: 0.9077\n",
      "Epoch 212/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8482 - loss: 0.3310 - val_accuracy: 0.6209 - val_loss: 1.0742\n",
      "Epoch 213/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8382 - loss: 0.3385 - val_accuracy: 0.6256 - val_loss: 1.0297\n",
      "Epoch 214/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8407 - loss: 0.3412 - val_accuracy: 0.6398 - val_loss: 1.1706\n",
      "Epoch 215/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8109 - loss: 0.4085 - val_accuracy: 0.6256 - val_loss: 1.1258\n",
      "Epoch 216/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8425 - loss: 0.3255 - val_accuracy: 0.6256 - val_loss: 1.0928\n",
      "Epoch 217/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8200 - loss: 0.3639 - val_accuracy: 0.6114 - val_loss: 1.0265\n",
      "Epoch 218/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8403 - loss: 0.3499 - val_accuracy: 0.6209 - val_loss: 0.9910\n",
      "Epoch 219/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8619 - loss: 0.3426 - val_accuracy: 0.6161 - val_loss: 0.9159\n",
      "Epoch 220/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8427 - loss: 0.3283 - val_accuracy: 0.6256 - val_loss: 1.0266\n",
      "Epoch 221/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8385 - loss: 0.3443 - val_accuracy: 0.6161 - val_loss: 1.0446\n",
      "Epoch 222/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8358 - loss: 0.3595 - val_accuracy: 0.6303 - val_loss: 1.0420\n",
      "Epoch 223/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8281 - loss: 0.3732 - val_accuracy: 0.6066 - val_loss: 1.0749\n",
      "Epoch 224/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8333 - loss: 0.3426 - val_accuracy: 0.6161 - val_loss: 1.1953\n",
      "Epoch 225/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8480 - loss: 0.3420 - val_accuracy: 0.6161 - val_loss: 1.0674\n",
      "Epoch 226/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8341 - loss: 0.3478 - val_accuracy: 0.6351 - val_loss: 1.1197\n",
      "Epoch 227/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8466 - loss: 0.3296 - val_accuracy: 0.6066 - val_loss: 1.0015\n",
      "Epoch 228/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8314 - loss: 0.3413 - val_accuracy: 0.6351 - val_loss: 1.0167\n",
      "Epoch 229/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8564 - loss: 0.3150 - val_accuracy: 0.6161 - val_loss: 1.0414\n",
      "Epoch 230/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8599 - loss: 0.3234 - val_accuracy: 0.5640 - val_loss: 1.0245\n",
      "Epoch 231/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.8428 - loss: 0.3464 - val_accuracy: 0.6445 - val_loss: 1.1143\n",
      "Epoch 232/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8586 - loss: 0.3340 - val_accuracy: 0.6161 - val_loss: 1.1335\n",
      "Epoch 233/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8612 - loss: 0.3257 - val_accuracy: 0.6019 - val_loss: 1.1293\n",
      "Epoch 234/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8391 - loss: 0.3459 - val_accuracy: 0.6303 - val_loss: 1.1135\n",
      "Epoch 235/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8611 - loss: 0.3094 - val_accuracy: 0.5877 - val_loss: 1.1408\n",
      "Epoch 236/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8518 - loss: 0.3199 - val_accuracy: 0.6351 - val_loss: 1.0327\n",
      "Epoch 237/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8881 - loss: 0.2736 - val_accuracy: 0.6019 - val_loss: 1.1264\n",
      "Epoch 238/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8741 - loss: 0.3168 - val_accuracy: 0.6114 - val_loss: 1.0322\n",
      "Epoch 239/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8673 - loss: 0.2918 - val_accuracy: 0.6019 - val_loss: 1.1015\n",
      "Epoch 240/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8488 - loss: 0.3091 - val_accuracy: 0.6161 - val_loss: 1.1744\n",
      "Epoch 241/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8347 - loss: 0.3734 - val_accuracy: 0.5924 - val_loss: 1.1696\n",
      "Epoch 242/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8372 - loss: 0.3549 - val_accuracy: 0.6303 - val_loss: 1.2193\n",
      "Epoch 243/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8229 - loss: 0.3646 - val_accuracy: 0.6256 - val_loss: 1.0353\n",
      "Epoch 244/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8664 - loss: 0.2999 - val_accuracy: 0.6209 - val_loss: 1.0879\n",
      "Epoch 245/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8544 - loss: 0.3197 - val_accuracy: 0.6209 - val_loss: 1.2415\n",
      "Epoch 246/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8378 - loss: 0.3528 - val_accuracy: 0.6256 - val_loss: 1.0267\n",
      "Epoch 247/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8743 - loss: 0.2875 - val_accuracy: 0.6351 - val_loss: 1.2682\n",
      "Epoch 248/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8556 - loss: 0.3105 - val_accuracy: 0.6161 - val_loss: 1.1253\n",
      "Epoch 249/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8609 - loss: 0.3142 - val_accuracy: 0.6114 - val_loss: 1.0436\n",
      "Epoch 250/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8695 - loss: 0.3056 - val_accuracy: 0.6161 - val_loss: 1.1796\n",
      "Epoch 251/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8908 - loss: 0.2648 - val_accuracy: 0.6066 - val_loss: 1.0787\n",
      "Epoch 252/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8693 - loss: 0.3059 - val_accuracy: 0.6019 - val_loss: 1.1690\n",
      "Epoch 253/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8318 - loss: 0.3410 - val_accuracy: 0.6066 - val_loss: 1.0342\n",
      "Epoch 254/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8496 - loss: 0.3226 - val_accuracy: 0.6019 - val_loss: 1.1816\n",
      "Epoch 255/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8805 - loss: 0.2774 - val_accuracy: 0.6303 - val_loss: 1.1739\n",
      "Epoch 256/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8668 - loss: 0.3031 - val_accuracy: 0.6066 - val_loss: 1.1921\n",
      "Epoch 257/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.8638 - loss: 0.3030 - val_accuracy: 0.6161 - val_loss: 1.1651\n",
      "Epoch 258/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8713 - loss: 0.2798 - val_accuracy: 0.6256 - val_loss: 1.2860\n",
      "Epoch 259/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8962 - loss: 0.2369 - val_accuracy: 0.6114 - val_loss: 1.2229\n",
      "Epoch 260/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8049 - loss: 0.4805 - val_accuracy: 0.6114 - val_loss: 1.1113\n",
      "Epoch 261/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8142 - loss: 0.3998 - val_accuracy: 0.6493 - val_loss: 1.1233\n",
      "Epoch 262/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8679 - loss: 0.2917 - val_accuracy: 0.6209 - val_loss: 1.1115\n",
      "Epoch 263/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8928 - loss: 0.2650 - val_accuracy: 0.6019 - val_loss: 1.1729\n",
      "Epoch 264/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8705 - loss: 0.3062 - val_accuracy: 0.6209 - val_loss: 1.2685\n",
      "Epoch 265/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8762 - loss: 0.3024 - val_accuracy: 0.6209 - val_loss: 1.1898\n",
      "Epoch 266/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8566 - loss: 0.2989 - val_accuracy: 0.6256 - val_loss: 1.2722\n",
      "Epoch 267/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8816 - loss: 0.2576 - val_accuracy: 0.6209 - val_loss: 1.1772\n",
      "Epoch 268/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8752 - loss: 0.2893 - val_accuracy: 0.6161 - val_loss: 1.1222\n",
      "Epoch 269/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8628 - loss: 0.2799 - val_accuracy: 0.6445 - val_loss: 1.2588\n",
      "Epoch 270/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8613 - loss: 0.2839 - val_accuracy: 0.6256 - val_loss: 1.1194\n",
      "Epoch 271/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9023 - loss: 0.2578 - val_accuracy: 0.6209 - val_loss: 1.1988\n",
      "Epoch 272/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8854 - loss: 0.2627 - val_accuracy: 0.6351 - val_loss: 1.1829\n",
      "Epoch 273/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8554 - loss: 0.2779 - val_accuracy: 0.5924 - val_loss: 1.2126\n",
      "Epoch 274/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8681 - loss: 0.2994 - val_accuracy: 0.6209 - val_loss: 1.3623\n",
      "Epoch 275/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8773 - loss: 0.2715 - val_accuracy: 0.6493 - val_loss: 1.1570\n",
      "Epoch 276/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8844 - loss: 0.2643 - val_accuracy: 0.6114 - val_loss: 1.1752\n",
      "Epoch 277/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8897 - loss: 0.2526 - val_accuracy: 0.6303 - val_loss: 1.2570\n",
      "Epoch 278/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8496 - loss: 0.4085 - val_accuracy: 0.6161 - val_loss: 1.3734\n",
      "Epoch 279/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8369 - loss: 0.3029 - val_accuracy: 0.5924 - val_loss: 1.2791\n",
      "Epoch 280/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8801 - loss: 0.2520 - val_accuracy: 0.6209 - val_loss: 1.3060\n",
      "Epoch 281/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8899 - loss: 0.2567 - val_accuracy: 0.6066 - val_loss: 1.2349\n",
      "Epoch 282/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8991 - loss: 0.2530 - val_accuracy: 0.6256 - val_loss: 1.2824\n",
      "Epoch 283/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9013 - loss: 0.2562 - val_accuracy: 0.6209 - val_loss: 1.2382\n",
      "Epoch 284/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8392 - loss: 0.3607 - val_accuracy: 0.6066 - val_loss: 1.2255\n",
      "Epoch 285/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8913 - loss: 0.2574 - val_accuracy: 0.6019 - val_loss: 1.1234\n",
      "Epoch 286/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8881 - loss: 0.2596 - val_accuracy: 0.6209 - val_loss: 1.1599\n",
      "Epoch 287/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8857 - loss: 0.2723 - val_accuracy: 0.6066 - val_loss: 1.2140\n",
      "Epoch 288/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8823 - loss: 0.2492 - val_accuracy: 0.6161 - val_loss: 1.1618\n",
      "Epoch 289/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8986 - loss: 0.2383 - val_accuracy: 0.6209 - val_loss: 1.0833\n",
      "Epoch 290/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8845 - loss: 0.2880 - val_accuracy: 0.6161 - val_loss: 1.0947\n",
      "Epoch 291/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8820 - loss: 0.2770 - val_accuracy: 0.5498 - val_loss: 1.0775\n",
      "Epoch 292/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8963 - loss: 0.2665 - val_accuracy: 0.6351 - val_loss: 1.2497\n",
      "Epoch 293/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8760 - loss: 0.2426 - val_accuracy: 0.6303 - val_loss: 1.3165\n",
      "Epoch 294/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8893 - loss: 0.2403 - val_accuracy: 0.6209 - val_loss: 1.3334\n",
      "Epoch 295/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8733 - loss: 0.2686 - val_accuracy: 0.6398 - val_loss: 1.2746\n",
      "Epoch 296/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9031 - loss: 0.2327 - val_accuracy: 0.6398 - val_loss: 1.3386\n",
      "Epoch 297/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8886 - loss: 0.2588 - val_accuracy: 0.6209 - val_loss: 1.3267\n",
      "Epoch 298/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9051 - loss: 0.2281 - val_accuracy: 0.6303 - val_loss: 1.2340\n",
      "Epoch 299/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8870 - loss: 0.2425 - val_accuracy: 0.6161 - val_loss: 1.1383\n",
      "Epoch 300/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8670 - loss: 0.2797 - val_accuracy: 0.6303 - val_loss: 1.1408\n",
      "Epoch 301/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9086 - loss: 0.2160 - val_accuracy: 0.6114 - val_loss: 1.2952\n",
      "Epoch 302/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9028 - loss: 0.2346 - val_accuracy: 0.6351 - val_loss: 1.4257\n",
      "Epoch 303/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8801 - loss: 0.2879 - val_accuracy: 0.6351 - val_loss: 1.2160\n",
      "Epoch 304/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8799 - loss: 0.2564 - val_accuracy: 0.6161 - val_loss: 1.3751\n",
      "Epoch 305/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8713 - loss: 0.2691 - val_accuracy: 0.6256 - val_loss: 1.3324\n",
      "Epoch 306/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8886 - loss: 0.2364 - val_accuracy: 0.6019 - val_loss: 1.3751\n",
      "Epoch 307/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8864 - loss: 0.2387 - val_accuracy: 0.6445 - val_loss: 1.5661\n",
      "Epoch 308/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8842 - loss: 0.2692 - val_accuracy: 0.6209 - val_loss: 1.3759\n",
      "Epoch 309/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8597 - loss: 0.3121 - val_accuracy: 0.6114 - val_loss: 1.3209\n",
      "Epoch 310/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8951 - loss: 0.2485 - val_accuracy: 0.6303 - val_loss: 1.5772\n",
      "Epoch 311/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8452 - loss: 0.3698 - val_accuracy: 0.6303 - val_loss: 1.3575\n",
      "Epoch 312/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8910 - loss: 0.2503 - val_accuracy: 0.6209 - val_loss: 1.5306\n",
      "Epoch 313/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8821 - loss: 0.2399 - val_accuracy: 0.6209 - val_loss: 1.3828\n",
      "Epoch 314/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.8980 - loss: 0.2122 - val_accuracy: 0.6398 - val_loss: 1.3301\n",
      "Epoch 315/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9106 - loss: 0.2044 - val_accuracy: 0.6066 - val_loss: 1.4177\n",
      "Epoch 316/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9150 - loss: 0.1914 - val_accuracy: 0.6303 - val_loss: 1.3545\n",
      "Epoch 317/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9114 - loss: 0.2091 - val_accuracy: 0.5924 - val_loss: 1.4710\n",
      "Epoch 318/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8844 - loss: 0.2463 - val_accuracy: 0.6161 - val_loss: 1.4106\n",
      "Epoch 319/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8586 - loss: 0.2705 - val_accuracy: 0.5924 - val_loss: 1.3666\n",
      "Epoch 320/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9124 - loss: 0.2095 - val_accuracy: 0.5972 - val_loss: 1.5223\n",
      "Epoch 321/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8713 - loss: 0.2889 - val_accuracy: 0.6066 - val_loss: 1.2659\n",
      "Epoch 322/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9068 - loss: 0.2038 - val_accuracy: 0.6114 - val_loss: 1.5222\n",
      "Epoch 323/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9328 - loss: 0.2007 - val_accuracy: 0.6256 - val_loss: 1.4011\n",
      "Epoch 324/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9150 - loss: 0.1966 - val_accuracy: 0.5782 - val_loss: 1.3462\n",
      "Epoch 325/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8798 - loss: 0.2668 - val_accuracy: 0.6209 - val_loss: 1.4541\n",
      "Epoch 326/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8708 - loss: 0.2986 - val_accuracy: 0.6066 - val_loss: 1.3737\n",
      "Epoch 327/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8946 - loss: 0.2454 - val_accuracy: 0.5972 - val_loss: 1.4918\n",
      "Epoch 328/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8696 - loss: 0.2639 - val_accuracy: 0.5972 - val_loss: 1.2420\n",
      "Epoch 329/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8808 - loss: 0.2702 - val_accuracy: 0.5972 - val_loss: 1.1991\n",
      "Epoch 330/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9102 - loss: 0.2358 - val_accuracy: 0.6540 - val_loss: 1.2387\n",
      "Epoch 331/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9092 - loss: 0.2202 - val_accuracy: 0.6114 - val_loss: 1.4305\n",
      "Epoch 332/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9033 - loss: 0.2188 - val_accuracy: 0.6114 - val_loss: 1.4848\n",
      "Epoch 333/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8512 - loss: 0.3196 - val_accuracy: 0.6445 - val_loss: 1.4424\n",
      "Epoch 334/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8726 - loss: 0.2652 - val_accuracy: 0.6303 - val_loss: 1.4130\n",
      "Epoch 335/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8959 - loss: 0.2169 - val_accuracy: 0.6161 - val_loss: 1.4778\n",
      "Epoch 336/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9055 - loss: 0.2183 - val_accuracy: 0.5782 - val_loss: 1.5080\n",
      "Epoch 337/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8742 - loss: 0.3214 - val_accuracy: 0.6161 - val_loss: 1.4219\n",
      "Epoch 338/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9198 - loss: 0.1864 - val_accuracy: 0.6540 - val_loss: 1.4260\n",
      "Epoch 339/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8953 - loss: 0.2271 - val_accuracy: 0.6493 - val_loss: 1.4634\n",
      "Epoch 340/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9167 - loss: 0.1921 - val_accuracy: 0.6066 - val_loss: 1.4955\n",
      "Epoch 341/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9121 - loss: 0.2052 - val_accuracy: 0.6066 - val_loss: 1.3969\n",
      "Epoch 342/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9093 - loss: 0.2169 - val_accuracy: 0.6303 - val_loss: 1.4828\n",
      "Epoch 343/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9075 - loss: 0.1952 - val_accuracy: 0.6256 - val_loss: 1.4426\n",
      "Epoch 344/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9283 - loss: 0.1828 - val_accuracy: 0.6256 - val_loss: 1.5094\n",
      "Epoch 345/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8771 - loss: 0.2389 - val_accuracy: 0.6303 - val_loss: 1.4833\n",
      "Epoch 346/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9271 - loss: 0.1873 - val_accuracy: 0.6209 - val_loss: 1.6210\n",
      "Epoch 347/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9305 - loss: 0.1890 - val_accuracy: 0.6114 - val_loss: 1.5444\n",
      "Epoch 348/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9039 - loss: 0.2246 - val_accuracy: 0.6066 - val_loss: 1.4011\n",
      "Epoch 349/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8742 - loss: 0.2577 - val_accuracy: 0.6303 - val_loss: 1.5284\n",
      "Epoch 350/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8913 - loss: 0.2599 - val_accuracy: 0.6303 - val_loss: 1.5069\n",
      "Epoch 351/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8972 - loss: 0.2318 - val_accuracy: 0.6161 - val_loss: 1.5959\n",
      "Epoch 352/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9000 - loss: 0.2330 - val_accuracy: 0.6256 - val_loss: 1.6387\n",
      "Epoch 353/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8873 - loss: 0.2317 - val_accuracy: 0.6161 - val_loss: 1.5839\n",
      "Epoch 354/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8969 - loss: 0.2170 - val_accuracy: 0.6351 - val_loss: 1.4591\n",
      "Epoch 355/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9030 - loss: 0.2042 - val_accuracy: 0.6161 - val_loss: 1.5273\n",
      "Epoch 356/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8771 - loss: 0.2969 - val_accuracy: 0.6398 - val_loss: 1.4233\n",
      "Epoch 357/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9131 - loss: 0.2025 - val_accuracy: 0.6303 - val_loss: 1.7297\n",
      "Epoch 358/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9215 - loss: 0.2043 - val_accuracy: 0.6256 - val_loss: 1.3347\n",
      "Epoch 359/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9122 - loss: 0.2091 - val_accuracy: 0.6256 - val_loss: 1.8326\n",
      "Epoch 360/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9027 - loss: 0.2564 - val_accuracy: 0.5924 - val_loss: 1.4573\n",
      "Epoch 361/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8948 - loss: 0.2370 - val_accuracy: 0.6019 - val_loss: 1.6128\n",
      "Epoch 362/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9090 - loss: 0.1959 - val_accuracy: 0.6256 - val_loss: 1.6605\n",
      "Epoch 363/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9381 - loss: 0.1585 - val_accuracy: 0.6256 - val_loss: 1.5970\n",
      "Epoch 364/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9049 - loss: 0.2008 - val_accuracy: 0.6209 - val_loss: 1.4856\n",
      "Epoch 365/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8930 - loss: 0.2193 - val_accuracy: 0.6209 - val_loss: 1.5758\n",
      "Epoch 366/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9300 - loss: 0.1705 - val_accuracy: 0.6019 - val_loss: 1.5571\n",
      "Epoch 367/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9240 - loss: 0.1938 - val_accuracy: 0.6019 - val_loss: 1.5273\n",
      "Epoch 368/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9049 - loss: 0.2371 - val_accuracy: 0.6730 - val_loss: 1.3760\n",
      "Epoch 369/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8886 - loss: 0.2187 - val_accuracy: 0.6825 - val_loss: 1.5842\n",
      "Epoch 370/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9137 - loss: 0.1851 - val_accuracy: 0.6351 - val_loss: 1.7653\n",
      "Epoch 371/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9068 - loss: 0.2068 - val_accuracy: 0.6114 - val_loss: 1.6717\n",
      "Epoch 372/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9235 - loss: 0.1938 - val_accuracy: 0.6493 - val_loss: 1.5914\n",
      "Epoch 373/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9029 - loss: 0.2217 - val_accuracy: 0.6209 - val_loss: 1.6375\n",
      "Epoch 374/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9400 - loss: 0.1568 - val_accuracy: 0.5877 - val_loss: 1.5539\n",
      "Epoch 375/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9135 - loss: 0.2025 - val_accuracy: 0.6114 - val_loss: 1.5743\n",
      "Epoch 376/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9440 - loss: 0.1580 - val_accuracy: 0.6019 - val_loss: 1.5571\n",
      "Epoch 377/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9417 - loss: 0.1540 - val_accuracy: 0.6209 - val_loss: 1.7069\n",
      "Epoch 378/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9003 - loss: 0.2205 - val_accuracy: 0.6351 - val_loss: 1.7184\n",
      "Epoch 379/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8914 - loss: 0.2579 - val_accuracy: 0.6303 - val_loss: 1.6713\n",
      "Epoch 380/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9182 - loss: 0.1805 - val_accuracy: 0.6114 - val_loss: 1.6001\n",
      "Epoch 381/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9381 - loss: 0.1506 - val_accuracy: 0.6019 - val_loss: 1.7589\n",
      "Epoch 382/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9006 - loss: 0.2096 - val_accuracy: 0.6445 - val_loss: 1.7338\n",
      "Epoch 383/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9462 - loss: 0.1315 - val_accuracy: 0.6256 - val_loss: 1.6278\n",
      "Epoch 384/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9338 - loss: 0.1549 - val_accuracy: 0.6445 - val_loss: 1.5569\n",
      "Epoch 385/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9128 - loss: 0.2188 - val_accuracy: 0.6303 - val_loss: 1.6263\n",
      "Epoch 386/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9278 - loss: 0.1733 - val_accuracy: 0.6256 - val_loss: 1.7737\n",
      "Epoch 387/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8997 - loss: 0.2710 - val_accuracy: 0.6066 - val_loss: 1.5577\n",
      "Epoch 388/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8947 - loss: 0.2250 - val_accuracy: 0.6256 - val_loss: 1.7372\n",
      "Epoch 389/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9135 - loss: 0.1683 - val_accuracy: 0.6209 - val_loss: 1.6440\n",
      "Epoch 390/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9316 - loss: 0.1954 - val_accuracy: 0.5877 - val_loss: 1.5967\n",
      "Epoch 391/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9261 - loss: 0.1641 - val_accuracy: 0.6493 - val_loss: 1.5152\n",
      "Epoch 392/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9283 - loss: 0.1608 - val_accuracy: 0.6493 - val_loss: 1.5875\n",
      "Epoch 393/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9289 - loss: 0.1665 - val_accuracy: 0.6256 - val_loss: 1.7929\n",
      "Epoch 394/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9254 - loss: 0.1834 - val_accuracy: 0.6256 - val_loss: 1.6026\n",
      "Epoch 395/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9145 - loss: 0.1850 - val_accuracy: 0.6161 - val_loss: 1.5857\n",
      "Epoch 396/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9131 - loss: 0.2261 - val_accuracy: 0.6398 - val_loss: 1.5421\n",
      "Epoch 397/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9109 - loss: 0.1845 - val_accuracy: 0.6256 - val_loss: 1.7079\n",
      "Epoch 398/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9050 - loss: 0.1929 - val_accuracy: 0.5924 - val_loss: 1.7879\n",
      "Epoch 399/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.9238 - loss: 0.1742 - val_accuracy: 0.6066 - val_loss: 1.4526\n",
      "Epoch 400/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8855 - loss: 0.2661 - val_accuracy: 0.6114 - val_loss: 1.7752\n",
      "Epoch 401/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9411 - loss: 0.1689 - val_accuracy: 0.6161 - val_loss: 1.7537\n",
      "Epoch 402/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8539 - loss: 0.4454 - val_accuracy: 0.6209 - val_loss: 1.5244\n",
      "Epoch 403/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8619 - loss: 0.3117 - val_accuracy: 0.6398 - val_loss: 1.6228\n",
      "Epoch 404/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8957 - loss: 0.2004 - val_accuracy: 0.6161 - val_loss: 1.6658\n",
      "Epoch 405/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9378 - loss: 0.1606 - val_accuracy: 0.6161 - val_loss: 1.7019\n",
      "Epoch 406/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9104 - loss: 0.2501 - val_accuracy: 0.6114 - val_loss: 1.6629\n",
      "Epoch 407/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9142 - loss: 0.1740 - val_accuracy: 0.6256 - val_loss: 1.6206\n",
      "Epoch 408/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9140 - loss: 0.1821 - val_accuracy: 0.6256 - val_loss: 1.5378\n",
      "Epoch 409/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9369 - loss: 0.1434 - val_accuracy: 0.6303 - val_loss: 1.6837\n",
      "Epoch 410/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9497 - loss: 0.1219 - val_accuracy: 0.6209 - val_loss: 1.7170\n",
      "Epoch 411/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9267 - loss: 0.1476 - val_accuracy: 0.6351 - val_loss: 1.7396\n",
      "Epoch 412/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9200 - loss: 0.1635 - val_accuracy: 0.6209 - val_loss: 1.7070\n",
      "Epoch 413/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9397 - loss: 0.1445 - val_accuracy: 0.6303 - val_loss: 1.7417\n",
      "Epoch 414/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9261 - loss: 0.1755 - val_accuracy: 0.6351 - val_loss: 1.7434\n",
      "Epoch 415/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9026 - loss: 0.2108 - val_accuracy: 0.6114 - val_loss: 1.6591\n",
      "Epoch 416/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9161 - loss: 0.1838 - val_accuracy: 0.6445 - val_loss: 1.6866\n",
      "Epoch 417/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9303 - loss: 0.1542 - val_accuracy: 0.6351 - val_loss: 1.7153\n",
      "Epoch 418/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9175 - loss: 0.1893 - val_accuracy: 0.6351 - val_loss: 1.6327\n",
      "Epoch 419/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9417 - loss: 0.1300 - val_accuracy: 0.6161 - val_loss: 1.6975\n",
      "Epoch 420/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9444 - loss: 0.1416 - val_accuracy: 0.6351 - val_loss: 1.6832\n",
      "Epoch 421/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9372 - loss: 0.1297 - val_accuracy: 0.6303 - val_loss: 1.8200\n",
      "Epoch 422/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9340 - loss: 0.1709 - val_accuracy: 0.6351 - val_loss: 1.9806\n",
      "Epoch 423/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9365 - loss: 0.1785 - val_accuracy: 0.6256 - val_loss: 1.8458\n",
      "Epoch 424/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9421 - loss: 0.1425 - val_accuracy: 0.6256 - val_loss: 1.7076\n",
      "Epoch 425/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9021 - loss: 0.2018 - val_accuracy: 0.5972 - val_loss: 1.7463\n",
      "Epoch 426/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9326 - loss: 0.1620 - val_accuracy: 0.6445 - val_loss: 1.7823\n",
      "Epoch 427/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9461 - loss: 0.1343 - val_accuracy: 0.6303 - val_loss: 1.7642\n",
      "Epoch 428/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9495 - loss: 0.1193 - val_accuracy: 0.6303 - val_loss: 1.8514\n",
      "Epoch 429/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9304 - loss: 0.1582 - val_accuracy: 0.6209 - val_loss: 1.7533\n",
      "Epoch 430/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9381 - loss: 0.1320 - val_accuracy: 0.6114 - val_loss: 1.8461\n",
      "Epoch 431/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9407 - loss: 0.1384 - val_accuracy: 0.6351 - val_loss: 1.8262\n",
      "Epoch 432/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9263 - loss: 0.1562 - val_accuracy: 0.6256 - val_loss: 1.8476\n",
      "Epoch 433/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9339 - loss: 0.1374 - val_accuracy: 0.6303 - val_loss: 1.8816\n",
      "Epoch 434/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9179 - loss: 0.1692 - val_accuracy: 0.6398 - val_loss: 1.7696\n",
      "Epoch 435/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9293 - loss: 0.1689 - val_accuracy: 0.6161 - val_loss: 1.9834\n",
      "Epoch 436/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8557 - loss: 0.4168 - val_accuracy: 0.6209 - val_loss: 1.2991\n",
      "Epoch 437/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8968 - loss: 0.2881 - val_accuracy: 0.6209 - val_loss: 1.9901\n",
      "Epoch 438/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8651 - loss: 0.3666 - val_accuracy: 0.6066 - val_loss: 1.7995\n",
      "Epoch 439/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8685 - loss: 0.3157 - val_accuracy: 0.6066 - val_loss: 1.8916\n",
      "Epoch 440/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9439 - loss: 0.1934 - val_accuracy: 0.6445 - val_loss: 2.0430\n",
      "Epoch 441/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8935 - loss: 0.2187 - val_accuracy: 0.6351 - val_loss: 1.8338\n",
      "Epoch 442/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9282 - loss: 0.1477 - val_accuracy: 0.6398 - val_loss: 1.7633\n",
      "Epoch 443/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9408 - loss: 0.1462 - val_accuracy: 0.6161 - val_loss: 2.1224\n",
      "Epoch 444/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9215 - loss: 0.1712 - val_accuracy: 0.6398 - val_loss: 1.9365\n",
      "Epoch 445/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9366 - loss: 0.1398 - val_accuracy: 0.6209 - val_loss: 1.9349\n",
      "Epoch 446/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9480 - loss: 0.1158 - val_accuracy: 0.6398 - val_loss: 1.8947\n",
      "Epoch 447/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9469 - loss: 0.1254 - val_accuracy: 0.6398 - val_loss: 1.9105\n",
      "Epoch 448/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9526 - loss: 0.1050 - val_accuracy: 0.6209 - val_loss: 2.1527\n",
      "Epoch 449/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9374 - loss: 0.1444 - val_accuracy: 0.6445 - val_loss: 2.0149\n",
      "Epoch 450/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9016 - loss: 0.2250 - val_accuracy: 0.6540 - val_loss: 1.9633\n",
      "Epoch 451/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9299 - loss: 0.1803 - val_accuracy: 0.6303 - val_loss: 1.7406\n",
      "Epoch 452/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9401 - loss: 0.1576 - val_accuracy: 0.6351 - val_loss: 1.8293\n",
      "Epoch 453/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9300 - loss: 0.1646 - val_accuracy: 0.6351 - val_loss: 1.8095\n",
      "Epoch 454/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9362 - loss: 0.1353 - val_accuracy: 0.6398 - val_loss: 1.8056\n",
      "Epoch 455/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9271 - loss: 0.1716 - val_accuracy: 0.6209 - val_loss: 2.0268\n",
      "Epoch 456/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8989 - loss: 0.2408 - val_accuracy: 0.6161 - val_loss: 1.7344\n",
      "Epoch 457/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9328 - loss: 0.1537 - val_accuracy: 0.6445 - val_loss: 1.8932\n",
      "Epoch 458/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9103 - loss: 0.1926 - val_accuracy: 0.6114 - val_loss: 1.8818\n",
      "Epoch 459/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9265 - loss: 0.1548 - val_accuracy: 0.6303 - val_loss: 1.7704\n",
      "Epoch 460/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9318 - loss: 0.1463 - val_accuracy: 0.6303 - val_loss: 1.8335\n",
      "Epoch 461/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9499 - loss: 0.1129 - val_accuracy: 0.6398 - val_loss: 1.8984\n",
      "Epoch 462/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9460 - loss: 0.1265 - val_accuracy: 0.6256 - val_loss: 1.9009\n",
      "Epoch 463/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8844 - loss: 0.4102 - val_accuracy: 0.5877 - val_loss: 1.8129\n",
      "Epoch 464/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8355 - loss: 0.6325 - val_accuracy: 0.6161 - val_loss: 1.7801\n",
      "Epoch 465/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9162 - loss: 0.2082 - val_accuracy: 0.6493 - val_loss: 2.1806\n",
      "Epoch 466/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9088 - loss: 0.2707 - val_accuracy: 0.6114 - val_loss: 1.8501\n",
      "Epoch 467/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8936 - loss: 0.2264 - val_accuracy: 0.6161 - val_loss: 1.7768\n",
      "Epoch 468/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9269 - loss: 0.1813 - val_accuracy: 0.6161 - val_loss: 1.8622\n",
      "Epoch 469/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9432 - loss: 0.1608 - val_accuracy: 0.5972 - val_loss: 1.7562\n",
      "Epoch 470/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8821 - loss: 0.3096 - val_accuracy: 0.6256 - val_loss: 1.5014\n",
      "Epoch 471/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8765 - loss: 0.2767 - val_accuracy: 0.6445 - val_loss: 2.2515\n",
      "Epoch 472/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8811 - loss: 0.2632 - val_accuracy: 0.6351 - val_loss: 1.7813\n",
      "Epoch 473/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9347 - loss: 0.1751 - val_accuracy: 0.6351 - val_loss: 1.9392\n",
      "Epoch 474/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9438 - loss: 0.1502 - val_accuracy: 0.6161 - val_loss: 1.9375\n",
      "Epoch 475/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9398 - loss: 0.1328 - val_accuracy: 0.6351 - val_loss: 2.0952\n",
      "Epoch 476/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9319 - loss: 0.1526 - val_accuracy: 0.6209 - val_loss: 1.8826\n",
      "Epoch 477/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9325 - loss: 0.1456 - val_accuracy: 0.6161 - val_loss: 1.9586\n",
      "Epoch 478/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9351 - loss: 0.1538 - val_accuracy: 0.6351 - val_loss: 2.0974\n",
      "Epoch 479/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9475 - loss: 0.1410 - val_accuracy: 0.6256 - val_loss: 2.0295\n",
      "Epoch 480/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9481 - loss: 0.1351 - val_accuracy: 0.6351 - val_loss: 1.9101\n",
      "Epoch 481/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9383 - loss: 0.1345 - val_accuracy: 0.6161 - val_loss: 1.9995\n",
      "Epoch 482/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9306 - loss: 0.1944 - val_accuracy: 0.6161 - val_loss: 2.0232\n",
      "Epoch 483/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9178 - loss: 0.1998 - val_accuracy: 0.6066 - val_loss: 1.8726\n",
      "Epoch 484/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9295 - loss: 0.1755 - val_accuracy: 0.5924 - val_loss: 1.9561\n",
      "Epoch 485/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9554 - loss: 0.1298 - val_accuracy: 0.6161 - val_loss: 2.0071\n",
      "Epoch 486/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9465 - loss: 0.1370 - val_accuracy: 0.6256 - val_loss: 1.8181\n",
      "Epoch 487/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9273 - loss: 0.1495 - val_accuracy: 0.6445 - val_loss: 1.8617\n",
      "Epoch 488/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9334 - loss: 0.1662 - val_accuracy: 0.6161 - val_loss: 1.8914\n",
      "Epoch 489/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9269 - loss: 0.1592 - val_accuracy: 0.6398 - val_loss: 1.8251\n",
      "Epoch 490/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9450 - loss: 0.1376 - val_accuracy: 0.6540 - val_loss: 1.9158\n",
      "Epoch 491/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9240 - loss: 0.1770 - val_accuracy: 0.6256 - val_loss: 1.8644\n",
      "Epoch 492/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9169 - loss: 0.2128 - val_accuracy: 0.6256 - val_loss: 1.9251\n",
      "Epoch 493/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9387 - loss: 0.1405 - val_accuracy: 0.6303 - val_loss: 2.1055\n",
      "Epoch 494/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9027 - loss: 0.1974 - val_accuracy: 0.6256 - val_loss: 1.9617\n",
      "Epoch 495/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9278 - loss: 0.1364 - val_accuracy: 0.6445 - val_loss: 1.8538\n",
      "Epoch 496/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9584 - loss: 0.1121 - val_accuracy: 0.6303 - val_loss: 1.9390\n",
      "Epoch 497/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9113 - loss: 0.1915 - val_accuracy: 0.6351 - val_loss: 1.8758\n",
      "Epoch 498/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8976 - loss: 0.2204 - val_accuracy: 0.6256 - val_loss: 2.3063\n",
      "Epoch 499/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8580 - loss: 0.3172 - val_accuracy: 0.6445 - val_loss: 2.0599\n",
      "Epoch 500/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8820 - loss: 0.2790 - val_accuracy: 0.6256 - val_loss: 1.7598\n",
      "Epoch 501/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9443 - loss: 0.1306 - val_accuracy: 0.6161 - val_loss: 1.6678\n",
      "Epoch 502/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9412 - loss: 0.1929 - val_accuracy: 0.6161 - val_loss: 1.8609\n",
      "Epoch 503/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9070 - loss: 0.2517 - val_accuracy: 0.6019 - val_loss: 1.8796\n",
      "Epoch 504/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9471 - loss: 0.1298 - val_accuracy: 0.6588 - val_loss: 2.3328\n",
      "Epoch 505/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9167 - loss: 0.1722 - val_accuracy: 0.5972 - val_loss: 2.0006\n",
      "Epoch 506/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9139 - loss: 0.1799 - val_accuracy: 0.6209 - val_loss: 2.1557\n",
      "Epoch 507/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9436 - loss: 0.1344 - val_accuracy: 0.6209 - val_loss: 2.0715\n",
      "Epoch 508/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9495 - loss: 0.1146 - val_accuracy: 0.6209 - val_loss: 2.1393\n",
      "Epoch 509/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9520 - loss: 0.1079 - val_accuracy: 0.6351 - val_loss: 2.0123\n",
      "Epoch 510/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9659 - loss: 0.0963 - val_accuracy: 0.6209 - val_loss: 2.1698\n",
      "Epoch 511/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9535 - loss: 0.1270 - val_accuracy: 0.6351 - val_loss: 2.0188\n",
      "Epoch 512/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9380 - loss: 0.1552 - val_accuracy: 0.6398 - val_loss: 2.2358\n",
      "Epoch 513/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8167 - loss: 0.5150 - val_accuracy: 0.6256 - val_loss: 1.9197\n",
      "Epoch 514/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.7939 - loss: 0.7555 - val_accuracy: 0.6019 - val_loss: 1.7616\n",
      "Epoch 515/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9115 - loss: 0.2114 - val_accuracy: 0.6066 - val_loss: 1.9610\n",
      "Epoch 516/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9532 - loss: 0.1270 - val_accuracy: 0.6351 - val_loss: 1.8471\n",
      "Epoch 517/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9672 - loss: 0.1081 - val_accuracy: 0.6493 - val_loss: 1.9056\n",
      "Epoch 518/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9409 - loss: 0.1285 - val_accuracy: 0.6351 - val_loss: 2.0277\n",
      "Epoch 519/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9520 - loss: 0.1061 - val_accuracy: 0.6209 - val_loss: 1.9084\n",
      "Epoch 520/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9575 - loss: 0.1126 - val_accuracy: 0.6351 - val_loss: 1.9455\n",
      "Epoch 521/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8959 - loss: 0.2491 - val_accuracy: 0.6256 - val_loss: 1.9015\n",
      "Epoch 522/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9444 - loss: 0.1200 - val_accuracy: 0.6066 - val_loss: 2.1214\n",
      "Epoch 523/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9663 - loss: 0.1107 - val_accuracy: 0.6209 - val_loss: 1.9579\n",
      "Epoch 524/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9597 - loss: 0.1345 - val_accuracy: 0.6161 - val_loss: 1.9182\n",
      "Epoch 525/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9433 - loss: 0.1318 - val_accuracy: 0.6303 - val_loss: 2.0043\n",
      "Epoch 526/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9358 - loss: 0.1383 - val_accuracy: 0.6209 - val_loss: 2.2335\n",
      "Epoch 527/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9350 - loss: 0.1713 - val_accuracy: 0.6114 - val_loss: 2.0131\n",
      "Epoch 528/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8803 - loss: 0.3489 - val_accuracy: 0.6114 - val_loss: 1.9236\n",
      "Epoch 529/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8592 - loss: 0.3950 - val_accuracy: 0.6445 - val_loss: 1.8361\n",
      "Epoch 530/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9286 - loss: 0.1515 - val_accuracy: 0.6209 - val_loss: 1.9260\n",
      "Epoch 531/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9617 - loss: 0.1125 - val_accuracy: 0.6303 - val_loss: 1.8765\n",
      "Epoch 532/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9718 - loss: 0.0940 - val_accuracy: 0.6209 - val_loss: 2.0222\n",
      "Epoch 533/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9526 - loss: 0.1100 - val_accuracy: 0.6114 - val_loss: 2.0585\n",
      "Epoch 534/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9560 - loss: 0.1057 - val_accuracy: 0.6351 - val_loss: 2.0027\n",
      "Epoch 535/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9737 - loss: 0.0801 - val_accuracy: 0.6256 - val_loss: 2.0717\n",
      "Epoch 536/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9592 - loss: 0.0895 - val_accuracy: 0.6303 - val_loss: 2.0330\n",
      "Epoch 537/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9755 - loss: 0.0889 - val_accuracy: 0.6256 - val_loss: 2.0929\n",
      "Epoch 538/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9735 - loss: 0.0786 - val_accuracy: 0.6256 - val_loss: 2.1447\n",
      "Epoch 539/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9558 - loss: 0.1010 - val_accuracy: 0.6351 - val_loss: 2.1259\n",
      "Epoch 540/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9680 - loss: 0.0899 - val_accuracy: 0.6256 - val_loss: 2.0285\n",
      "Epoch 541/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9667 - loss: 0.0872 - val_accuracy: 0.6351 - val_loss: 2.0433\n",
      "Epoch 542/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9631 - loss: 0.0858 - val_accuracy: 0.6161 - val_loss: 2.1499\n",
      "Epoch 543/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9621 - loss: 0.0888 - val_accuracy: 0.6303 - val_loss: 2.0867\n",
      "Epoch 544/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9626 - loss: 0.0948 - val_accuracy: 0.6445 - val_loss: 2.2410\n",
      "Epoch 545/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9131 - loss: 0.2023 - val_accuracy: 0.6588 - val_loss: 2.2584\n",
      "Epoch 546/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8786 - loss: 0.3082 - val_accuracy: 0.6493 - val_loss: 2.3057\n",
      "Epoch 547/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9226 - loss: 0.1763 - val_accuracy: 0.6066 - val_loss: 2.1375\n",
      "Epoch 548/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8865 - loss: 0.2656 - val_accuracy: 0.6493 - val_loss: 2.2493\n",
      "Epoch 549/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8142 - loss: 0.8054 - val_accuracy: 0.6256 - val_loss: 1.9557\n",
      "Epoch 550/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9248 - loss: 0.2157 - val_accuracy: 0.6398 - val_loss: 1.9608\n",
      "Epoch 551/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9614 - loss: 0.1149 - val_accuracy: 0.6256 - val_loss: 2.0302\n",
      "Epoch 552/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9510 - loss: 0.1386 - val_accuracy: 0.6303 - val_loss: 2.1771\n",
      "Epoch 553/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9465 - loss: 0.1302 - val_accuracy: 0.6256 - val_loss: 1.9371\n",
      "Epoch 554/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9685 - loss: 0.1013 - val_accuracy: 0.6588 - val_loss: 2.1241\n",
      "Epoch 555/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9648 - loss: 0.0909 - val_accuracy: 0.6445 - val_loss: 2.1638\n",
      "Epoch 556/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9644 - loss: 0.1022 - val_accuracy: 0.6256 - val_loss: 2.0165\n",
      "Epoch 557/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9484 - loss: 0.1185 - val_accuracy: 0.6493 - val_loss: 1.9886\n",
      "Epoch 558/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9233 - loss: 0.1622 - val_accuracy: 0.6493 - val_loss: 2.2013\n",
      "Epoch 559/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9545 - loss: 0.1109 - val_accuracy: 0.6209 - val_loss: 2.2114\n",
      "Epoch 560/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9677 - loss: 0.0869 - val_accuracy: 0.6398 - val_loss: 2.1489\n",
      "Epoch 561/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9696 - loss: 0.0866 - val_accuracy: 0.6445 - val_loss: 2.1609\n",
      "Epoch 562/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9402 - loss: 0.1347 - val_accuracy: 0.6777 - val_loss: 2.2006\n",
      "Epoch 563/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8737 - loss: 0.3609 - val_accuracy: 0.6161 - val_loss: 2.1059\n",
      "Epoch 564/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9240 - loss: 0.1664 - val_accuracy: 0.6398 - val_loss: 2.3236\n",
      "Epoch 565/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9519 - loss: 0.1398 - val_accuracy: 0.5877 - val_loss: 2.0546\n",
      "Epoch 566/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9730 - loss: 0.0754 - val_accuracy: 0.6114 - val_loss: 2.2840\n",
      "Epoch 567/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9689 - loss: 0.0898 - val_accuracy: 0.6303 - val_loss: 2.2668\n",
      "Epoch 568/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9715 - loss: 0.0799 - val_accuracy: 0.6161 - val_loss: 2.2924\n",
      "Epoch 569/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9695 - loss: 0.0822 - val_accuracy: 0.6540 - val_loss: 2.2232\n",
      "Epoch 570/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9345 - loss: 0.1530 - val_accuracy: 0.6256 - val_loss: 2.2330\n",
      "Epoch 571/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9566 - loss: 0.1079 - val_accuracy: 0.6161 - val_loss: 2.1688\n",
      "Epoch 572/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9477 - loss: 0.1400 - val_accuracy: 0.6256 - val_loss: 2.0886\n",
      "Epoch 573/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9719 - loss: 0.0707 - val_accuracy: 0.6493 - val_loss: 2.3357\n",
      "Epoch 574/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9616 - loss: 0.1008 - val_accuracy: 0.5972 - val_loss: 2.2151\n",
      "Epoch 575/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9597 - loss: 0.0984 - val_accuracy: 0.6351 - val_loss: 2.2793\n",
      "Epoch 576/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9630 - loss: 0.0939 - val_accuracy: 0.6256 - val_loss: 2.4065\n",
      "Epoch 577/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9658 - loss: 0.0803 - val_accuracy: 0.6114 - val_loss: 2.2994\n",
      "Epoch 578/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9755 - loss: 0.0701 - val_accuracy: 0.6398 - val_loss: 2.5268\n",
      "Epoch 579/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9383 - loss: 0.1485 - val_accuracy: 0.6114 - val_loss: 2.2388\n",
      "Epoch 580/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9381 - loss: 0.1158 - val_accuracy: 0.6303 - val_loss: 2.3545\n",
      "Epoch 581/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9493 - loss: 0.1294 - val_accuracy: 0.6161 - val_loss: 2.4440\n",
      "Epoch 582/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9122 - loss: 0.2589 - val_accuracy: 0.6445 - val_loss: 2.5255\n",
      "Epoch 583/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9148 - loss: 0.1865 - val_accuracy: 0.6588 - val_loss: 2.6429\n",
      "Epoch 584/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8956 - loss: 0.3013 - val_accuracy: 0.6445 - val_loss: 1.9613\n",
      "Epoch 585/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8910 - loss: 0.2680 - val_accuracy: 0.6209 - val_loss: 2.4423\n",
      "Epoch 586/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9057 - loss: 0.1991 - val_accuracy: 0.6445 - val_loss: 2.2868\n",
      "Epoch 587/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9301 - loss: 0.1607 - val_accuracy: 0.6303 - val_loss: 2.3923\n",
      "Epoch 588/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9648 - loss: 0.0838 - val_accuracy: 0.6351 - val_loss: 2.1852\n",
      "Epoch 589/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9733 - loss: 0.0717 - val_accuracy: 0.6161 - val_loss: 2.2741\n",
      "Epoch 590/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9308 - loss: 0.1455 - val_accuracy: 0.6256 - val_loss: 2.6100\n",
      "Epoch 591/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9670 - loss: 0.0808 - val_accuracy: 0.6682 - val_loss: 2.3610\n",
      "Epoch 592/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9616 - loss: 0.0814 - val_accuracy: 0.6161 - val_loss: 2.4547\n",
      "Epoch 593/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9637 - loss: 0.0793 - val_accuracy: 0.6161 - val_loss: 2.3924\n",
      "Epoch 594/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9657 - loss: 0.0820 - val_accuracy: 0.6114 - val_loss: 2.4340\n",
      "Epoch 595/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9513 - loss: 0.1120 - val_accuracy: 0.6256 - val_loss: 2.3406\n",
      "Epoch 596/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9686 - loss: 0.0952 - val_accuracy: 0.6303 - val_loss: 2.2739\n",
      "Epoch 597/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9721 - loss: 0.0874 - val_accuracy: 0.6256 - val_loss: 2.3424\n",
      "Epoch 598/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9675 - loss: 0.0972 - val_accuracy: 0.6398 - val_loss: 2.2898\n",
      "Epoch 599/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9450 - loss: 0.1394 - val_accuracy: 0.6114 - val_loss: 2.3472\n",
      "Epoch 600/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9527 - loss: 0.1108 - val_accuracy: 0.6161 - val_loss: 2.5123\n",
      "Epoch 601/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9593 - loss: 0.0912 - val_accuracy: 0.6161 - val_loss: 2.4065\n",
      "Epoch 602/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9483 - loss: 0.0974 - val_accuracy: 0.6256 - val_loss: 2.3908\n",
      "Epoch 603/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9649 - loss: 0.1221 - val_accuracy: 0.6256 - val_loss: 2.4462\n",
      "Epoch 604/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9481 - loss: 0.1173 - val_accuracy: 0.6161 - val_loss: 2.6465\n",
      "Epoch 605/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9447 - loss: 0.1450 - val_accuracy: 0.6303 - val_loss: 2.5228\n",
      "Epoch 606/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8844 - loss: 0.4131 - val_accuracy: 0.6256 - val_loss: 2.4867\n",
      "Epoch 607/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9522 - loss: 0.1322 - val_accuracy: 0.6161 - val_loss: 2.1762\n",
      "Epoch 608/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9615 - loss: 0.0939 - val_accuracy: 0.6256 - val_loss: 2.3127\n",
      "Epoch 609/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9728 - loss: 0.0731 - val_accuracy: 0.6256 - val_loss: 2.3821\n",
      "Epoch 610/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9760 - loss: 0.0709 - val_accuracy: 0.6303 - val_loss: 2.3812\n",
      "Epoch 611/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9642 - loss: 0.0842 - val_accuracy: 0.6161 - val_loss: 2.5028\n",
      "Epoch 612/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9561 - loss: 0.0897 - val_accuracy: 0.6303 - val_loss: 2.4960\n",
      "Epoch 613/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9450 - loss: 0.1470 - val_accuracy: 0.6256 - val_loss: 2.4718\n",
      "Epoch 614/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9175 - loss: 0.1888 - val_accuracy: 0.6114 - val_loss: 2.6533\n",
      "Epoch 615/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9011 - loss: 0.2338 - val_accuracy: 0.6445 - val_loss: 2.3953\n",
      "Epoch 616/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9211 - loss: 0.1943 - val_accuracy: 0.6019 - val_loss: 2.3045\n",
      "Epoch 617/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9463 - loss: 0.1274 - val_accuracy: 0.6256 - val_loss: 2.4815\n",
      "Epoch 618/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9157 - loss: 0.2096 - val_accuracy: 0.6114 - val_loss: 2.4570\n",
      "Epoch 619/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9661 - loss: 0.0863 - val_accuracy: 0.6161 - val_loss: 2.4988\n",
      "Epoch 620/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9452 - loss: 0.1153 - val_accuracy: 0.6209 - val_loss: 2.4696\n",
      "Epoch 621/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9658 - loss: 0.0757 - val_accuracy: 0.6256 - val_loss: 2.4945\n",
      "Epoch 622/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9743 - loss: 0.0632 - val_accuracy: 0.6351 - val_loss: 2.5140\n",
      "Epoch 623/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9804 - loss: 0.0692 - val_accuracy: 0.6161 - val_loss: 2.5232\n",
      "Epoch 624/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9794 - loss: 0.0514 - val_accuracy: 0.6256 - val_loss: 2.6017\n",
      "Epoch 625/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9153 - loss: 0.1678 - val_accuracy: 0.6019 - val_loss: 2.3207\n",
      "Epoch 626/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8910 - loss: 0.2750 - val_accuracy: 0.6256 - val_loss: 2.2683\n",
      "Epoch 627/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9459 - loss: 0.1291 - val_accuracy: 0.6256 - val_loss: 2.5337\n",
      "Epoch 628/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9717 - loss: 0.0787 - val_accuracy: 0.6161 - val_loss: 2.5848\n",
      "Epoch 629/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9748 - loss: 0.0659 - val_accuracy: 0.6303 - val_loss: 2.6734\n",
      "Epoch 630/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9800 - loss: 0.0598 - val_accuracy: 0.6398 - val_loss: 2.5831\n",
      "Epoch 631/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9687 - loss: 0.0744 - val_accuracy: 0.6256 - val_loss: 2.5865\n",
      "Epoch 632/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9716 - loss: 0.0600 - val_accuracy: 0.6445 - val_loss: 2.5985\n",
      "Epoch 633/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9778 - loss: 0.0551 - val_accuracy: 0.6493 - val_loss: 2.5816\n",
      "Epoch 634/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9779 - loss: 0.0636 - val_accuracy: 0.6209 - val_loss: 2.6451\n",
      "Epoch 635/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9331 - loss: 0.1503 - val_accuracy: 0.6161 - val_loss: 2.6769\n",
      "Epoch 636/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.8476 - loss: 0.5110 - val_accuracy: 0.6493 - val_loss: 1.9437\n",
      "Epoch 637/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9085 - loss: 0.3127 - val_accuracy: 0.6256 - val_loss: 2.3931\n",
      "Epoch 638/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9555 - loss: 0.1081 - val_accuracy: 0.6256 - val_loss: 2.3381\n",
      "Epoch 639/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9752 - loss: 0.0682 - val_accuracy: 0.6303 - val_loss: 2.3971\n",
      "Epoch 640/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9853 - loss: 0.0653 - val_accuracy: 0.6303 - val_loss: 2.4700\n",
      "Epoch 641/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9667 - loss: 0.0689 - val_accuracy: 0.6209 - val_loss: 2.5614\n",
      "Epoch 642/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9624 - loss: 0.0846 - val_accuracy: 0.6303 - val_loss: 2.5851\n",
      "Epoch 643/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9526 - loss: 0.0925 - val_accuracy: 0.6303 - val_loss: 2.6622\n",
      "Epoch 644/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9712 - loss: 0.0651 - val_accuracy: 0.6256 - val_loss: 2.6835\n",
      "Epoch 645/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9313 - loss: 0.1746 - val_accuracy: 0.6351 - val_loss: 2.6958\n",
      "Epoch 646/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9366 - loss: 0.1646 - val_accuracy: 0.6303 - val_loss: 2.4626\n",
      "Epoch 647/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9397 - loss: 0.2122 - val_accuracy: 0.6256 - val_loss: 2.7244\n",
      "Epoch 648/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9080 - loss: 0.1979 - val_accuracy: 0.6066 - val_loss: 2.7328\n",
      "Epoch 649/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9423 - loss: 0.1433 - val_accuracy: 0.6209 - val_loss: 2.3566\n",
      "Epoch 650/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9716 - loss: 0.0720 - val_accuracy: 0.6209 - val_loss: 2.6272\n",
      "Epoch 651/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9711 - loss: 0.0631 - val_accuracy: 0.6114 - val_loss: 2.6830\n",
      "Epoch 652/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9569 - loss: 0.1087 - val_accuracy: 0.6066 - val_loss: 2.5168\n",
      "Epoch 653/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9495 - loss: 0.0972 - val_accuracy: 0.6114 - val_loss: 2.5532\n",
      "Epoch 654/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9656 - loss: 0.0716 - val_accuracy: 0.6209 - val_loss: 2.6184\n",
      "Epoch 655/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9765 - loss: 0.0510 - val_accuracy: 0.6161 - val_loss: 2.6537\n",
      "Epoch 656/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9818 - loss: 0.0514 - val_accuracy: 0.6161 - val_loss: 2.7991\n",
      "Epoch 657/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9465 - loss: 0.1205 - val_accuracy: 0.6256 - val_loss: 2.4753\n",
      "Epoch 658/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9336 - loss: 0.1844 - val_accuracy: 0.6493 - val_loss: 2.4657\n",
      "Epoch 659/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9342 - loss: 0.1225 - val_accuracy: 0.6114 - val_loss: 2.7195\n",
      "Epoch 660/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9451 - loss: 0.0993 - val_accuracy: 0.6209 - val_loss: 2.6186\n",
      "Epoch 661/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9629 - loss: 0.0726 - val_accuracy: 0.6161 - val_loss: 2.5275\n",
      "Epoch 662/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9728 - loss: 0.0626 - val_accuracy: 0.6161 - val_loss: 2.6064\n",
      "Epoch 663/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9805 - loss: 0.0485 - val_accuracy: 0.6209 - val_loss: 2.7262\n",
      "Epoch 664/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9740 - loss: 0.0524 - val_accuracy: 0.6209 - val_loss: 2.5732\n",
      "Epoch 665/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9385 - loss: 0.1102 - val_accuracy: 0.6351 - val_loss: 2.7264\n",
      "Epoch 666/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9305 - loss: 0.1531 - val_accuracy: 0.5972 - val_loss: 2.3233\n",
      "Epoch 667/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9356 - loss: 0.1669 - val_accuracy: 0.6209 - val_loss: 2.5816\n",
      "Epoch 668/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9486 - loss: 0.1094 - val_accuracy: 0.6256 - val_loss: 2.6366\n",
      "Epoch 669/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9738 - loss: 0.0673 - val_accuracy: 0.6303 - val_loss: 2.4810\n",
      "Epoch 670/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9778 - loss: 0.0589 - val_accuracy: 0.6303 - val_loss: 2.4453\n",
      "Epoch 671/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9741 - loss: 0.0646 - val_accuracy: 0.6114 - val_loss: 2.6134\n",
      "Epoch 672/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9844 - loss: 0.0638 - val_accuracy: 0.6303 - val_loss: 2.6464\n",
      "Epoch 673/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9712 - loss: 0.0706 - val_accuracy: 0.6351 - val_loss: 2.6381\n",
      "Epoch 674/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9541 - loss: 0.0947 - val_accuracy: 0.6161 - val_loss: 2.7951\n",
      "Epoch 675/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9215 - loss: 0.1538 - val_accuracy: 0.6588 - val_loss: 2.6403\n",
      "Epoch 676/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8905 - loss: 0.3062 - val_accuracy: 0.6161 - val_loss: 2.5127\n",
      "Epoch 677/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9264 - loss: 0.1936 - val_accuracy: 0.6209 - val_loss: 2.3179\n",
      "Epoch 678/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9148 - loss: 0.2692 - val_accuracy: 0.6066 - val_loss: 2.7521\n",
      "Epoch 679/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9582 - loss: 0.0870 - val_accuracy: 0.6209 - val_loss: 2.5672\n",
      "Epoch 680/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9635 - loss: 0.0720 - val_accuracy: 0.6351 - val_loss: 2.7581\n",
      "Epoch 681/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9767 - loss: 0.0604 - val_accuracy: 0.6398 - val_loss: 2.8207\n",
      "Epoch 682/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9386 - loss: 0.1462 - val_accuracy: 0.6398 - val_loss: 2.7547\n",
      "Epoch 683/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9418 - loss: 0.1733 - val_accuracy: 0.6398 - val_loss: 2.9037\n",
      "Epoch 684/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9419 - loss: 0.1066 - val_accuracy: 0.6351 - val_loss: 2.5140\n",
      "Epoch 685/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9635 - loss: 0.0673 - val_accuracy: 0.6445 - val_loss: 2.8442\n",
      "Epoch 686/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9715 - loss: 0.0533 - val_accuracy: 0.6303 - val_loss: 2.8797\n",
      "Epoch 687/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9607 - loss: 0.0823 - val_accuracy: 0.6351 - val_loss: 2.7831\n",
      "Epoch 688/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9806 - loss: 0.0461 - val_accuracy: 0.6398 - val_loss: 2.7940\n",
      "Epoch 689/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9805 - loss: 0.0438 - val_accuracy: 0.6303 - val_loss: 2.8273\n",
      "Epoch 690/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9797 - loss: 0.0636 - val_accuracy: 0.6114 - val_loss: 2.7228\n",
      "Epoch 691/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9411 - loss: 0.1552 - val_accuracy: 0.6493 - val_loss: 2.7890\n",
      "Epoch 692/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9307 - loss: 0.1587 - val_accuracy: 0.6256 - val_loss: 2.6007\n",
      "Epoch 693/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9586 - loss: 0.0966 - val_accuracy: 0.6209 - val_loss: 2.5301\n",
      "Epoch 694/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9625 - loss: 0.0770 - val_accuracy: 0.6588 - val_loss: 2.6817\n",
      "Epoch 695/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9575 - loss: 0.1076 - val_accuracy: 0.6256 - val_loss: 2.6766\n",
      "Epoch 696/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9657 - loss: 0.0700 - val_accuracy: 0.6398 - val_loss: 2.9156\n",
      "Epoch 697/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - accuracy: 0.9520 - loss: 0.1187 - val_accuracy: 0.6398 - val_loss: 2.6590\n",
      "Epoch 698/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9364 - loss: 0.1732 - val_accuracy: 0.6445 - val_loss: 2.7379\n",
      "Epoch 699/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9749 - loss: 0.0616 - val_accuracy: 0.6256 - val_loss: 2.8166\n",
      "Epoch 700/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9849 - loss: 0.0496 - val_accuracy: 0.6351 - val_loss: 2.8971\n",
      "Epoch 701/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9816 - loss: 0.0437 - val_accuracy: 0.6303 - val_loss: 2.9281\n",
      "Epoch 702/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9795 - loss: 0.0461 - val_accuracy: 0.6351 - val_loss: 3.0224\n",
      "Epoch 703/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9779 - loss: 0.0490 - val_accuracy: 0.6256 - val_loss: 3.0192\n",
      "Epoch 704/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9669 - loss: 0.0676 - val_accuracy: 0.6351 - val_loss: 3.1374\n",
      "Epoch 705/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9653 - loss: 0.0747 - val_accuracy: 0.6209 - val_loss: 3.1646\n",
      "Epoch 706/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9347 - loss: 0.1617 - val_accuracy: 0.6351 - val_loss: 3.0626\n",
      "Epoch 707/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8455 - loss: 0.5263 - val_accuracy: 0.6303 - val_loss: 2.5656\n",
      "Epoch 708/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8831 - loss: 0.3186 - val_accuracy: 0.6445 - val_loss: 2.0711\n",
      "Epoch 709/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9100 - loss: 0.2475 - val_accuracy: 0.6540 - val_loss: 2.7827\n",
      "Epoch 710/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9179 - loss: 0.3029 - val_accuracy: 0.6114 - val_loss: 2.3724\n",
      "Epoch 711/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9535 - loss: 0.1122 - val_accuracy: 0.6445 - val_loss: 2.6205\n",
      "Epoch 712/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9668 - loss: 0.0679 - val_accuracy: 0.6209 - val_loss: 2.4559\n",
      "Epoch 713/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9618 - loss: 0.0864 - val_accuracy: 0.6256 - val_loss: 2.6946\n",
      "Epoch 714/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9714 - loss: 0.0759 - val_accuracy: 0.6303 - val_loss: 2.5364\n",
      "Epoch 715/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9769 - loss: 0.0508 - val_accuracy: 0.6209 - val_loss: 2.6587\n",
      "Epoch 716/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9718 - loss: 0.0532 - val_accuracy: 0.6445 - val_loss: 2.6680\n",
      "Epoch 717/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9773 - loss: 0.0638 - val_accuracy: 0.6303 - val_loss: 2.7495\n",
      "Epoch 718/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9712 - loss: 0.0583 - val_accuracy: 0.6303 - val_loss: 2.7781\n",
      "Epoch 719/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9811 - loss: 0.0456 - val_accuracy: 0.6256 - val_loss: 2.6907\n",
      "Epoch 720/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9763 - loss: 0.0546 - val_accuracy: 0.6493 - val_loss: 2.6425\n",
      "Epoch 721/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9768 - loss: 0.0535 - val_accuracy: 0.6398 - val_loss: 2.7484\n",
      "Epoch 722/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9699 - loss: 0.0587 - val_accuracy: 0.6445 - val_loss: 2.7764\n",
      "Epoch 723/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9818 - loss: 0.0413 - val_accuracy: 0.6351 - val_loss: 2.8445\n",
      "Epoch 724/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9780 - loss: 0.0454 - val_accuracy: 0.6209 - val_loss: 2.8821\n",
      "Epoch 725/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9858 - loss: 0.0427 - val_accuracy: 0.6256 - val_loss: 2.7477\n",
      "Epoch 726/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9833 - loss: 0.0421 - val_accuracy: 0.6351 - val_loss: 2.7629\n",
      "Epoch 727/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9768 - loss: 0.0487 - val_accuracy: 0.6351 - val_loss: 2.8616\n",
      "Epoch 728/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9794 - loss: 0.0467 - val_accuracy: 0.6445 - val_loss: 2.8120\n",
      "Epoch 729/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9763 - loss: 0.0467 - val_accuracy: 0.6209 - val_loss: 2.9312\n",
      "Epoch 730/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9727 - loss: 0.0685 - val_accuracy: 0.6303 - val_loss: 2.8799\n",
      "Epoch 731/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9629 - loss: 0.0916 - val_accuracy: 0.6019 - val_loss: 2.5511\n",
      "Epoch 732/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8536 - loss: 0.5922 - val_accuracy: 0.6398 - val_loss: 2.8071\n",
      "Epoch 733/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8734 - loss: 0.3408 - val_accuracy: 0.6398 - val_loss: 2.3591\n",
      "Epoch 734/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8208 - loss: 0.9179 - val_accuracy: 0.6398 - val_loss: 1.9898\n",
      "Epoch 735/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9000 - loss: 0.2793 - val_accuracy: 0.6303 - val_loss: 2.1800\n",
      "Epoch 736/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8972 - loss: 0.2817 - val_accuracy: 0.5972 - val_loss: 2.1051\n",
      "Epoch 737/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9257 - loss: 0.1610 - val_accuracy: 0.6351 - val_loss: 2.3014\n",
      "Epoch 738/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9604 - loss: 0.1045 - val_accuracy: 0.6066 - val_loss: 2.3536\n",
      "Epoch 739/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9540 - loss: 0.1000 - val_accuracy: 0.6303 - val_loss: 2.5068\n",
      "Epoch 740/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9573 - loss: 0.1047 - val_accuracy: 0.6209 - val_loss: 2.3795\n",
      "Epoch 741/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9672 - loss: 0.0756 - val_accuracy: 0.6256 - val_loss: 2.5599\n",
      "Epoch 742/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9798 - loss: 0.0634 - val_accuracy: 0.6445 - val_loss: 2.5022\n",
      "Epoch 743/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9804 - loss: 0.0457 - val_accuracy: 0.6209 - val_loss: 2.5633\n",
      "Epoch 744/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9789 - loss: 0.0464 - val_accuracy: 0.6351 - val_loss: 2.5509\n",
      "Epoch 745/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9755 - loss: 0.0530 - val_accuracy: 0.6351 - val_loss: 2.6377\n",
      "Epoch 746/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9825 - loss: 0.0500 - val_accuracy: 0.6588 - val_loss: 2.6189\n",
      "Epoch 747/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9775 - loss: 0.0566 - val_accuracy: 0.6114 - val_loss: 2.7791\n",
      "Epoch 748/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9197 - loss: 0.2593 - val_accuracy: 0.6209 - val_loss: 2.3177\n",
      "Epoch 749/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9419 - loss: 0.1626 - val_accuracy: 0.6730 - val_loss: 2.4734\n",
      "Epoch 750/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9388 - loss: 0.1364 - val_accuracy: 0.6209 - val_loss: 2.2984\n",
      "Epoch 751/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9739 - loss: 0.0871 - val_accuracy: 0.6256 - val_loss: 2.4871\n",
      "Epoch 752/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.9660 - loss: 0.0619 - val_accuracy: 0.6445 - val_loss: 2.6355\n",
      "Epoch 753/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9679 - loss: 0.0603 - val_accuracy: 0.6114 - val_loss: 2.7035\n",
      "Epoch 754/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9779 - loss: 0.0491 - val_accuracy: 0.6256 - val_loss: 2.7012\n",
      "Epoch 755/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9814 - loss: 0.0512 - val_accuracy: 0.6303 - val_loss: 2.5624\n",
      "Epoch 756/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9666 - loss: 0.0621 - val_accuracy: 0.6066 - val_loss: 2.5679\n",
      "Epoch 757/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9806 - loss: 0.0436 - val_accuracy: 0.6351 - val_loss: 2.5709\n",
      "Epoch 758/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9857 - loss: 0.0384 - val_accuracy: 0.6445 - val_loss: 2.6712\n",
      "Epoch 759/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9727 - loss: 0.0632 - val_accuracy: 0.6209 - val_loss: 2.6582\n",
      "Epoch 760/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9534 - loss: 0.0885 - val_accuracy: 0.6114 - val_loss: 2.5747\n",
      "Epoch 761/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9485 - loss: 0.1320 - val_accuracy: 0.6303 - val_loss: 2.7282\n",
      "Epoch 762/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.9419 - loss: 0.1620 - val_accuracy: 0.6303 - val_loss: 2.5888\n",
      "Epoch 763/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9632 - loss: 0.0978 - val_accuracy: 0.6493 - val_loss: 2.7463\n",
      "Epoch 764/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9436 - loss: 0.1477 - val_accuracy: 0.6351 - val_loss: 2.7383\n",
      "Epoch 765/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9574 - loss: 0.1324 - val_accuracy: 0.6351 - val_loss: 2.4892\n",
      "Epoch 766/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9699 - loss: 0.0513 - val_accuracy: 0.6445 - val_loss: 2.5629\n",
      "Epoch 767/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9792 - loss: 0.0518 - val_accuracy: 0.6351 - val_loss: 2.6026\n",
      "Epoch 768/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9759 - loss: 0.0555 - val_accuracy: 0.6445 - val_loss: 2.7219\n",
      "Epoch 769/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9692 - loss: 0.0658 - val_accuracy: 0.6303 - val_loss: 2.7282\n",
      "Epoch 770/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9768 - loss: 0.0515 - val_accuracy: 0.6351 - val_loss: 2.6379\n",
      "Epoch 771/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9543 - loss: 0.0807 - val_accuracy: 0.6351 - val_loss: 2.8267\n",
      "Epoch 772/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9772 - loss: 0.0503 - val_accuracy: 0.6445 - val_loss: 2.7236\n",
      "Epoch 773/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9803 - loss: 0.0708 - val_accuracy: 0.6303 - val_loss: 2.8308\n",
      "Epoch 774/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8488 - loss: 0.4023 - val_accuracy: 0.6303 - val_loss: 2.2240\n",
      "Epoch 775/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9254 - loss: 0.1493 - val_accuracy: 0.6256 - val_loss: 2.7990\n",
      "Epoch 776/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9630 - loss: 0.0797 - val_accuracy: 0.6161 - val_loss: 2.7505\n",
      "Epoch 777/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9431 - loss: 0.1286 - val_accuracy: 0.6161 - val_loss: 2.8710\n",
      "Epoch 778/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9206 - loss: 0.2300 - val_accuracy: 0.6161 - val_loss: 2.4366\n",
      "Epoch 779/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9772 - loss: 0.0603 - val_accuracy: 0.6540 - val_loss: 2.4598\n",
      "Epoch 780/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9070 - loss: 0.1865 - val_accuracy: 0.6588 - val_loss: 2.7894\n",
      "Epoch 781/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9445 - loss: 0.1446 - val_accuracy: 0.6019 - val_loss: 2.6263\n",
      "Epoch 782/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9706 - loss: 0.0776 - val_accuracy: 0.6256 - val_loss: 2.7314\n",
      "Epoch 783/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9784 - loss: 0.0692 - val_accuracy: 0.6540 - val_loss: 2.5555\n",
      "Epoch 784/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9698 - loss: 0.0665 - val_accuracy: 0.6256 - val_loss: 2.7111\n",
      "Epoch 785/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9635 - loss: 0.0799 - val_accuracy: 0.6445 - val_loss: 2.7426\n",
      "Epoch 786/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9594 - loss: 0.1017 - val_accuracy: 0.6493 - val_loss: 2.8784\n",
      "Epoch 787/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9748 - loss: 0.0479 - val_accuracy: 0.6493 - val_loss: 2.8160\n",
      "Epoch 788/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - accuracy: 0.9727 - loss: 0.0528 - val_accuracy: 0.6161 - val_loss: 2.9671\n",
      "Epoch 789/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - accuracy: 0.9721 - loss: 0.0556 - val_accuracy: 0.6493 - val_loss: 2.8652\n",
      "Epoch 790/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9829 - loss: 0.0415 - val_accuracy: 0.6303 - val_loss: 2.8537\n",
      "Epoch 791/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9837 - loss: 0.0405 - val_accuracy: 0.6256 - val_loss: 2.9222\n",
      "Epoch 792/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9816 - loss: 0.0441 - val_accuracy: 0.6351 - val_loss: 3.0585\n",
      "Epoch 793/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9638 - loss: 0.0780 - val_accuracy: 0.6066 - val_loss: 2.8479\n",
      "Epoch 794/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9071 - loss: 0.2335 - val_accuracy: 0.6445 - val_loss: 3.0679\n",
      "Epoch 795/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9451 - loss: 0.1169 - val_accuracy: 0.6209 - val_loss: 2.6845\n",
      "Epoch 796/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9155 - loss: 0.2106 - val_accuracy: 0.6682 - val_loss: 2.6605\n",
      "Epoch 797/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9376 - loss: 0.2010 - val_accuracy: 0.6161 - val_loss: 2.7362\n",
      "Epoch 798/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.8756 - loss: 0.4221 - val_accuracy: 0.6540 - val_loss: 2.3248\n",
      "Epoch 799/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9378 - loss: 0.2518 - val_accuracy: 0.6398 - val_loss: 2.6134\n",
      "Epoch 800/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9721 - loss: 0.0736 - val_accuracy: 0.6351 - val_loss: 2.6113\n",
      "Epoch 801/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9788 - loss: 0.0487 - val_accuracy: 0.6209 - val_loss: 2.6635\n",
      "Epoch 802/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9654 - loss: 0.0573 - val_accuracy: 0.6493 - val_loss: 2.6961\n",
      "Epoch 803/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9656 - loss: 0.0778 - val_accuracy: 0.6493 - val_loss: 2.7264\n",
      "Epoch 804/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9828 - loss: 0.0387 - val_accuracy: 0.6445 - val_loss: 2.7212\n",
      "Epoch 805/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9719 - loss: 0.0460 - val_accuracy: 0.6540 - val_loss: 2.8187\n",
      "Epoch 806/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9755 - loss: 0.0514 - val_accuracy: 0.6351 - val_loss: 2.8244\n",
      "Epoch 807/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9789 - loss: 0.0514 - val_accuracy: 0.6445 - val_loss: 2.8835\n",
      "Epoch 808/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9735 - loss: 0.0558 - val_accuracy: 0.6351 - val_loss: 2.7819\n",
      "Epoch 809/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9791 - loss: 0.0415 - val_accuracy: 0.6256 - val_loss: 2.8653\n",
      "Epoch 810/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9757 - loss: 0.0397 - val_accuracy: 0.6351 - val_loss: 2.8823\n",
      "Epoch 811/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9592 - loss: 0.0791 - val_accuracy: 0.6540 - val_loss: 3.0308\n",
      "Epoch 812/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9592 - loss: 0.0955 - val_accuracy: 0.6209 - val_loss: 3.0679\n",
      "Epoch 813/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9748 - loss: 0.0527 - val_accuracy: 0.6351 - val_loss: 2.9678\n",
      "Epoch 814/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9809 - loss: 0.0402 - val_accuracy: 0.6351 - val_loss: 2.9087\n",
      "Epoch 815/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9499 - loss: 0.1037 - val_accuracy: 0.6161 - val_loss: 2.7844\n",
      "Epoch 816/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9403 - loss: 0.1390 - val_accuracy: 0.6256 - val_loss: 2.9127\n",
      "Epoch 817/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9193 - loss: 0.2542 - val_accuracy: 0.6493 - val_loss: 2.7209\n",
      "Epoch 818/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9378 - loss: 0.2072 - val_accuracy: 0.6114 - val_loss: 2.9132\n",
      "Epoch 819/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9552 - loss: 0.1098 - val_accuracy: 0.6256 - val_loss: 2.5411\n",
      "Epoch 820/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9679 - loss: 0.0605 - val_accuracy: 0.6445 - val_loss: 2.7942\n",
      "Epoch 821/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9678 - loss: 0.0652 - val_accuracy: 0.6445 - val_loss: 2.7522\n",
      "Epoch 822/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9729 - loss: 0.0476 - val_accuracy: 0.6398 - val_loss: 2.7147\n",
      "Epoch 823/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9801 - loss: 0.0465 - val_accuracy: 0.6351 - val_loss: 2.8057\n",
      "Epoch 824/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9780 - loss: 0.0433 - val_accuracy: 0.6351 - val_loss: 2.9264\n",
      "Epoch 825/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.8302 - loss: 0.6173 - val_accuracy: 0.6351 - val_loss: 2.8940\n",
      "Epoch 826/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9000 - loss: 0.2794 - val_accuracy: 0.6303 - val_loss: 2.8247\n",
      "Epoch 827/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9511 - loss: 0.1466 - val_accuracy: 0.6351 - val_loss: 2.9252\n",
      "Epoch 828/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9485 - loss: 0.1143 - val_accuracy: 0.6303 - val_loss: 2.9018\n",
      "Epoch 829/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - accuracy: 0.9783 - loss: 0.0462 - val_accuracy: 0.6303 - val_loss: 2.9741\n",
      "Epoch 830/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9817 - loss: 0.0443 - val_accuracy: 0.6209 - val_loss: 3.0966\n",
      "Epoch 831/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.9763 - loss: 0.0558 - val_accuracy: 0.6256 - val_loss: 2.9623\n",
      "Epoch 832/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9876 - loss: 0.0360 - val_accuracy: 0.6161 - val_loss: 3.0098\n",
      "Epoch 833/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9625 - loss: 0.0995 - val_accuracy: 0.6682 - val_loss: 2.8243\n",
      "Epoch 834/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9373 - loss: 0.1490 - val_accuracy: 0.6398 - val_loss: 2.8554\n",
      "Epoch 835/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9769 - loss: 0.0609 - val_accuracy: 0.6161 - val_loss: 2.9699\n",
      "Epoch 836/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9264 - loss: 0.1833 - val_accuracy: 0.6493 - val_loss: 2.4878\n",
      "Epoch 837/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9509 - loss: 0.1274 - val_accuracy: 0.6398 - val_loss: 2.6098\n",
      "Epoch 838/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9714 - loss: 0.0864 - val_accuracy: 0.6256 - val_loss: 3.0011\n",
      "Epoch 839/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9800 - loss: 0.0500 - val_accuracy: 0.6209 - val_loss: 3.0788\n",
      "Epoch 840/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9874 - loss: 0.0369 - val_accuracy: 0.6303 - val_loss: 3.0223\n",
      "Epoch 841/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.9856 - loss: 0.0430 - val_accuracy: 0.6303 - val_loss: 2.9551\n",
      "Epoch 842/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9825 - loss: 0.0412 - val_accuracy: 0.6303 - val_loss: 2.9711\n",
      "Epoch 843/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9730 - loss: 0.0432 - val_accuracy: 0.6303 - val_loss: 2.9986\n",
      "Epoch 844/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9756 - loss: 0.0410 - val_accuracy: 0.6445 - val_loss: 3.0237\n",
      "Epoch 845/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9821 - loss: 0.0410 - val_accuracy: 0.6351 - val_loss: 3.0301\n",
      "Epoch 846/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9660 - loss: 0.0526 - val_accuracy: 0.6303 - val_loss: 3.0983\n",
      "Epoch 847/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9853 - loss: 0.0359 - val_accuracy: 0.6351 - val_loss: 3.1212\n",
      "Epoch 848/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9746 - loss: 0.0507 - val_accuracy: 0.6256 - val_loss: 2.8834\n",
      "Epoch 849/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9594 - loss: 0.0777 - val_accuracy: 0.6256 - val_loss: 3.0314\n",
      "Epoch 850/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9814 - loss: 0.0394 - val_accuracy: 0.6398 - val_loss: 3.0849\n",
      "Epoch 851/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9790 - loss: 0.0421 - val_accuracy: 0.6493 - val_loss: 3.0611\n",
      "Epoch 852/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9804 - loss: 0.0425 - val_accuracy: 0.6493 - val_loss: 3.0612\n",
      "Epoch 853/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9615 - loss: 0.0769 - val_accuracy: 0.6351 - val_loss: 3.1630\n",
      "Epoch 854/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8960 - loss: 0.3607 - val_accuracy: 0.6682 - val_loss: 3.3180\n",
      "Epoch 855/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8942 - loss: 0.2826 - val_accuracy: 0.6493 - val_loss: 2.9545\n",
      "Epoch 856/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9247 - loss: 0.1724 - val_accuracy: 0.6209 - val_loss: 2.9606\n",
      "Epoch 857/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8762 - loss: 0.3672 - val_accuracy: 0.6588 - val_loss: 2.9553\n",
      "Epoch 858/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.9015 - loss: 0.2920 - val_accuracy: 0.6066 - val_loss: 2.8501\n",
      "Epoch 859/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.9172 - loss: 0.2097 - val_accuracy: 0.6730 - val_loss: 2.3336\n",
      "Epoch 860/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9445 - loss: 0.1772 - val_accuracy: 0.6398 - val_loss: 2.8213\n",
      "Epoch 861/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9633 - loss: 0.1212 - val_accuracy: 0.6351 - val_loss: 2.9273\n",
      "Epoch 862/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9498 - loss: 0.1167 - val_accuracy: 0.6445 - val_loss: 2.6927\n",
      "Epoch 863/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - accuracy: 0.9672 - loss: 0.0846 - val_accuracy: 0.6635 - val_loss: 3.0090\n",
      "Epoch 864/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9638 - loss: 0.0894 - val_accuracy: 0.6588 - val_loss: 3.1342\n",
      "Epoch 865/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9721 - loss: 0.0664 - val_accuracy: 0.6445 - val_loss: 3.0906\n",
      "Epoch 866/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9769 - loss: 0.0525 - val_accuracy: 0.6256 - val_loss: 3.0653\n",
      "Epoch 867/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9533 - loss: 0.0825 - val_accuracy: 0.6303 - val_loss: 3.0196\n",
      "Epoch 868/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9728 - loss: 0.0544 - val_accuracy: 0.6351 - val_loss: 3.0060\n",
      "Epoch 869/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9633 - loss: 0.0708 - val_accuracy: 0.6351 - val_loss: 3.1849\n",
      "Epoch 870/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9777 - loss: 0.0519 - val_accuracy: 0.6209 - val_loss: 3.3270\n",
      "Epoch 871/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9725 - loss: 0.0549 - val_accuracy: 0.6493 - val_loss: 3.1292\n",
      "Epoch 872/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9683 - loss: 0.0632 - val_accuracy: 0.6256 - val_loss: 3.3261\n",
      "Epoch 873/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9482 - loss: 0.1384 - val_accuracy: 0.6445 - val_loss: 3.0005\n",
      "Epoch 874/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9510 - loss: 0.0974 - val_accuracy: 0.6303 - val_loss: 3.0750\n",
      "Epoch 875/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9763 - loss: 0.0572 - val_accuracy: 0.6019 - val_loss: 2.9559\n",
      "Epoch 876/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9769 - loss: 0.0669 - val_accuracy: 0.6351 - val_loss: 2.9223\n",
      "Epoch 877/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9827 - loss: 0.0441 - val_accuracy: 0.6351 - val_loss: 2.9475\n",
      "Epoch 878/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9638 - loss: 0.0661 - val_accuracy: 0.6209 - val_loss: 2.9980\n",
      "Epoch 879/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9791 - loss: 0.0539 - val_accuracy: 0.6209 - val_loss: 3.0109\n",
      "Epoch 880/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9613 - loss: 0.0819 - val_accuracy: 0.6398 - val_loss: 3.2243\n",
      "Epoch 881/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9779 - loss: 0.0613 - val_accuracy: 0.6161 - val_loss: 3.3077\n",
      "Epoch 882/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9526 - loss: 0.1973 - val_accuracy: 0.6398 - val_loss: 3.0233\n",
      "Epoch 883/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9343 - loss: 0.1384 - val_accuracy: 0.6493 - val_loss: 3.1438\n",
      "Epoch 884/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9372 - loss: 0.1552 - val_accuracy: 0.6209 - val_loss: 3.2504\n",
      "Epoch 885/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9519 - loss: 0.0788 - val_accuracy: 0.6256 - val_loss: 3.2949\n",
      "Epoch 886/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9716 - loss: 0.0818 - val_accuracy: 0.6256 - val_loss: 3.1058\n",
      "Epoch 887/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9741 - loss: 0.0499 - val_accuracy: 0.6398 - val_loss: 3.2715\n",
      "Epoch 888/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9861 - loss: 0.0379 - val_accuracy: 0.6445 - val_loss: 3.2251\n",
      "Epoch 889/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9878 - loss: 0.0299 - val_accuracy: 0.6445 - val_loss: 3.2448\n",
      "Epoch 890/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9772 - loss: 0.0517 - val_accuracy: 0.6445 - val_loss: 3.4208\n",
      "Epoch 891/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9823 - loss: 0.0394 - val_accuracy: 0.6398 - val_loss: 3.1398\n",
      "Epoch 892/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9758 - loss: 0.0440 - val_accuracy: 0.6256 - val_loss: 3.4541\n",
      "Epoch 893/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9667 - loss: 0.0611 - val_accuracy: 0.6445 - val_loss: 3.3113\n",
      "Epoch 894/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9606 - loss: 0.0930 - val_accuracy: 0.6445 - val_loss: 3.1965\n",
      "Epoch 895/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9506 - loss: 0.1361 - val_accuracy: 0.6445 - val_loss: 3.2484\n",
      "Epoch 896/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8609 - loss: 0.4878 - val_accuracy: 0.6019 - val_loss: 2.4919\n",
      "Epoch 897/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9310 - loss: 0.2037 - val_accuracy: 0.6209 - val_loss: 2.6588\n",
      "Epoch 898/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9472 - loss: 0.1637 - val_accuracy: 0.6114 - val_loss: 3.0975\n",
      "Epoch 899/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9703 - loss: 0.0784 - val_accuracy: 0.6209 - val_loss: 3.0719\n",
      "Epoch 900/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9642 - loss: 0.0696 - val_accuracy: 0.6540 - val_loss: 3.1543\n",
      "Epoch 901/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9699 - loss: 0.0664 - val_accuracy: 0.6256 - val_loss: 2.9824\n",
      "Epoch 902/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9755 - loss: 0.0489 - val_accuracy: 0.6351 - val_loss: 3.0432\n",
      "Epoch 903/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9801 - loss: 0.0407 - val_accuracy: 0.6303 - val_loss: 3.1996\n",
      "Epoch 904/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9828 - loss: 0.0410 - val_accuracy: 0.6209 - val_loss: 3.1994\n",
      "Epoch 905/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9796 - loss: 0.0389 - val_accuracy: 0.6303 - val_loss: 3.1861\n",
      "Epoch 906/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9821 - loss: 0.0329 - val_accuracy: 0.6351 - val_loss: 3.1363\n",
      "Epoch 907/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9807 - loss: 0.0389 - val_accuracy: 0.6398 - val_loss: 3.1669\n",
      "Epoch 908/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9783 - loss: 0.0396 - val_accuracy: 0.6256 - val_loss: 3.1326\n",
      "Epoch 909/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9728 - loss: 0.0425 - val_accuracy: 0.6256 - val_loss: 3.2134\n",
      "Epoch 910/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9807 - loss: 0.0363 - val_accuracy: 0.6256 - val_loss: 3.1702\n",
      "Epoch 911/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9821 - loss: 0.0429 - val_accuracy: 0.6351 - val_loss: 3.1731\n",
      "Epoch 912/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9766 - loss: 0.0423 - val_accuracy: 0.6303 - val_loss: 3.2330\n",
      "Epoch 913/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9627 - loss: 0.0815 - val_accuracy: 0.6256 - val_loss: 3.5139\n",
      "Epoch 914/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9187 - loss: 0.2196 - val_accuracy: 0.6445 - val_loss: 2.6445\n",
      "Epoch 915/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8441 - loss: 0.5603 - val_accuracy: 0.6161 - val_loss: 2.8334\n",
      "Epoch 916/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9297 - loss: 0.1659 - val_accuracy: 0.6398 - val_loss: 2.6900\n",
      "Epoch 917/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9516 - loss: 0.1262 - val_accuracy: 0.6398 - val_loss: 2.5106\n",
      "Epoch 918/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9061 - loss: 0.2476 - val_accuracy: 0.6256 - val_loss: 3.2761\n",
      "Epoch 919/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9440 - loss: 0.1172 - val_accuracy: 0.6445 - val_loss: 2.9069\n",
      "Epoch 920/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9692 - loss: 0.0648 - val_accuracy: 0.6019 - val_loss: 3.0699\n",
      "Epoch 921/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9765 - loss: 0.0604 - val_accuracy: 0.6114 - val_loss: 2.8870\n",
      "Epoch 922/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9756 - loss: 0.0474 - val_accuracy: 0.6493 - val_loss: 2.9360\n",
      "Epoch 923/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9843 - loss: 0.0448 - val_accuracy: 0.6398 - val_loss: 2.9280\n",
      "Epoch 924/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9864 - loss: 0.0378 - val_accuracy: 0.6398 - val_loss: 2.9517\n",
      "Epoch 925/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9843 - loss: 0.0331 - val_accuracy: 0.6540 - val_loss: 2.9341\n",
      "Epoch 926/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9640 - loss: 0.0658 - val_accuracy: 0.6351 - val_loss: 3.0064\n",
      "Epoch 927/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 5ms/step - accuracy: 0.9722 - loss: 0.0551 - val_accuracy: 0.6256 - val_loss: 3.0959\n",
      "Epoch 928/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9740 - loss: 0.0508 - val_accuracy: 0.6351 - val_loss: 2.9691\n",
      "Epoch 929/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9707 - loss: 0.0517 - val_accuracy: 0.6351 - val_loss: 3.1212\n",
      "Epoch 930/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9699 - loss: 0.0544 - val_accuracy: 0.6398 - val_loss: 3.0952\n",
      "Epoch 931/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9792 - loss: 0.0376 - val_accuracy: 0.6351 - val_loss: 3.0449\n",
      "Epoch 932/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9793 - loss: 0.0417 - val_accuracy: 0.6256 - val_loss: 3.0718\n",
      "Epoch 933/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9861 - loss: 0.0348 - val_accuracy: 0.6256 - val_loss: 3.0895\n",
      "Epoch 934/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9864 - loss: 0.0366 - val_accuracy: 0.6445 - val_loss: 3.0813\n",
      "Epoch 935/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9711 - loss: 0.0403 - val_accuracy: 0.6161 - val_loss: 3.1325\n",
      "Epoch 936/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9846 - loss: 0.0449 - val_accuracy: 0.6303 - val_loss: 3.1602\n",
      "Epoch 937/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9623 - loss: 0.0967 - val_accuracy: 0.6777 - val_loss: 3.1149\n",
      "Epoch 938/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9313 - loss: 0.1874 - val_accuracy: 0.6161 - val_loss: 2.7330\n",
      "Epoch 939/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8576 - loss: 0.4783 - val_accuracy: 0.5972 - val_loss: 2.8811\n",
      "Epoch 940/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9048 - loss: 0.2605 - val_accuracy: 0.6493 - val_loss: 3.0580\n",
      "Epoch 941/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9507 - loss: 0.1351 - val_accuracy: 0.6066 - val_loss: 2.7340\n",
      "Epoch 942/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 4ms/step - accuracy: 0.9746 - loss: 0.0649 - val_accuracy: 0.6209 - val_loss: 2.8738\n",
      "Epoch 943/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9818 - loss: 0.0431 - val_accuracy: 0.6256 - val_loss: 2.9981\n",
      "Epoch 944/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9680 - loss: 0.0568 - val_accuracy: 0.6066 - val_loss: 3.0289\n",
      "Epoch 945/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9803 - loss: 0.0441 - val_accuracy: 0.6161 - val_loss: 2.9704\n",
      "Epoch 946/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9843 - loss: 0.0306 - val_accuracy: 0.6161 - val_loss: 2.9566\n",
      "Epoch 947/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9825 - loss: 0.0334 - val_accuracy: 0.6303 - val_loss: 2.9529\n",
      "Epoch 948/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9759 - loss: 0.0451 - val_accuracy: 0.6256 - val_loss: 2.9643\n",
      "Epoch 949/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9835 - loss: 0.0331 - val_accuracy: 0.6161 - val_loss: 3.0344\n",
      "Epoch 950/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9779 - loss: 0.0404 - val_accuracy: 0.6161 - val_loss: 2.9899\n",
      "Epoch 951/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9840 - loss: 0.0356 - val_accuracy: 0.6256 - val_loss: 2.9956\n",
      "Epoch 952/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9825 - loss: 0.0375 - val_accuracy: 0.6256 - val_loss: 3.0268\n",
      "Epoch 953/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9845 - loss: 0.0325 - val_accuracy: 0.6209 - val_loss: 3.1008\n",
      "Epoch 954/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9786 - loss: 0.0433 - val_accuracy: 0.6209 - val_loss: 3.1222\n",
      "Epoch 955/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9846 - loss: 0.0309 - val_accuracy: 0.6303 - val_loss: 3.0250\n",
      "Epoch 956/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9753 - loss: 0.0395 - val_accuracy: 0.6209 - val_loss: 3.1597\n",
      "Epoch 957/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9839 - loss: 0.0367 - val_accuracy: 0.6161 - val_loss: 3.0706\n",
      "Epoch 958/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9831 - loss: 0.0345 - val_accuracy: 0.6351 - val_loss: 3.2466\n",
      "Epoch 959/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9807 - loss: 0.0480 - val_accuracy: 0.6540 - val_loss: 3.2422\n",
      "Epoch 960/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8744 - loss: 0.4490 - val_accuracy: 0.6066 - val_loss: 2.7725\n",
      "Epoch 961/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9018 - loss: 0.3401 - val_accuracy: 0.6445 - val_loss: 2.7033\n",
      "Epoch 962/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9280 - loss: 0.1755 - val_accuracy: 0.6351 - val_loss: 2.6429\n",
      "Epoch 963/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.8693 - loss: 0.4470 - val_accuracy: 0.6303 - val_loss: 2.8726\n",
      "Epoch 964/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9275 - loss: 0.1867 - val_accuracy: 0.6303 - val_loss: 2.7642\n",
      "Epoch 965/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9700 - loss: 0.0537 - val_accuracy: 0.6351 - val_loss: 2.6197\n",
      "Epoch 966/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9471 - loss: 0.1465 - val_accuracy: 0.6303 - val_loss: 2.6103\n",
      "Epoch 967/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9330 - loss: 0.2172 - val_accuracy: 0.6114 - val_loss: 2.7926\n",
      "Epoch 968/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9640 - loss: 0.0800 - val_accuracy: 0.6303 - val_loss: 2.7711\n",
      "Epoch 969/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9697 - loss: 0.0579 - val_accuracy: 0.6303 - val_loss: 2.7852\n",
      "Epoch 970/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9723 - loss: 0.0590 - val_accuracy: 0.6303 - val_loss: 2.9528\n",
      "Epoch 971/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9855 - loss: 0.0381 - val_accuracy: 0.6351 - val_loss: 2.9295\n",
      "Epoch 972/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 6ms/step - accuracy: 0.9707 - loss: 0.0582 - val_accuracy: 0.6445 - val_loss: 3.0069\n",
      "Epoch 973/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9741 - loss: 0.0625 - val_accuracy: 0.6445 - val_loss: 2.5332\n",
      "Epoch 974/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9689 - loss: 0.0700 - val_accuracy: 0.6398 - val_loss: 2.6997\n",
      "Epoch 975/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9742 - loss: 0.0524 - val_accuracy: 0.6303 - val_loss: 2.9148\n",
      "Epoch 976/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9870 - loss: 0.0307 - val_accuracy: 0.6351 - val_loss: 2.8900\n",
      "Epoch 977/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9718 - loss: 0.0559 - val_accuracy: 0.6161 - val_loss: 2.8200\n",
      "Epoch 978/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9834 - loss: 0.0410 - val_accuracy: 0.6303 - val_loss: 2.9715\n",
      "Epoch 979/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9761 - loss: 0.0401 - val_accuracy: 0.6398 - val_loss: 2.9290\n",
      "Epoch 980/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9721 - loss: 0.0440 - val_accuracy: 0.6445 - val_loss: 2.9366\n",
      "Epoch 981/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9733 - loss: 0.0463 - val_accuracy: 0.6540 - val_loss: 2.8121\n",
      "Epoch 982/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9744 - loss: 0.0593 - val_accuracy: 0.6588 - val_loss: 3.0585\n",
      "Epoch 983/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9777 - loss: 0.0425 - val_accuracy: 0.6209 - val_loss: 3.1562\n",
      "Epoch 984/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9791 - loss: 0.0501 - val_accuracy: 0.6351 - val_loss: 3.0429\n",
      "Epoch 985/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9694 - loss: 0.0435 - val_accuracy: 0.6398 - val_loss: 3.0140\n",
      "Epoch 986/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9825 - loss: 0.0353 - val_accuracy: 0.6445 - val_loss: 3.0342\n",
      "Epoch 987/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9785 - loss: 0.0381 - val_accuracy: 0.6398 - val_loss: 3.1812\n",
      "Epoch 988/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9768 - loss: 0.0380 - val_accuracy: 0.6445 - val_loss: 3.0169\n",
      "Epoch 989/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9830 - loss: 0.0331 - val_accuracy: 0.6351 - val_loss: 3.1924\n",
      "Epoch 990/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9707 - loss: 0.0616 - val_accuracy: 0.6398 - val_loss: 3.3306\n",
      "Epoch 991/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9277 - loss: 0.2091 - val_accuracy: 0.6777 - val_loss: 3.2814\n",
      "Epoch 992/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.8493 - loss: 0.7750 - val_accuracy: 0.6256 - val_loss: 2.5892\n",
      "Epoch 993/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9040 - loss: 0.2691 - val_accuracy: 0.6445 - val_loss: 2.8516\n",
      "Epoch 994/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9347 - loss: 0.2006 - val_accuracy: 0.6493 - val_loss: 3.1450\n",
      "Epoch 995/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9447 - loss: 0.1345 - val_accuracy: 0.6161 - val_loss: 3.0142\n",
      "Epoch 996/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9662 - loss: 0.0722 - val_accuracy: 0.6445 - val_loss: 3.0695\n",
      "Epoch 997/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9796 - loss: 0.0479 - val_accuracy: 0.6445 - val_loss: 3.0799\n",
      "Epoch 998/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - accuracy: 0.9821 - loss: 0.0450 - val_accuracy: 0.6682 - val_loss: 3.0572\n",
      "Epoch 999/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.9823 - loss: 0.0485 - val_accuracy: 0.6303 - val_loss: 3.1119\n",
      "Epoch 1000/1000\n",
      "\u001b[1m85/85\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - accuracy: 0.9829 - loss: 0.0352 - val_accuracy: 0.6303 - val_loss: 3.1702\n",
      "\u001b[1m9/9\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - accuracy: 0.6612 - loss: 3.1160 \n",
      "Test loss: 3.112208843231201, Test accuracy: 0.6425855755805969\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "from tensorflow.keras.optimizers import Adam\n",
    "\n",
    "\n",
    "\n",
    "# 定义一个简单的神经网络模型进行二分类\n",
    "model = Sequential([\n",
    "    Dense(64, activation='relu', input_shape=(X_train.shape[1],)),\n",
    "    Dense(32, activation='relu'),\n",
    "    Dense(1, activation='sigmoid')\n",
    "])\n",
    "\n",
    "# 编译模型\n",
    "model.compile(optimizer=Adam(learning_rate=0.001), loss='binary_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "# 训练模型\n",
    "history = model.fit(X_train, y_train, epochs=1000, batch_size=10, validation_split=0.2, verbose=1)\n",
    "\n",
    "# 评估模型\n",
    "loss, accuracy = model.evaluate(X_test, y_test)\n",
    "print(f'Test loss: {loss}, Test accuracy: {accuracy}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 1000x600 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# 设定Seaborn的样式\n",
    "sns.set(style='whitegrid')\n",
    "# 设置图表大小\n",
    "plt.figure(figsize=(10, 6))\n",
    "# Adjusting the plot based on user feedback\n",
    "# Now making the markers hollow and continuing the code from where it left\n",
    "\n",
    "# Set the figure size to match the user's plot\n",
    "\n",
    "# Create a plot object and the first y-axis\n",
    "fig, ax1 = plt.subplots()\n",
    "\n",
    "# Set the first y-axis label and color\n",
    "ax1.set_xlabel('Epochs')\n",
    "ax1.set_ylabel('Accuracy', color='tab:blue')\n",
    "ax1.plot(history.history['accuracy'], label='Training Accuracy', marker='o', fillstyle='none', color='tab:blue')\n",
    "ax1.plot(history.history['val_accuracy'], label='Validation Accuracy', marker='o', fillstyle='none', color='tab:blue')\n",
    "ax1.tick_params(axis='y', labelcolor='tab:blue')\n",
    "ax1.legend(loc='upper left')\n",
    "\n",
    "# Create the second y-axis sharing the same x-axis\n",
    "ax2 = ax1.twinx()  \n",
    "\n",
    "# Set the second y-axis label and color\n",
    "ax2.set_ylabel('Loss', color='tab:red')  \n",
    "ax2.plot(history.history['loss'], label='Training Loss', marker='o', linestyle='--', fillstyle='none', color='tab:red')\n",
    "ax2.plot(history.history['val_loss'], label='Validation Loss', marker='o', linestyle='--', fillstyle='none', color='tab:red')\n",
    "ax2.tick_params(axis='y', labelcolor='tab:red')\n",
    "ax2.legend(loc='upper right')\n",
    "\n",
    "# Show the title and plot\n",
    "plt.title('Training and Validation Accuracy and Loss for Neural Networks')\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x1000 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# 计算相关性矩阵\n",
    "correlation_matrix = all_data.corr()\n",
    "\n",
    "# 使用 seaborn 绘制热力图\n",
    "plt.figure(figsize=(12, 10))  # 调整图像大小\n",
    "sns.heatmap(correlation_matrix, annot=False, cmap='coolwarm',\n",
    "            linewidths=0.5, linecolor='gray',  # 增加网格线以提高可读性\n",
    "            cbar_kws={\"shrink\": .8})  # 调整颜色条大小\n",
    "\n",
    "# 隐藏坐标轴的标签\n",
    "plt.xticks()\n",
    "plt.yticks()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['team_1_WinRate', 'team_1_FGM', 'team_1_FGA', 'team_1_FGM3',\n",
       "       'team_1_FGA3', 'team_1_FTM', 'team_1_FTA', 'team_1_OR', 'team_1_DR',\n",
       "       'team_1_Ast', 'team_1_TO', 'team_1_Stl', 'team_1_Blk', 'team_1_PF',\n",
       "       'team_1_HighestRank', 'team_1_TopFourRank', 'team_1_BottomFourRank',\n",
       "       'team_1_MedianRank', 'team_1_LowestRank', 'team_1_FinalRankDay133',\n",
       "       'team_2_WinRate', 'team_2_FGM', 'team_2_FGA', 'team_2_FGM3',\n",
       "       'team_2_FGA3', 'team_2_FTM', 'team_2_FTA', 'team_2_OR', 'team_2_DR',\n",
       "       'team_2_Ast', 'team_2_TO', 'team_2_Stl', 'team_2_Blk', 'team_2_PF',\n",
       "       'team_2_HighestRank', 'team_2_TopFourRank', 'team_2_BottomFourRank',\n",
       "       'team_2_MedianRank', 'team_2_LowestRank', 'team_2_FinalRankDay133',\n",
       "       'result'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_data.columns"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
